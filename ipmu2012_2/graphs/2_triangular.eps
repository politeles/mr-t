%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 14.05 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
50 309 299 81 rc
q
q
53 312 294 38 rc
q
3.00000 w
[ 1.00000 0 0 1.00000 55.0000 323.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -55.0000 -323.000 ] concat
Q
[ 1.00000 0 0 1.00000 53.0000 312.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 256 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
56.4062 8.59375 l
56.4062 10.9687 l
47.0625 10.9687 l
47.0625 18.4843 l
54.9062 18.4843 l
54.9062 20.8281 l
47.0625 20.8281 l
47.0625 31.0000 l
43.8906 31.0000 l
h
71.2656 31.0000 m
71.2656 27.9062 l
69.6822 30.2187 67.7604 31.3750 65.5000 31.3750  c
64.0625 31.3750 62.9192 30.9244 62.0703 30.0234  c
61.2213 29.1224 60.7968 27.9062 60.7968 26.3750  c
60.7968 14.5625 l
63.7812 14.5625 l
63.7812 25.4062 l
63.7812 26.6354 63.9609 27.5104 64.3203 28.0312  c
64.6796 28.5520 65.2760 28.8125 66.1093 28.8125  c
67.9322 28.8125 69.6510 27.6145 71.2656 25.2187  c
71.2656 14.5625 l
74.2343 14.5625 l
74.2343 31.0000 l
71.2656 31.0000 l
h
78.8593 31.0000 m
78.8593 28.7656 l
89.0312 16.7968 l
79.3281 16.7968 l
79.3281 14.5625 l
92.7187 14.5625 l
92.7187 16.7968 l
82.5468 28.7656 l
92.9062 28.7656 l
92.9062 31.0000 l
78.8593 31.0000 l
h
96.8593 31.0000 m
96.8593 28.7656 l
107.031 16.7968 l
97.3281 16.7968 l
97.3281 14.5625 l
110.718 14.5625 l
110.718 16.7968 l
100.546 28.7656 l
110.906 28.7656 l
110.906 31.0000 l
96.8593 31.0000 l
h
116.937 36.9843 m
119.593 31.0000 l
113.250 14.5625 l
116.468 14.5625 l
121.171 26.9375 l
126.203 14.5625 l
129.015 14.5625 l
120.031 36.9843 l
116.937 36.9843 l
h
141.890 31.0000 m
141.890 8.59375 l
145.015 8.59375 l
156.281 25.9062 l
156.281 8.59375 l
159.015 8.59375 l
159.015 31.0000 l
155.906 31.0000 l
144.609 13.7031 l
144.609 31.0000 l
141.890 31.0000 l
h
175.265 31.0000 m
175.265 27.9062 l
173.682 30.2187 171.760 31.3750 169.500 31.3750  c
168.062 31.3750 166.919 30.9244 166.070 30.0234  c
165.221 29.1224 164.796 27.9062 164.796 26.3750  c
164.796 14.5625 l
167.781 14.5625 l
167.781 25.4062 l
167.781 26.6354 167.960 27.5104 168.320 28.0312  c
168.679 28.5520 169.276 28.8125 170.109 28.8125  c
171.932 28.8125 173.651 27.6145 175.265 25.2187  c
175.265 14.5625 l
178.234 14.5625 l
178.234 31.0000 l
175.265 31.0000 l
h
183.984 31.0000 m
183.984 14.5625 l
186.968 14.5625 l
186.968 17.6562 l
188.416 15.3541 190.281 14.2031 192.562 14.2031  c
194.760 14.2031 196.260 15.3541 197.062 17.6562  c
198.468 15.3437 200.302 14.1875 202.562 14.1875  c
204.020 14.1875 205.148 14.6119 205.945 15.4609  c
206.742 16.3099 207.140 17.5052 207.140 19.0468  c
207.140 31.0000 l
204.140 31.0000 l
204.140 19.5156 l
204.140 17.6406 203.401 16.7031 201.921 16.7031  c
200.380 16.7031 198.760 17.7968 197.062 19.9843  c
197.062 31.0000 l
194.062 31.0000 l
194.062 19.5156 l
194.062 17.6302 193.307 16.6875 191.796 16.6875  c
190.286 16.6875 188.677 17.7864 186.968 19.9843  c
186.968 31.0000 l
183.984 31.0000 l
h
212.984 31.1875 m
212.984 7.09375 l
215.968 7.09375 l
215.968 17.6562 l
217.187 15.3541 219.015 14.2031 221.453 14.2031  c
223.432 14.2031 224.989 14.9244 226.125 16.3671  c
227.260 17.8099 227.828 19.7812 227.828 22.2812  c
227.828 25.0104 227.184 27.2083 225.898 28.8750  c
224.612 30.5416 222.921 31.3750 220.828 31.3750  c
218.880 31.3750 217.260 30.6302 215.968 29.1406  c
215.593 31.1875 l
212.984 31.1875 l
h
215.968 27.0781 m
217.500 28.4531 218.963 29.1406 220.359 29.1406  c
223.224 29.1406 224.656 26.9531 224.656 22.5781  c
224.656 18.7239 223.385 16.7968 220.843 16.7968  c
219.177 16.7968 217.552 17.7031 215.968 19.5156  c
215.968 27.0781 l
h
245.031 30.4687 m
243.031 31.0729 241.322 31.3750 239.906 31.3750  c
237.479 31.3750 235.502 30.5703 233.976 28.9609  c
232.450 27.3515 231.687 25.2656 231.687 22.7031  c
231.687 20.2135 232.359 18.1718 233.703 16.5781  c
235.046 14.9843 236.770 14.1875 238.875 14.1875  c
240.864 14.1875 242.401 14.8932 243.484 16.3046  c
244.567 17.7161 245.109 19.7239 245.109 22.3281  c
245.093 23.2500 l
234.718 23.2500 l
235.156 27.1562 237.067 29.1093 240.453 29.1093  c
241.703 29.1093 243.229 28.7760 245.031 28.1093  c
245.031 30.4687 l
h
234.859 21.0156 m
242.109 21.0156 l
242.109 17.9531 240.968 16.4218 238.687 16.4218  c
236.395 16.4218 235.119 17.9531 234.859 21.0156  c
h
249.984 31.0000 m
249.984 14.5625 l
252.968 14.5625 l
252.968 17.6562 l
254.145 15.3541 255.859 14.2031 258.109 14.2031  c
258.411 14.2031 258.729 14.2291 259.062 14.2812  c
259.062 17.0625 l
258.552 16.8854 258.099 16.7968 257.703 16.7968  c
255.817 16.7968 254.239 17.9166 252.968 20.1562  c
252.968 31.0000 l
249.984 31.0000 l
h
270.250 31.0000 m
277.671 19.7500 l
270.609 8.59375 l
274.359 8.59375 l
279.750 17.0468 l
285.406 8.59375 l
288.406 8.59375 l
281.250 19.4218 l
288.593 31.0000 l
284.828 31.0000 l
279.140 22.1093 l
273.250 31.0000 l
270.250 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
294.000 38.0000 l
294.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 53.0000 312.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -53.0000 -312.000 ] concat
cliprestore
newpath
50.0000 309.000 m
50.0000 390.000 l
349.000 390.000 l
349.000 309.000 l
h
W
Q
q
53 349 294 38 rc
q
3.00000 w
0.752941 0.752941 0.752941 RG
[ 1.00000 0 0 1.00000 55.0000 360.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -55.0000 -360.000 ] concat
Q
[ 1.00000 0 0 1.00000 53.0000 349.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 256 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
56.4062 8.59375 l
56.4062 10.9687 l
47.0625 10.9687 l
47.0625 18.4843 l
54.9062 18.4843 l
54.9062 20.8281 l
47.0625 20.8281 l
47.0625 31.0000 l
43.8906 31.0000 l
h
71.2656 31.0000 m
71.2656 27.9062 l
69.6822 30.2187 67.7604 31.3750 65.5000 31.3750  c
64.0625 31.3750 62.9192 30.9244 62.0703 30.0234  c
61.2213 29.1224 60.7968 27.9062 60.7968 26.3750  c
60.7968 14.5625 l
63.7812 14.5625 l
63.7812 25.4062 l
63.7812 26.6354 63.9609 27.5104 64.3203 28.0312  c
64.6796 28.5520 65.2760 28.8125 66.1093 28.8125  c
67.9322 28.8125 69.6510 27.6145 71.2656 25.2187  c
71.2656 14.5625 l
74.2343 14.5625 l
74.2343 31.0000 l
71.2656 31.0000 l
h
78.8593 31.0000 m
78.8593 28.7656 l
89.0312 16.7968 l
79.3281 16.7968 l
79.3281 14.5625 l
92.7187 14.5625 l
92.7187 16.7968 l
82.5468 28.7656 l
92.9062 28.7656 l
92.9062 31.0000 l
78.8593 31.0000 l
h
96.8593 31.0000 m
96.8593 28.7656 l
107.031 16.7968 l
97.3281 16.7968 l
97.3281 14.5625 l
110.718 14.5625 l
110.718 16.7968 l
100.546 28.7656 l
110.906 28.7656 l
110.906 31.0000 l
96.8593 31.0000 l
h
116.937 36.9843 m
119.593 31.0000 l
113.250 14.5625 l
116.468 14.5625 l
121.171 26.9375 l
126.203 14.5625 l
129.015 14.5625 l
120.031 36.9843 l
116.937 36.9843 l
h
141.890 31.0000 m
141.890 8.59375 l
145.015 8.59375 l
156.281 25.9062 l
156.281 8.59375 l
159.015 8.59375 l
159.015 31.0000 l
155.906 31.0000 l
144.609 13.7031 l
144.609 31.0000 l
141.890 31.0000 l
h
175.265 31.0000 m
175.265 27.9062 l
173.682 30.2187 171.760 31.3750 169.500 31.3750  c
168.062 31.3750 166.919 30.9244 166.070 30.0234  c
165.221 29.1224 164.796 27.9062 164.796 26.3750  c
164.796 14.5625 l
167.781 14.5625 l
167.781 25.4062 l
167.781 26.6354 167.960 27.5104 168.320 28.0312  c
168.679 28.5520 169.276 28.8125 170.109 28.8125  c
171.932 28.8125 173.651 27.6145 175.265 25.2187  c
175.265 14.5625 l
178.234 14.5625 l
178.234 31.0000 l
175.265 31.0000 l
h
183.984 31.0000 m
183.984 14.5625 l
186.968 14.5625 l
186.968 17.6562 l
188.416 15.3541 190.281 14.2031 192.562 14.2031  c
194.760 14.2031 196.260 15.3541 197.062 17.6562  c
198.468 15.3437 200.302 14.1875 202.562 14.1875  c
204.020 14.1875 205.148 14.6119 205.945 15.4609  c
206.742 16.3099 207.140 17.5052 207.140 19.0468  c
207.140 31.0000 l
204.140 31.0000 l
204.140 19.5156 l
204.140 17.6406 203.401 16.7031 201.921 16.7031  c
200.380 16.7031 198.760 17.7968 197.062 19.9843  c
197.062 31.0000 l
194.062 31.0000 l
194.062 19.5156 l
194.062 17.6302 193.307 16.6875 191.796 16.6875  c
190.286 16.6875 188.677 17.7864 186.968 19.9843  c
186.968 31.0000 l
183.984 31.0000 l
h
212.984 31.1875 m
212.984 7.09375 l
215.968 7.09375 l
215.968 17.6562 l
217.187 15.3541 219.015 14.2031 221.453 14.2031  c
223.432 14.2031 224.989 14.9244 226.125 16.3671  c
227.260 17.8099 227.828 19.7812 227.828 22.2812  c
227.828 25.0104 227.184 27.2083 225.898 28.8750  c
224.612 30.5416 222.921 31.3750 220.828 31.3750  c
218.880 31.3750 217.260 30.6302 215.968 29.1406  c
215.593 31.1875 l
212.984 31.1875 l
h
215.968 27.0781 m
217.500 28.4531 218.963 29.1406 220.359 29.1406  c
223.224 29.1406 224.656 26.9531 224.656 22.5781  c
224.656 18.7239 223.385 16.7968 220.843 16.7968  c
219.177 16.7968 217.552 17.7031 215.968 19.5156  c
215.968 27.0781 l
h
245.031 30.4687 m
243.031 31.0729 241.322 31.3750 239.906 31.3750  c
237.479 31.3750 235.502 30.5703 233.976 28.9609  c
232.450 27.3515 231.687 25.2656 231.687 22.7031  c
231.687 20.2135 232.359 18.1718 233.703 16.5781  c
235.046 14.9843 236.770 14.1875 238.875 14.1875  c
240.864 14.1875 242.401 14.8932 243.484 16.3046  c
244.567 17.7161 245.109 19.7239 245.109 22.3281  c
245.093 23.2500 l
234.718 23.2500 l
235.156 27.1562 237.067 29.1093 240.453 29.1093  c
241.703 29.1093 243.229 28.7760 245.031 28.1093  c
245.031 30.4687 l
h
234.859 21.0156 m
242.109 21.0156 l
242.109 17.9531 240.968 16.4218 238.687 16.4218  c
236.395 16.4218 235.119 17.9531 234.859 21.0156  c
h
249.984 31.0000 m
249.984 14.5625 l
252.968 14.5625 l
252.968 17.6562 l
254.145 15.3541 255.859 14.2031 258.109 14.2031  c
258.411 14.2031 258.729 14.2291 259.062 14.2812  c
259.062 17.0625 l
258.552 16.8854 258.099 16.7968 257.703 16.7968  c
255.817 16.7968 254.239 17.9166 252.968 20.1562  c
252.968 31.0000 l
249.984 31.0000 l
h
277.734 31.0000 m
277.734 21.6406 l
270.250 8.59375 l
273.890 8.59375 l
279.703 18.7031 l
285.968 8.59375 l
288.921 8.59375 l
280.906 21.5781 l
280.906 31.0000 l
277.734 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
294.000 38.0000 l
294.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 53.0000 349.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -53.0000 -349.000 ] concat
cliprestore
newpath
50.0000 309.000 m
50.0000 390.000 l
349.000 390.000 l
349.000 309.000 l
h
W
Q
Q
2 J
0 j
newpath
51.5000 310.500 m
346.500 310.500 l
346.500 387.500 l
51.5000 387.500 l
51.5000 310.500 l
h
S
0 J
1 j
Q
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 307 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
3.00000 w
99.0000 15.0758 273.949 212.924 rc
newpath
102.000 225.000 m
155.307 225.000 l
155.480 224.766 l
235.152 19.9053 l
235.507 19.1598 l
315.428 224.663 l
315.590 225.000 l
370.179 225.000 l
S
cliprestore
newpath
0 0 m
0 307.000 l
390.000 307.000 l
390.000 0 l
h
W
Q
q
3.00000 w
0.752941 0.752941 0.752941 RG
99.0000 15.0758 273.949 212.924 rc
newpath
102.000 225.000 m
288.555 225.000 l
289.211 223.661 l
342.113 19.6205 l
342.772 23.0717 l
368.341 220.310 l
368.954 225.000 l
S
cliprestore
newpath
0 0 m
0 307.000 l
390.000 307.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
102.000 225.000 m
368.949 225.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
231 270 8 37 rc
Q
cliprestore
newpath
0 0 m
0 307.000 l
390.000 307.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
102.000 225.000 m
102.000 230.200 l
S
Q
q
newpath
155.390 225.000 m
155.390 230.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.578 268.000 m
152.578 265.375 l
153.442 263.354 155.197 261.145 157.843 258.750  c
159.546 257.218 l
161.744 255.229 162.843 253.255 162.843 251.296  c
162.843 250.046 162.468 249.065 161.718 248.351  c
160.968 247.638 159.937 247.281 158.625 247.281  c
157.072 247.281 155.244 247.880 153.140 249.078  c
153.140 246.437 l
155.119 245.500 157.088 245.031 159.046 245.031  c
161.151 245.031 162.838 245.596 164.109 246.726  c
165.380 247.856 166.015 249.359 166.015 251.234  c
166.015 252.567 165.695 253.755 165.054 254.796  c
164.414 255.838 163.218 257.099 161.468 258.578  c
160.328 259.562 l
157.932 261.593 156.546 263.531 156.171 265.375  c
165.906 265.375 l
165.906 268.000 l
152.578 268.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
208.779 225.000 m
208.779 230.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
214.671 268.000 m
214.671 261.656 l
204.593 261.656 l
204.593 259.406 l
214.671 245.593 l
217.468 245.593 l
217.468 259.218 l
220.468 259.218 l
220.468 261.656 l
217.468 261.656 l
217.468 268.000 l
214.671 268.000 l
h
207.515 259.218 m
214.875 259.218 l
214.875 249.265 l
207.515 259.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
262.169 225.000 m
262.169 230.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
262.328 256.390 m
263.755 254.546 265.546 253.625 267.703 253.625  c
269.661 253.625 271.263 254.273 272.507 255.570  c
273.752 256.867 274.375 258.526 274.375 260.546  c
274.375 262.880 273.677 264.799 272.281 266.304  c
270.885 267.809 269.109 268.562 266.953 268.562  c
264.484 268.562 262.554 267.567 261.164 265.578  c
259.773 263.588 259.078 260.828 259.078 257.296  c
259.078 253.411 259.877 250.393 261.476 248.242  c
263.075 246.091 265.328 245.015 268.234 245.015  c
269.567 245.015 271.234 245.302 273.234 245.875  c
273.234 248.468 l
271.119 247.666 269.390 247.265 268.046 247.265  c
264.234 247.265 262.328 250.307 262.328 256.390  c
h
271.375 261.218 m
271.375 259.520 270.994 258.187 270.234 257.218  c
269.474 256.250 268.416 255.765 267.062 255.765  c
265.802 255.765 264.718 256.190 263.812 257.039  c
262.906 257.888 262.453 258.906 262.453 260.093  c
262.453 261.968 262.882 263.474 263.742 264.609  c
264.601 265.744 265.744 266.312 267.171 266.312  c
268.453 266.312 269.474 265.851 270.234 264.929  c
270.994 264.007 271.375 262.770 271.375 261.218  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
315.559 225.000 m
315.559 230.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.125 255.796 m
314.937 254.276 313.843 252.593 313.843 250.750  c
313.843 249.052 314.463 247.671 315.703 246.609  c
316.942 245.546 318.562 245.015 320.562 245.015  c
322.406 245.015 323.901 245.466 325.046 246.367  c
326.192 247.268 326.765 248.432 326.765 249.859  c
326.765 252.036 325.375 254.015 322.593 255.796  c
325.979 257.453 327.671 259.588 327.671 262.203  c
327.671 264.078 326.960 265.606 325.539 266.789  c
324.117 267.971 322.286 268.562 320.046 268.562  c
317.849 268.562 316.070 268.005 314.710 266.890  c
313.351 265.776 312.671 264.307 312.671 262.484  c
312.671 259.807 314.156 257.578 317.125 255.796  c
h
320.921 254.859 m
323.015 253.484 324.062 251.958 324.062 250.281  c
324.062 249.375 323.713 248.648 323.015 248.101  c
322.317 247.554 321.401 247.281 320.265 247.281  c
319.161 247.281 318.265 247.549 317.578 248.085  c
316.890 248.622 316.546 249.322 316.546 250.187  c
316.546 251.020 316.859 251.768 317.484 252.429  c
318.109 253.091 319.255 253.901 320.921 254.859  c
h
318.750 257.015 m
317.552 257.942 316.737 258.752 316.304 259.445  c
315.872 260.138 315.656 260.994 315.656 262.015  c
315.656 263.296 316.070 264.333 316.898 265.125  c
317.726 265.916 318.817 266.312 320.171 266.312  c
321.474 266.312 322.536 265.976 323.359 265.304  c
324.182 264.632 324.593 263.755 324.593 262.671  c
324.593 261.807 324.338 261.072 323.828 260.468  c
323.317 259.864 322.333 259.130 320.875 258.265  c
318.750 257.015 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
368.949 225.000 m
368.949 230.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
357.656 268.000 m
357.656 265.765 l
362.140 265.765 l
362.140 248.078 l
357.656 249.203 l
357.656 246.906 l
365.140 245.031 l
365.140 265.765 l
369.625 265.765 l
369.625 268.000 l
357.656 268.000 l
h
382.718 268.562 m
380.406 268.562 378.536 267.474 377.109 265.296  c
375.682 263.119 374.968 260.281 374.968 256.781  c
374.968 253.250 375.687 250.408 377.125 248.257  c
378.562 246.106 380.458 245.031 382.812 245.031  c
385.156 245.031 387.049 246.106 388.492 248.257  c
389.934 250.408 390.656 253.234 390.656 256.734  c
390.656 260.328 389.934 263.197 388.492 265.343  c
387.049 267.489 385.125 268.562 382.718 268.562  c
h
382.750 266.312 m
385.906 266.312 387.484 263.104 387.484 256.687  c
387.484 250.416 385.927 247.281 382.812 247.281  c
379.697 247.281 378.140 250.447 378.140 256.781  c
378.140 263.135 379.677 266.312 382.750 266.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
128.695 225.000 m
128.695 227.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
182.084 225.000 m
182.084 227.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
235.474 225.000 m
235.474 227.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
288.864 225.000 m
288.864 227.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
342.254 225.000 m
342.254 227.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
102.000 225.000 m
102.000 19.0759 l
S
Q
0 J
1 j
[ 0 -1.00000 1.00000 0 -97.0000 147.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-49 104 139 37 rc
newpath
-38.1406 120.296 m
-39.1875 123.781 l
-38.0833 122.489 -37.1015 121.585 -36.2421 121.070  c
-35.3828 120.554 -34.5052 120.296 -33.6093 120.296  c
-32.7031 120.296 -31.9322 120.653 -31.2968 121.367  c
-30.6614 122.080 -30.3437 123.005 -30.3437 124.140  c
-30.3437 126.359 -31.2474 128.617 -33.0546 130.914  c
-34.8619 133.210 -36.9687 134.359 -39.3750 134.359  c
-39.8750 134.359 -40.3203 134.304 -40.7109 134.195  c
-41.1015 134.085 -41.5364 133.890 -42.0156 133.609  c
-43.1250 137.515 l
-43.3437 138.276 -43.4531 138.776 -43.4531 139.015  c
-43.4531 139.234 -43.3958 139.421 -43.2812 139.578  c
-43.1666 139.734 -42.9791 139.854 -42.7187 139.937  c
-42.4583 140.020 -41.9375 140.062 -41.1562 140.062  c
-41.2968 140.625 l
-48.4218 140.625 l
-48.2656 140.062 l
-47.3281 140.031 -46.6953 139.872 -46.3671 139.585  c
-46.0390 139.299 -45.6927 138.515 -45.3281 137.234  c
-41.5000 123.984 l
-41.2708 123.140 -41.1562 122.619 -41.1562 122.421  c
-41.1562 122.151 -41.2343 121.940 -41.3906 121.789  c
-41.5468 121.638 -41.7864 121.562 -42.1093 121.562  c
-42.4010 121.562 -42.8072 121.593 -43.3281 121.656  c
-43.3281 121.078 l
-38.1406 120.296 l
h
-41.6718 132.406 m
-41.0468 133.156 -40.2031 133.531 -39.1406 133.531  c
-38.6197 133.531 -38.0859 133.385 -37.5390 133.093  c
-36.9921 132.802 -36.4583 132.367 -35.9375 131.789  c
-35.4166 131.210 -34.9505 130.546 -34.5390 129.796  c
-34.1276 129.046 -33.7578 128.161 -33.4296 127.140  c
-33.1015 126.119 -32.9375 125.109 -32.9375 124.109  c
-32.9375 123.307 -33.1224 122.692 -33.4921 122.265  c
-33.8619 121.838 -34.2916 121.625 -34.7812 121.625  c
-35.8750 121.625 -36.9531 122.250 -38.0156 123.500  c
-39.0781 124.750 -39.8593 126.213 -40.3593 127.890  c
-41.6718 132.406 l
h
-14.6718 125.031 m
-14.6718 126.552 -15.0729 128.054 -15.8750 129.539  c
-16.6770 131.023 -17.7942 132.197 -19.2265 133.062  c
-20.6588 133.927 -22.0520 134.359 -23.4062 134.359  c
-24.7812 134.359 -25.9062 133.919 -26.7812 133.039  c
-27.6562 132.158 -28.0937 131.015 -28.0937 129.609  c
-28.0937 128.130 -27.6666 126.643 -26.8125 125.148  c
-25.9583 123.653 -24.8177 122.471 -23.3906 121.601  c
-21.9635 120.731 -20.5833 120.296 -19.2500 120.296  c
-17.9166 120.296 -16.8203 120.737 -15.9609 121.617  c
-15.1015 122.497 -14.6718 123.635 -14.6718 125.031  c
h
-17.1718 124.000 m
-17.1718 123.062 -17.4036 122.343 -17.8671 121.843  c
-18.3307 121.343 -18.9218 121.093 -19.6406 121.093  c
-21.1302 121.093 -22.4974 122.153 -23.7421 124.273  c
-24.9869 126.393 -25.6093 128.505 -25.6093 130.609  c
-25.6093 131.567 -25.3671 132.307 -24.8828 132.828  c
-24.3984 133.349 -23.7864 133.609 -23.0468 133.609  c
-21.6302 133.609 -20.2968 132.552 -19.0468 130.437  c
-17.7968 128.322 -17.1718 126.177 -17.1718 124.000  c
h
-1.75000 120.296 m
-2.67187 124.953 l
-3.23437 124.953 l
-3.28645 123.599 -3.57552 122.614 -4.10156 122.000  c
-4.62760 121.385 -5.27604 121.078 -6.04687 121.078  c
-6.67187 121.078 -7.16927 121.250 -7.53906 121.593  c
-7.90885 121.937 -8.09375 122.349 -8.09375 122.828  c
-8.09375 123.161 -8.02083 123.479 -7.87500 123.781  c
-7.72916 124.083 -7.41145 124.505 -6.92187 125.046  c
-5.60937 126.484 -4.76041 127.567 -4.37500 128.296  c
-3.98958 129.026 -3.79687 129.713 -3.79687 130.359  c
-3.79687 131.401 -4.23437 132.328 -5.10937 133.140  c
-5.98437 133.953 -7.08333 134.359 -8.40625 134.359  c
-9.13541 134.359 -9.97395 134.187 -10.9218 133.843  c
-11.2552 133.729 -11.5156 133.671 -11.7031 133.671  c
-12.1510 133.671 -12.4947 133.901 -12.7343 134.359  c
-13.2812 134.359 l
-12.3593 129.453 l
-11.7968 129.453 l
-11.7447 130.994 -11.4296 132.083 -10.8515 132.718  c
-10.2734 133.354 -9.48437 133.671 -8.48437 133.671  c
-7.72395 133.671 -7.11718 133.455 -6.66406 133.023  c
-6.21093 132.591 -5.98437 132.062 -5.98437 131.437  c
-5.98437 131.041 -6.06770 130.671 -6.23437 130.328  c
-6.51562 129.713 -7.10677 128.872 -8.00781 127.804  c
-8.90885 126.737 -9.48958 125.934 -9.75000 125.398  c
-10.0104 124.862 -10.1406 124.328 -10.1406 123.796  c
-10.1406 122.817 -9.78385 121.989 -9.07031 121.312  c
-8.35677 120.635 -7.44270 120.296 -6.32812 120.296  c
-6.00520 120.296 -5.71354 120.322 -5.45312 120.375  c
-5.30729 120.406 -4.97395 120.520 -4.45312 120.718  c
-3.93229 120.916 -3.58854 121.015 -3.42187 121.015  c
-2.98437 121.015 -2.61979 120.776 -2.32812 120.296  c
-1.75000 120.296 l
h
10.2500 120.296 m
9.32812 124.953 l
8.76562 124.953 l
8.71354 123.599 8.42447 122.614 7.89843 122.000  c
7.37239 121.385 6.72395 121.078 5.95312 121.078  c
5.32812 121.078 4.83072 121.250 4.46093 121.593  c
4.09114 121.937 3.90625 122.349 3.90625 122.828  c
3.90625 123.161 3.97916 123.479 4.12500 123.781  c
4.27083 124.083 4.58854 124.505 5.07812 125.046  c
6.39062 126.484 7.23958 127.567 7.62500 128.296  c
8.01041 129.026 8.20312 129.713 8.20312 130.359  c
8.20312 131.401 7.76562 132.328 6.89062 133.140  c
6.01562 133.953 4.91666 134.359 3.59375 134.359  c
2.86458 134.359 2.02604 134.187 1.07812 133.843  c
0.744792 133.729 0.484375 133.671 0.296875 133.671  c
-0.151042 133.671 -0.494792 133.901 -0.734375 134.359  c
-1.28125 134.359 l
-0.359375 129.453 l
0.203125 129.453 l
0.255208 130.994 0.570313 132.083 1.14843 132.718  c
1.72656 133.354 2.51562 133.671 3.51562 133.671  c
4.27604 133.671 4.88281 133.455 5.33593 133.023  c
5.78906 132.591 6.01562 132.062 6.01562 131.437  c
6.01562 131.041 5.93229 130.671 5.76562 130.328  c
5.48437 129.713 4.89322 128.872 3.99218 127.804  c
3.09114 126.737 2.51041 125.934 2.25000 125.398  c
1.98958 124.862 1.85937 124.328 1.85937 123.796  c
1.85937 122.817 2.21614 121.989 2.92968 121.312  c
3.64322 120.635 4.55729 120.296 5.67187 120.296  c
5.99479 120.296 6.28645 120.322 6.54687 120.375  c
6.69270 120.406 7.02604 120.520 7.54687 120.718  c
8.06770 120.916 8.41145 121.015 8.57812 121.015  c
9.01562 121.015 9.38020 120.776 9.67187 120.296  c
10.2500 120.296 l
h
17.9375 114.296 m
18.3541 114.296 18.7109 114.442 19.0078 114.734  c
19.3046 115.026 19.4531 115.385 19.4531 115.812  c
19.4531 116.218 19.3020 116.570 19.0000 116.867  c
18.6979 117.164 18.3437 117.312 17.9375 117.312  c
17.5208 117.312 17.1640 117.164 16.8671 116.867  c
16.5703 116.570 16.4218 116.218 16.4218 115.812  c
16.4218 115.385 16.5677 115.026 16.8593 114.734  c
17.1510 114.442 17.5104 114.296 17.9375 114.296  c
h
18.1250 120.296 m
15.1250 130.906 l
14.9270 131.625 14.8281 132.057 14.8281 132.203  c
14.8281 132.359 14.8776 132.489 14.9765 132.593  c
15.0755 132.697 15.1875 132.750 15.3125 132.750  c
15.4687 132.750 15.6510 132.666 15.8593 132.500  c
16.4322 132.041 17.0104 131.395 17.5937 130.562  c
18.1250 130.906 l
17.4375 131.958 16.6302 132.843 15.7031 133.562  c
15.0156 134.093 14.3593 134.359 13.7343 134.359  c
13.3281 134.359 12.9921 134.237 12.7265 133.992  c
12.4609 133.747 12.3281 133.437 12.3281 133.062  c
12.3281 132.687 12.4531 132.067 12.7031 131.203  c
14.6718 124.421 l
14.9947 123.307 15.1562 122.609 15.1562 122.328  c
15.1562 122.109 15.0781 121.929 14.9218 121.789  c
14.7656 121.648 14.5520 121.578 14.2812 121.578  c
14.0625 121.578 13.6041 121.630 12.9062 121.734  c
12.9062 121.156 l
18.1250 120.296 l
h
28.9531 112.468 m
25.9687 122.937 l
26.9375 121.927 27.7812 121.234 28.5000 120.859  c
29.2187 120.484 29.9739 120.296 30.7656 120.296  c
31.8697 120.296 32.7760 120.666 33.4843 121.406  c
34.1927 122.145 34.5468 123.145 34.5468 124.406  c
34.5468 126.031 34.0833 127.648 33.1562 129.257  c
32.2291 130.867 31.0625 132.119 29.6562 133.015  c
28.2500 133.911 26.8697 134.359 25.5156 134.359  c
23.9843 134.359 22.4166 133.791 20.8125 132.656  c
25.4218 116.796 l
25.7760 115.578 25.9531 114.864 25.9531 114.656  c
25.9531 114.395 25.8697 114.197 25.7031 114.062  c
25.4739 113.885 25.1302 113.796 24.6718 113.796  c
24.4635 113.796 24.1406 113.828 23.7031 113.890  c
23.7031 113.328 l
28.9531 112.468 l
h
23.0937 132.812 m
24.1041 133.375 24.9895 133.656 25.7500 133.656  c
26.6354 133.656 27.5546 133.330 28.5078 132.679  c
29.4609 132.028 30.2890 130.929 30.9921 129.382  c
31.6953 127.835 32.0468 126.276 32.0468 124.703  c
32.0468 123.776 31.8177 123.049 31.3593 122.523  c
30.9010 121.997 30.3593 121.734 29.7343 121.734  c
28.7968 121.734 27.8776 122.112 26.9765 122.867  c
26.0755 123.622 25.4375 124.666 25.0625 126.000  c
23.0937 132.812 l
h
42.9375 114.296 m
43.3541 114.296 43.7109 114.442 44.0078 114.734  c
44.3046 115.026 44.4531 115.385 44.4531 115.812  c
44.4531 116.218 44.3020 116.570 44.0000 116.867  c
43.6979 117.164 43.3437 117.312 42.9375 117.312  c
42.5208 117.312 42.1640 117.164 41.8671 116.867  c
41.5703 116.570 41.4218 116.218 41.4218 115.812  c
41.4218 115.385 41.5677 115.026 41.8593 114.734  c
42.1510 114.442 42.5104 114.296 42.9375 114.296  c
h
43.1250 120.296 m
40.1250 130.906 l
39.9270 131.625 39.8281 132.057 39.8281 132.203  c
39.8281 132.359 39.8776 132.489 39.9765 132.593  c
40.0755 132.697 40.1875 132.750 40.3125 132.750  c
40.4687 132.750 40.6510 132.666 40.8593 132.500  c
41.4322 132.041 42.0104 131.395 42.5937 130.562  c
43.1250 130.906 l
42.4375 131.958 41.6302 132.843 40.7031 133.562  c
40.0156 134.093 39.3593 134.359 38.7343 134.359  c
38.3281 134.359 37.9921 134.237 37.7265 133.992  c
37.4609 133.747 37.3281 133.437 37.3281 133.062  c
37.3281 132.687 37.4531 132.067 37.7031 131.203  c
39.6718 124.421 l
39.9947 123.307 40.1562 122.609 40.1562 122.328  c
40.1562 122.109 40.0781 121.929 39.9218 121.789  c
39.7656 121.648 39.5520 121.578 39.2812 121.578  c
39.0625 121.578 38.6041 121.630 37.9062 121.734  c
37.9062 121.156 l
43.1250 120.296 l
h
54.2187 112.468 m
49.0468 130.484 l
48.7864 131.380 48.6562 131.932 48.6562 132.140  c
48.6562 132.286 48.7057 132.411 48.8046 132.515  c
48.9036 132.619 49.0208 132.671 49.1562 132.671  c
49.3541 132.671 49.5625 132.583 49.7812 132.406  c
50.3125 132.000 50.8645 131.359 51.4375 130.484  c
51.8906 130.953 l
50.9322 132.307 50.0468 133.250 49.2343 133.781  c
48.6406 134.166 48.0781 134.359 47.5468 134.359  c
47.1614 134.359 46.8411 134.229 46.5859 133.968  c
46.3307 133.708 46.2031 133.406 46.2031 133.062  c
46.2031 132.697 46.3645 131.953 46.6875 130.828  c
50.7812 116.625 l
51.1145 115.458 51.2812 114.791 51.2812 114.625  c
51.2812 114.385 51.1849 114.187 50.9921 114.031  c
50.7994 113.875 50.5000 113.796 50.0937 113.796  c
49.8645 113.796 49.5156 113.828 49.0468 113.890  c
49.0468 113.343 l
54.2187 112.468 l
h
60.9375 114.296 m
61.3541 114.296 61.7109 114.442 62.0078 114.734  c
62.3046 115.026 62.4531 115.385 62.4531 115.812  c
62.4531 116.218 62.3020 116.570 62.0000 116.867  c
61.6979 117.164 61.3437 117.312 60.9375 117.312  c
60.5208 117.312 60.1640 117.164 59.8671 116.867  c
59.5703 116.570 59.4218 116.218 59.4218 115.812  c
59.4218 115.385 59.5677 115.026 59.8593 114.734  c
60.1510 114.442 60.5104 114.296 60.9375 114.296  c
h
61.1250 120.296 m
58.1250 130.906 l
57.9270 131.625 57.8281 132.057 57.8281 132.203  c
57.8281 132.359 57.8776 132.489 57.9765 132.593  c
58.0755 132.697 58.1875 132.750 58.3125 132.750  c
58.4687 132.750 58.6510 132.666 58.8593 132.500  c
59.4322 132.041 60.0104 131.395 60.5937 130.562  c
61.1250 130.906 l
60.4375 131.958 59.6302 132.843 58.7031 133.562  c
58.0156 134.093 57.3593 134.359 56.7343 134.359  c
56.3281 134.359 55.9921 134.237 55.7265 133.992  c
55.4609 133.747 55.3281 133.437 55.3281 133.062  c
55.3281 132.687 55.4531 132.067 55.7031 131.203  c
57.6718 124.421 l
57.9947 123.307 58.1562 122.609 58.1562 122.328  c
58.1562 122.109 58.0781 121.929 57.9218 121.789  c
57.7656 121.648 57.5520 121.578 57.2812 121.578  c
57.0625 121.578 56.6041 121.630 55.9062 121.734  c
55.9062 121.156 l
61.1250 120.296 l
h
71.0468 116.546 m
69.8750 120.671 l
72.2500 120.671 l
71.9843 121.625 l
69.6250 121.625 l
67.0312 130.546 l
66.7500 131.505 66.6093 132.125 66.6093 132.406  c
66.6093 132.583 66.6484 132.716 66.7265 132.804  c
66.8046 132.893 66.9010 132.937 67.0156 132.937  c
67.2656 132.937 67.5989 132.760 68.0156 132.406  c
68.2552 132.208 68.7916 131.588 69.6250 130.546  c
70.1250 130.921 l
69.1979 132.276 68.3229 133.229 67.5000 133.781  c
66.9270 134.166 66.3541 134.359 65.7812 134.359  c
65.3437 134.359 64.9817 134.221 64.6953 133.945  c
64.4088 133.669 64.2656 133.312 64.2656 132.875  c
64.2656 132.333 64.4270 131.500 64.7500 130.375  c
67.2812 121.625 l
65.0000 121.625 l
65.1562 121.031 l
66.2604 120.729 67.1822 120.276 67.9218 119.671  c
68.6614 119.067 69.4843 118.026 70.3906 116.546  c
71.0468 116.546 l
h
76.9531 120.296 m
77.2968 120.880 77.5338 121.427 77.6640 121.937  c
77.7942 122.447 77.9270 123.453 78.0625 124.953  c
78.7187 132.390 l
79.3229 131.671 80.2031 130.520 81.3593 128.937  c
81.9114 128.177 82.5937 127.135 83.4062 125.812  c
83.9062 125.000 84.2135 124.432 84.3281 124.109  c
84.3802 123.953 84.4062 123.786 84.4062 123.609  c
84.4062 123.505 84.3724 123.416 84.3046 123.343  c
84.2369 123.270 84.0546 123.187 83.7578 123.093  c
83.4609 123.000 83.2135 122.822 83.0156 122.562  c
82.8177 122.302 82.7187 122.005 82.7187 121.671  c
82.7187 121.265 82.8385 120.934 83.0781 120.679  c
83.3177 120.424 83.6197 120.296 83.9843 120.296  c
84.4322 120.296 84.8125 120.481 85.1250 120.851  c
85.4375 121.221 85.5937 121.729 85.5937 122.375  c
85.5937 123.177 85.3203 124.088 84.7734 125.109  c
84.2265 126.130 83.1770 127.700 81.6250 129.820  c
80.0729 131.940 78.1927 134.250 75.9843 136.750  c
74.4635 138.479 73.3333 139.567 72.5937 140.015  c
71.8541 140.463 71.2239 140.687 70.7031 140.687  c
70.3906 140.687 70.1145 140.570 69.8750 140.335  c
69.6354 140.101 69.5156 139.828 69.5156 139.515  c
69.5156 139.119 69.6796 138.760 70.0078 138.437  c
70.3359 138.114 70.6927 137.953 71.0781 137.953  c
71.2760 137.953 71.4427 138.000 71.5781 138.093  c
71.6614 138.135 71.7500 138.276 71.8437 138.515  c
71.9375 138.755 72.0260 138.916 72.1093 139.000  c
72.1614 139.052 72.2187 139.078 72.2812 139.078  c
72.3437 139.078 72.4531 139.026 72.6093 138.921  c
73.1614 138.578 73.8072 138.031 74.5468 137.281  c
75.5156 136.291 76.2291 135.484 76.6875 134.859  c
75.8437 125.265 l
75.7083 123.682 75.4974 122.718 75.2109 122.375  c
74.9244 122.031 74.4479 121.859 73.7812 121.859  c
73.5729 121.859 73.1979 121.890 72.6562 121.953  c
72.5156 121.390 l
76.9531 120.296 l
h
f
Q
cliprestore
newpath
-165.000 102.000 m
-165.000 492.000 l
142.000 492.000 l
142.000 102.000 l
h
W
Q
[ 0 -1.00000 1.00000 0 -97.0000 147.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
newpath
102.000 225.000 m
96.8000 225.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
87.7187 243.562 m
85.4062 243.562 83.5364 242.474 82.1093 240.296  c
80.6822 238.119 79.9687 235.281 79.9687 231.781  c
79.9687 228.250 80.6875 225.408 82.1250 223.257  c
83.5625 221.106 85.4583 220.031 87.8125 220.031  c
90.1562 220.031 92.0494 221.106 93.4921 223.257  c
94.9349 225.408 95.6562 228.234 95.6562 231.734  c
95.6562 235.328 94.9349 238.197 93.4921 240.343  c
92.0494 242.489 90.1250 243.562 87.7187 243.562  c
h
87.7500 241.312 m
90.9062 241.312 92.4843 238.104 92.4843 231.687  c
92.4843 225.416 90.9270 222.281 87.8125 222.281  c
84.6979 222.281 83.1406 225.447 83.1406 231.781  c
83.1406 238.135 84.6770 241.312 87.7500 241.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 183.815 m
96.8000 183.815 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 201.562 m
55.4062 201.562 53.5364 200.474 52.1093 198.296  c
50.6822 196.119 49.9687 193.281 49.9687 189.781  c
49.9687 186.250 50.6875 183.408 52.1250 181.257  c
53.5625 179.106 55.4583 178.031 57.8125 178.031  c
60.1562 178.031 62.0494 179.106 63.4921 181.257  c
64.9349 183.408 65.6562 186.234 65.6562 189.734  c
65.6562 193.328 64.9349 196.197 63.4921 198.343  c
62.0494 200.489 60.1250 201.562 57.7187 201.562  c
h
57.7500 199.312 m
60.9062 199.312 62.4843 196.104 62.4843 189.687  c
62.4843 183.416 60.9270 180.281 57.8125 180.281  c
54.6979 180.281 53.1406 183.447 53.1406 189.781  c
53.1406 196.135 54.6770 199.312 57.7500 199.312  c
h
71.0312 201.000 m
71.0312 197.265 l
74.7656 197.265 l
74.7656 201.000 l
71.0312 201.000 l
h
80.5781 201.000 m
80.5781 198.375 l
81.4427 196.354 83.1979 194.145 85.8437 191.750  c
87.5468 190.218 l
89.7447 188.229 90.8437 186.255 90.8437 184.296  c
90.8437 183.046 90.4687 182.065 89.7187 181.351  c
88.9687 180.638 87.9375 180.281 86.6250 180.281  c
85.0729 180.281 83.2447 180.880 81.1406 182.078  c
81.1406 179.437 l
83.1197 178.500 85.0885 178.031 87.0468 178.031  c
89.1510 178.031 90.8385 178.596 92.1093 179.726  c
93.3802 180.856 94.0156 182.359 94.0156 184.234  c
94.0156 185.567 93.6953 186.755 93.0546 187.796  c
92.4140 188.838 91.2187 190.099 89.4687 191.578  c
88.3281 192.562 l
85.9322 194.593 84.5468 196.531 84.1718 198.375  c
93.9062 198.375 l
93.9062 201.000 l
80.5781 201.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 142.630 m
96.8000 142.630 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 160.562 m
55.4062 160.562 53.5364 159.474 52.1093 157.296  c
50.6822 155.119 49.9687 152.281 49.9687 148.781  c
49.9687 145.250 50.6875 142.408 52.1250 140.257  c
53.5625 138.106 55.4583 137.031 57.8125 137.031  c
60.1562 137.031 62.0494 138.106 63.4921 140.257  c
64.9349 142.408 65.6562 145.234 65.6562 148.734  c
65.6562 152.328 64.9349 155.197 63.4921 157.343  c
62.0494 159.489 60.1250 160.562 57.7187 160.562  c
h
57.7500 158.312 m
60.9062 158.312 62.4843 155.104 62.4843 148.687  c
62.4843 142.416 60.9270 139.281 57.8125 139.281  c
54.6979 139.281 53.1406 142.447 53.1406 148.781  c
53.1406 155.135 54.6770 158.312 57.7500 158.312  c
h
71.0312 160.000 m
71.0312 156.265 l
74.7656 156.265 l
74.7656 160.000 l
71.0312 160.000 l
h
89.6718 160.000 m
89.6718 153.656 l
79.5937 153.656 l
79.5937 151.406 l
89.6718 137.593 l
92.4687 137.593 l
92.4687 151.218 l
95.4687 151.218 l
95.4687 153.656 l
92.4687 153.656 l
92.4687 160.000 l
89.6718 160.000 l
h
82.5156 151.218 m
89.8750 151.218 l
89.8750 141.265 l
82.5156 151.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 101.445 m
96.8000 101.445 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 119.562 m
55.4062 119.562 53.5364 118.474 52.1093 116.296  c
50.6822 114.119 49.9687 111.281 49.9687 107.781  c
49.9687 104.250 50.6875 101.408 52.1250 99.2578  c
53.5625 97.1067 55.4583 96.0312 57.8125 96.0312  c
60.1562 96.0312 62.0494 97.1067 63.4921 99.2578  c
64.9349 101.408 65.6562 104.234 65.6562 107.734  c
65.6562 111.328 64.9349 114.197 63.4921 116.343  c
62.0494 118.489 60.1250 119.562 57.7187 119.562  c
h
57.7500 117.312 m
60.9062 117.312 62.4843 114.104 62.4843 107.687  c
62.4843 101.416 60.9270 98.2812 57.8125 98.2812  c
54.6979 98.2812 53.1406 101.447 53.1406 107.781  c
53.1406 114.135 54.6770 117.312 57.7500 117.312  c
h
71.0312 119.000 m
71.0312 115.265 l
74.7656 115.265 l
74.7656 119.000 l
71.0312 119.000 l
h
83.3281 107.390 m
84.7552 105.546 86.5468 104.625 88.7031 104.625  c
90.6614 104.625 92.2630 105.273 93.5078 106.570  c
94.7526 107.867 95.3750 109.526 95.3750 111.546  c
95.3750 113.880 94.6770 115.799 93.2812 117.304  c
91.8854 118.809 90.1093 119.562 87.9531 119.562  c
85.4843 119.562 83.5546 118.567 82.1640 116.578  c
80.7734 114.588 80.0781 111.828 80.0781 108.296  c
80.0781 104.411 80.8776 101.393 82.4765 99.2421  c
84.0755 97.0911 86.3281 96.0156 89.2343 96.0156  c
90.5677 96.0156 92.2343 96.3020 94.2343 96.8750  c
94.2343 99.4687 l
92.1197 98.6666 90.3906 98.2656 89.0468 98.2656  c
85.2343 98.2656 83.3281 101.307 83.3281 107.390  c
h
92.3750 112.218 m
92.3750 110.520 91.9947 109.187 91.2343 108.218  c
90.4739 107.250 89.4166 106.765 88.0625 106.765  c
86.8020 106.765 85.7187 107.190 84.8125 108.039  c
83.9062 108.888 83.4531 109.906 83.4531 111.093  c
83.4531 112.968 83.8828 114.474 84.7421 115.609  c
85.6015 116.744 86.7447 117.312 88.1718 117.312  c
89.4531 117.312 90.4739 116.851 91.2343 115.929  c
91.9947 115.007 92.3750 113.770 92.3750 112.218  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 60.2607 m
96.8000 60.2607 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 78.5625 m
55.4062 78.5625 53.5364 77.4739 52.1093 75.2968  c
50.6822 73.1197 49.9687 70.2812 49.9687 66.7812  c
49.9687 63.2500 50.6875 60.4088 52.1250 58.2578  c
53.5625 56.1067 55.4583 55.0312 57.8125 55.0312  c
60.1562 55.0312 62.0494 56.1067 63.4921 58.2578  c
64.9349 60.4088 65.6562 63.2343 65.6562 66.7343  c
65.6562 70.3281 64.9349 73.1979 63.4921 75.3437  c
62.0494 77.4895 60.1250 78.5625 57.7187 78.5625  c
h
57.7500 76.3125 m
60.9062 76.3125 62.4843 73.1041 62.4843 66.6875  c
62.4843 60.4166 60.9270 57.2812 57.8125 57.2812  c
54.6979 57.2812 53.1406 60.4479 53.1406 66.7812  c
53.1406 73.1354 54.6770 76.3125 57.7500 76.3125  c
h
71.0312 78.0000 m
71.0312 74.2656 l
74.7656 74.2656 l
74.7656 78.0000 l
71.0312 78.0000 l
h
85.1250 65.7968 m
82.9375 64.2760 81.8437 62.5937 81.8437 60.7500  c
81.8437 59.0520 82.4635 57.6718 83.7031 56.6093  c
84.9427 55.5468 86.5625 55.0156 88.5625 55.0156  c
90.4062 55.0156 91.9010 55.4661 93.0468 56.3671  c
94.1927 57.2682 94.7656 58.4322 94.7656 59.8593  c
94.7656 62.0364 93.3750 64.0156 90.5937 65.7968  c
93.9791 67.4531 95.6718 69.5885 95.6718 72.2031  c
95.6718 74.0781 94.9609 75.6067 93.5390 76.7890  c
92.1171 77.9713 90.2864 78.5625 88.0468 78.5625  c
85.8489 78.5625 84.0703 78.0052 82.7109 76.8906  c
81.3515 75.7760 80.6718 74.3072 80.6718 72.4843  c
80.6718 69.8072 82.1562 67.5781 85.1250 65.7968  c
h
88.9218 64.8593 m
91.0156 63.4843 92.0625 61.9583 92.0625 60.2812  c
92.0625 59.3750 91.7135 58.6484 91.0156 58.1015  c
90.3177 57.5546 89.4010 57.2812 88.2656 57.2812  c
87.1614 57.2812 86.2656 57.5494 85.5781 58.0859  c
84.8906 58.6224 84.5468 59.3229 84.5468 60.1875  c
84.5468 61.0208 84.8593 61.7682 85.4843 62.4296  c
86.1093 63.0911 87.2552 63.9010 88.9218 64.8593  c
h
86.7500 67.0156 m
85.5520 67.9427 84.7369 68.7526 84.3046 69.4453  c
83.8724 70.1380 83.6562 70.9947 83.6562 72.0156  c
83.6562 73.2968 84.0703 74.3333 84.8984 75.1250  c
85.7265 75.9166 86.8177 76.3125 88.1718 76.3125  c
89.4739 76.3125 90.5364 75.9765 91.3593 75.3046  c
92.1822 74.6328 92.5937 73.7552 92.5937 72.6718  c
92.5937 71.8072 92.3385 71.0729 91.8281 70.4687  c
91.3177 69.8645 90.3333 69.1302 88.8750 68.2656  c
86.7500 67.0156 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 19.0759 m
96.8000 19.0759 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
82.6562 37.0000 m
82.6562 34.7656 l
87.1406 34.7656 l
87.1406 17.0781 l
82.6562 18.2031 l
82.6562 15.9062 l
90.1406 14.0312 l
90.1406 34.7656 l
94.6250 34.7656 l
94.6250 37.0000 l
82.6562 37.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 204.407 m
99.4000 204.407 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 163.222 m
99.4000 163.222 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 122.037 m
99.4000 122.037 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 80.8531 m
99.4000 80.8531 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 39.6683 m
99.4000 39.6683 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

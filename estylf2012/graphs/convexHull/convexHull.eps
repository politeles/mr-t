%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 14.33 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
50 272 299 118 rc
q
q
53 275 223 38 rc
q
3.00000 w
[ 1.00000 0 0 1.00000 55.0000 286.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -55.0000 -286.000 ] concat
Q
[ 1.00000 0 0 1.00000 53.0000 275.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 185 37 rc
newpath
53.4843 31.5625 m
50.0052 31.5625 47.3177 30.5390 45.4218 28.4921  c
43.5260 26.4453 42.5781 23.5520 42.5781 19.8125  c
42.5781 16.0833 43.5442 13.1875 45.4765 11.1250  c
47.4088 9.06250 50.1302 8.03125 53.6406 8.03125  c
55.6510 8.03125 58.0000 8.35937 60.6875 9.01562  c
60.6875 12.0000 l
57.6250 10.9375 55.2604 10.4062 53.5937 10.4062  c
51.1666 10.4062 49.2864 11.2291 47.9531 12.8750  c
46.6197 14.5208 45.9531 16.8437 45.9531 19.8437  c
45.9531 22.6979 46.6640 24.9505 48.0859 26.6015  c
49.5078 28.2526 51.4479 29.0781 53.9062 29.0781  c
56.0312 29.0781 58.3020 28.4270 60.7187 27.1250  c
60.7187 29.8437 l
58.5104 30.9895 56.0989 31.5625 53.4843 31.5625  c
h
71.4218 31.3750 m
69.0677 31.3750 67.1901 30.5963 65.7890 29.0390  c
64.3880 27.4817 63.6875 25.3958 63.6875 22.7812  c
63.6875 20.1354 64.3906 18.0442 65.7968 16.5078  c
67.2031 14.9713 69.1093 14.2031 71.5156 14.2031  c
73.9322 14.2031 75.8437 14.9713 77.2500 16.5078  c
78.6562 18.0442 79.3593 20.1250 79.3593 22.7500  c
79.3593 25.4375 78.6536 27.5468 77.2421 29.0781  c
75.8307 30.6093 73.8906 31.3750 71.4218 31.3750  c
h
71.4531 29.1406 m
74.6197 29.1406 76.2031 27.0104 76.2031 22.7500  c
76.2031 18.5416 74.6406 16.4375 71.5156 16.4375  c
68.4114 16.4375 66.8593 18.5520 66.8593 22.7812  c
66.8593 27.0208 68.3906 29.1406 71.4531 29.1406  c
h
83.9843 31.0000 m
83.9843 14.5625 l
86.9687 14.5625 l
86.9687 17.6562 l
88.5416 15.3541 90.4687 14.2031 92.7500 14.2031  c
94.1666 14.2031 95.2994 14.6536 96.1484 15.5546  c
96.9974 16.4557 97.4218 17.6666 97.4218 19.1875  c
97.4218 31.0000 l
94.4375 31.0000 l
94.4375 20.1562 l
94.4375 18.9375 94.2578 18.0677 93.8984 17.5468  c
93.5390 17.0260 92.9479 16.7656 92.1250 16.7656  c
90.3020 16.7656 88.5833 17.9635 86.9687 20.3593  c
86.9687 31.0000 l
83.9843 31.0000 l
h
106.390 31.0000 m
100.265 14.5625 l
103.250 14.5625 l
108.031 27.3593 l
113.078 14.5625 l
115.859 14.5625 l
109.375 31.0000 l
106.390 31.0000 l
h
131.031 30.4687 m
129.031 31.0729 127.322 31.3750 125.906 31.3750  c
123.479 31.3750 121.502 30.5703 119.976 28.9609  c
118.450 27.3515 117.687 25.2656 117.687 22.7031  c
117.687 20.2135 118.359 18.1718 119.703 16.5781  c
121.046 14.9843 122.770 14.1875 124.875 14.1875  c
126.864 14.1875 128.401 14.8932 129.484 16.3046  c
130.567 17.7161 131.109 19.7239 131.109 22.3281  c
131.093 23.2500 l
120.718 23.2500 l
121.156 27.1562 123.067 29.1093 126.453 29.1093  c
127.703 29.1093 129.229 28.7760 131.031 28.1093  c
131.031 30.4687 l
h
120.859 21.0156 m
128.109 21.0156 l
128.109 17.9531 126.968 16.4218 124.687 16.4218  c
122.395 16.4218 121.119 17.9531 120.859 21.0156  c
h
134.328 31.0000 m
140.578 22.5156 l
134.515 14.5625 l
138.062 14.5625 l
142.859 20.8906 l
147.203 14.5625 l
150.109 14.5625 l
144.406 22.9062 l
150.609 31.0000 l
147.062 31.0000 l
142.109 24.4843 l
137.328 31.0000 l
134.328 31.0000 l
h
164.984 31.0000 m
164.984 7.09375 l
167.968 7.09375 l
167.968 17.6562 l
169.541 15.3541 171.468 14.2031 173.750 14.2031  c
175.166 14.2031 176.299 14.6536 177.148 15.5546  c
177.997 16.4557 178.421 17.6666 178.421 19.1875  c
178.421 31.0000 l
175.437 31.0000 l
175.437 20.1562 l
175.437 18.9375 175.257 18.0677 174.898 17.5468  c
174.539 17.0260 173.947 16.7656 173.125 16.7656  c
171.302 16.7656 169.583 17.9635 167.968 20.3593  c
167.968 31.0000 l
164.984 31.0000 l
h
194.265 31.0000 m
194.265 27.9062 l
192.682 30.2187 190.760 31.3750 188.500 31.3750  c
187.062 31.3750 185.919 30.9244 185.070 30.0234  c
184.221 29.1224 183.796 27.9062 183.796 26.3750  c
183.796 14.5625 l
186.781 14.5625 l
186.781 25.4062 l
186.781 26.6354 186.960 27.5104 187.320 28.0312  c
187.679 28.5520 188.276 28.8125 189.109 28.8125  c
190.932 28.8125 192.651 27.6145 194.265 25.2187  c
194.265 14.5625 l
197.234 14.5625 l
197.234 31.0000 l
194.265 31.0000 l
h
202.984 31.0000 m
202.984 7.09375 l
205.968 7.09375 l
205.968 31.0000 l
202.984 31.0000 l
h
211.984 31.0000 m
211.984 7.09375 l
214.968 7.09375 l
214.968 31.0000 l
211.984 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
223.000 38.0000 l
223.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 53.0000 275.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -53.0000 -275.000 ] concat
cliprestore
newpath
50.0000 272.000 m
50.0000 390.000 l
349.000 390.000 l
349.000 272.000 l
h
W
Q
q
53 312 294 38 rc
q
3.00000 w
[ 3.00000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
[ 1.00000 0 0 1.00000 55.0000 323.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -55.0000 -323.000 ] concat
Q
[ 1.00000 0 0 1.00000 53.0000 312.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 256 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
56.4062 8.59375 l
56.4062 10.9687 l
47.0625 10.9687 l
47.0625 18.4843 l
54.9062 18.4843 l
54.9062 20.8281 l
47.0625 20.8281 l
47.0625 31.0000 l
43.8906 31.0000 l
h
71.2656 31.0000 m
71.2656 27.9062 l
69.6822 30.2187 67.7604 31.3750 65.5000 31.3750  c
64.0625 31.3750 62.9192 30.9244 62.0703 30.0234  c
61.2213 29.1224 60.7968 27.9062 60.7968 26.3750  c
60.7968 14.5625 l
63.7812 14.5625 l
63.7812 25.4062 l
63.7812 26.6354 63.9609 27.5104 64.3203 28.0312  c
64.6796 28.5520 65.2760 28.8125 66.1093 28.8125  c
67.9322 28.8125 69.6510 27.6145 71.2656 25.2187  c
71.2656 14.5625 l
74.2343 14.5625 l
74.2343 31.0000 l
71.2656 31.0000 l
h
78.8593 31.0000 m
78.8593 28.7656 l
89.0312 16.7968 l
79.3281 16.7968 l
79.3281 14.5625 l
92.7187 14.5625 l
92.7187 16.7968 l
82.5468 28.7656 l
92.9062 28.7656 l
92.9062 31.0000 l
78.8593 31.0000 l
h
96.8593 31.0000 m
96.8593 28.7656 l
107.031 16.7968 l
97.3281 16.7968 l
97.3281 14.5625 l
110.718 14.5625 l
110.718 16.7968 l
100.546 28.7656 l
110.906 28.7656 l
110.906 31.0000 l
96.8593 31.0000 l
h
116.937 36.9843 m
119.593 31.0000 l
113.250 14.5625 l
116.468 14.5625 l
121.171 26.9375 l
126.203 14.5625 l
129.015 14.5625 l
120.031 36.9843 l
116.937 36.9843 l
h
141.890 31.0000 m
141.890 8.59375 l
145.015 8.59375 l
156.281 25.9062 l
156.281 8.59375 l
159.015 8.59375 l
159.015 31.0000 l
155.906 31.0000 l
144.609 13.7031 l
144.609 31.0000 l
141.890 31.0000 l
h
175.265 31.0000 m
175.265 27.9062 l
173.682 30.2187 171.760 31.3750 169.500 31.3750  c
168.062 31.3750 166.919 30.9244 166.070 30.0234  c
165.221 29.1224 164.796 27.9062 164.796 26.3750  c
164.796 14.5625 l
167.781 14.5625 l
167.781 25.4062 l
167.781 26.6354 167.960 27.5104 168.320 28.0312  c
168.679 28.5520 169.276 28.8125 170.109 28.8125  c
171.932 28.8125 173.651 27.6145 175.265 25.2187  c
175.265 14.5625 l
178.234 14.5625 l
178.234 31.0000 l
175.265 31.0000 l
h
183.984 31.0000 m
183.984 14.5625 l
186.968 14.5625 l
186.968 17.6562 l
188.416 15.3541 190.281 14.2031 192.562 14.2031  c
194.760 14.2031 196.260 15.3541 197.062 17.6562  c
198.468 15.3437 200.302 14.1875 202.562 14.1875  c
204.020 14.1875 205.148 14.6119 205.945 15.4609  c
206.742 16.3099 207.140 17.5052 207.140 19.0468  c
207.140 31.0000 l
204.140 31.0000 l
204.140 19.5156 l
204.140 17.6406 203.401 16.7031 201.921 16.7031  c
200.380 16.7031 198.760 17.7968 197.062 19.9843  c
197.062 31.0000 l
194.062 31.0000 l
194.062 19.5156 l
194.062 17.6302 193.307 16.6875 191.796 16.6875  c
190.286 16.6875 188.677 17.7864 186.968 19.9843  c
186.968 31.0000 l
183.984 31.0000 l
h
212.984 31.1875 m
212.984 7.09375 l
215.968 7.09375 l
215.968 17.6562 l
217.187 15.3541 219.015 14.2031 221.453 14.2031  c
223.432 14.2031 224.989 14.9244 226.125 16.3671  c
227.260 17.8099 227.828 19.7812 227.828 22.2812  c
227.828 25.0104 227.184 27.2083 225.898 28.8750  c
224.612 30.5416 222.921 31.3750 220.828 31.3750  c
218.880 31.3750 217.260 30.6302 215.968 29.1406  c
215.593 31.1875 l
212.984 31.1875 l
h
215.968 27.0781 m
217.500 28.4531 218.963 29.1406 220.359 29.1406  c
223.224 29.1406 224.656 26.9531 224.656 22.5781  c
224.656 18.7239 223.385 16.7968 220.843 16.7968  c
219.177 16.7968 217.552 17.7031 215.968 19.5156  c
215.968 27.0781 l
h
245.031 30.4687 m
243.031 31.0729 241.322 31.3750 239.906 31.3750  c
237.479 31.3750 235.502 30.5703 233.976 28.9609  c
232.450 27.3515 231.687 25.2656 231.687 22.7031  c
231.687 20.2135 232.359 18.1718 233.703 16.5781  c
235.046 14.9843 236.770 14.1875 238.875 14.1875  c
240.864 14.1875 242.401 14.8932 243.484 16.3046  c
244.567 17.7161 245.109 19.7239 245.109 22.3281  c
245.093 23.2500 l
234.718 23.2500 l
235.156 27.1562 237.067 29.1093 240.453 29.1093  c
241.703 29.1093 243.229 28.7760 245.031 28.1093  c
245.031 30.4687 l
h
234.859 21.0156 m
242.109 21.0156 l
242.109 17.9531 240.968 16.4218 238.687 16.4218  c
236.395 16.4218 235.119 17.9531 234.859 21.0156  c
h
249.984 31.0000 m
249.984 14.5625 l
252.968 14.5625 l
252.968 17.6562 l
254.145 15.3541 255.859 14.2031 258.109 14.2031  c
258.411 14.2031 258.729 14.2291 259.062 14.2812  c
259.062 17.0625 l
258.552 16.8854 258.099 16.7968 257.703 16.7968  c
255.817 16.7968 254.239 17.9166 252.968 20.1562  c
252.968 31.0000 l
249.984 31.0000 l
h
270.250 31.0000 m
277.671 19.7500 l
270.609 8.59375 l
274.359 8.59375 l
279.750 17.0468 l
285.406 8.59375 l
288.406 8.59375 l
281.250 19.4218 l
288.593 31.0000 l
284.828 31.0000 l
279.140 22.1093 l
273.250 31.0000 l
270.250 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
294.000 38.0000 l
294.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 53.0000 312.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -53.0000 -312.000 ] concat
cliprestore
newpath
50.0000 272.000 m
50.0000 390.000 l
349.000 390.000 l
349.000 272.000 l
h
W
Q
q
53 349 294 38 rc
q
3.00000 w
[ 22.5000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
[ 1.00000 0 0 1.00000 55.0000 360.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -55.0000 -360.000 ] concat
Q
[ 1.00000 0 0 1.00000 53.0000 349.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 256 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
56.4062 8.59375 l
56.4062 10.9687 l
47.0625 10.9687 l
47.0625 18.4843 l
54.9062 18.4843 l
54.9062 20.8281 l
47.0625 20.8281 l
47.0625 31.0000 l
43.8906 31.0000 l
h
71.2656 31.0000 m
71.2656 27.9062 l
69.6822 30.2187 67.7604 31.3750 65.5000 31.3750  c
64.0625 31.3750 62.9192 30.9244 62.0703 30.0234  c
61.2213 29.1224 60.7968 27.9062 60.7968 26.3750  c
60.7968 14.5625 l
63.7812 14.5625 l
63.7812 25.4062 l
63.7812 26.6354 63.9609 27.5104 64.3203 28.0312  c
64.6796 28.5520 65.2760 28.8125 66.1093 28.8125  c
67.9322 28.8125 69.6510 27.6145 71.2656 25.2187  c
71.2656 14.5625 l
74.2343 14.5625 l
74.2343 31.0000 l
71.2656 31.0000 l
h
78.8593 31.0000 m
78.8593 28.7656 l
89.0312 16.7968 l
79.3281 16.7968 l
79.3281 14.5625 l
92.7187 14.5625 l
92.7187 16.7968 l
82.5468 28.7656 l
92.9062 28.7656 l
92.9062 31.0000 l
78.8593 31.0000 l
h
96.8593 31.0000 m
96.8593 28.7656 l
107.031 16.7968 l
97.3281 16.7968 l
97.3281 14.5625 l
110.718 14.5625 l
110.718 16.7968 l
100.546 28.7656 l
110.906 28.7656 l
110.906 31.0000 l
96.8593 31.0000 l
h
116.937 36.9843 m
119.593 31.0000 l
113.250 14.5625 l
116.468 14.5625 l
121.171 26.9375 l
126.203 14.5625 l
129.015 14.5625 l
120.031 36.9843 l
116.937 36.9843 l
h
141.890 31.0000 m
141.890 8.59375 l
145.015 8.59375 l
156.281 25.9062 l
156.281 8.59375 l
159.015 8.59375 l
159.015 31.0000 l
155.906 31.0000 l
144.609 13.7031 l
144.609 31.0000 l
141.890 31.0000 l
h
175.265 31.0000 m
175.265 27.9062 l
173.682 30.2187 171.760 31.3750 169.500 31.3750  c
168.062 31.3750 166.919 30.9244 166.070 30.0234  c
165.221 29.1224 164.796 27.9062 164.796 26.3750  c
164.796 14.5625 l
167.781 14.5625 l
167.781 25.4062 l
167.781 26.6354 167.960 27.5104 168.320 28.0312  c
168.679 28.5520 169.276 28.8125 170.109 28.8125  c
171.932 28.8125 173.651 27.6145 175.265 25.2187  c
175.265 14.5625 l
178.234 14.5625 l
178.234 31.0000 l
175.265 31.0000 l
h
183.984 31.0000 m
183.984 14.5625 l
186.968 14.5625 l
186.968 17.6562 l
188.416 15.3541 190.281 14.2031 192.562 14.2031  c
194.760 14.2031 196.260 15.3541 197.062 17.6562  c
198.468 15.3437 200.302 14.1875 202.562 14.1875  c
204.020 14.1875 205.148 14.6119 205.945 15.4609  c
206.742 16.3099 207.140 17.5052 207.140 19.0468  c
207.140 31.0000 l
204.140 31.0000 l
204.140 19.5156 l
204.140 17.6406 203.401 16.7031 201.921 16.7031  c
200.380 16.7031 198.760 17.7968 197.062 19.9843  c
197.062 31.0000 l
194.062 31.0000 l
194.062 19.5156 l
194.062 17.6302 193.307 16.6875 191.796 16.6875  c
190.286 16.6875 188.677 17.7864 186.968 19.9843  c
186.968 31.0000 l
183.984 31.0000 l
h
212.984 31.1875 m
212.984 7.09375 l
215.968 7.09375 l
215.968 17.6562 l
217.187 15.3541 219.015 14.2031 221.453 14.2031  c
223.432 14.2031 224.989 14.9244 226.125 16.3671  c
227.260 17.8099 227.828 19.7812 227.828 22.2812  c
227.828 25.0104 227.184 27.2083 225.898 28.8750  c
224.612 30.5416 222.921 31.3750 220.828 31.3750  c
218.880 31.3750 217.260 30.6302 215.968 29.1406  c
215.593 31.1875 l
212.984 31.1875 l
h
215.968 27.0781 m
217.500 28.4531 218.963 29.1406 220.359 29.1406  c
223.224 29.1406 224.656 26.9531 224.656 22.5781  c
224.656 18.7239 223.385 16.7968 220.843 16.7968  c
219.177 16.7968 217.552 17.7031 215.968 19.5156  c
215.968 27.0781 l
h
245.031 30.4687 m
243.031 31.0729 241.322 31.3750 239.906 31.3750  c
237.479 31.3750 235.502 30.5703 233.976 28.9609  c
232.450 27.3515 231.687 25.2656 231.687 22.7031  c
231.687 20.2135 232.359 18.1718 233.703 16.5781  c
235.046 14.9843 236.770 14.1875 238.875 14.1875  c
240.864 14.1875 242.401 14.8932 243.484 16.3046  c
244.567 17.7161 245.109 19.7239 245.109 22.3281  c
245.093 23.2500 l
234.718 23.2500 l
235.156 27.1562 237.067 29.1093 240.453 29.1093  c
241.703 29.1093 243.229 28.7760 245.031 28.1093  c
245.031 30.4687 l
h
234.859 21.0156 m
242.109 21.0156 l
242.109 17.9531 240.968 16.4218 238.687 16.4218  c
236.395 16.4218 235.119 17.9531 234.859 21.0156  c
h
249.984 31.0000 m
249.984 14.5625 l
252.968 14.5625 l
252.968 17.6562 l
254.145 15.3541 255.859 14.2031 258.109 14.2031  c
258.411 14.2031 258.729 14.2291 259.062 14.2812  c
259.062 17.0625 l
258.552 16.8854 258.099 16.7968 257.703 16.7968  c
255.817 16.7968 254.239 17.9166 252.968 20.1562  c
252.968 31.0000 l
249.984 31.0000 l
h
277.734 31.0000 m
277.734 21.6406 l
270.250 8.59375 l
273.890 8.59375 l
279.703 18.7031 l
285.968 8.59375 l
288.921 8.59375 l
280.906 21.5781 l
280.906 31.0000 l
277.734 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
294.000 38.0000 l
294.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 53.0000 349.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -53.0000 -349.000 ] concat
cliprestore
newpath
50.0000 272.000 m
50.0000 390.000 l
349.000 390.000 l
349.000 272.000 l
h
W
Q
Q
2 J
0 j
newpath
51.5000 273.500 m
346.500 273.500 l
346.500 387.500 l
51.5000 387.500 l
51.5000 273.500 l
h
S
0 J
1 j
Q
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 270 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
3.00000 w
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 188.000 m
155.307 188.000 l
155.480 187.808 l
234.797 20.5203 l
236.217 19.0909 l
342.113 19.0909 l
342.772 22.3684 l
368.341 184.153 l
368.954 188.000 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
q
3.00000 w
[ 3.00000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 188.000 m
155.307 188.000 l
155.480 187.808 l
235.152 19.7712 l
235.507 19.1597 l
315.428 187.723 l
315.590 188.000 l
370.179 188.000 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
q
3.00000 w
[ 22.5000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 188.000 m
288.555 188.000 l
289.211 186.902 l
342.113 19.5376 l
342.772 22.3684 l
368.341 184.153 l
368.954 188.000 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
102.000 188.000 m
368.949 188.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
231 233 8 37 rc
Q
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
102.000 188.000 m
102.000 193.200 l
S
Q
q
newpath
155.390 188.000 m
155.390 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.578 231.000 m
152.578 228.375 l
153.442 226.354 155.197 224.145 157.843 221.750  c
159.546 220.218 l
161.744 218.229 162.843 216.255 162.843 214.296  c
162.843 213.046 162.468 212.065 161.718 211.351  c
160.968 210.638 159.937 210.281 158.625 210.281  c
157.072 210.281 155.244 210.880 153.140 212.078  c
153.140 209.437 l
155.119 208.500 157.088 208.031 159.046 208.031  c
161.151 208.031 162.838 208.596 164.109 209.726  c
165.380 210.856 166.015 212.359 166.015 214.234  c
166.015 215.567 165.695 216.755 165.054 217.796  c
164.414 218.838 163.218 220.099 161.468 221.578  c
160.328 222.562 l
157.932 224.593 156.546 226.531 156.171 228.375  c
165.906 228.375 l
165.906 231.000 l
152.578 231.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
208.779 188.000 m
208.779 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
214.671 231.000 m
214.671 224.656 l
204.593 224.656 l
204.593 222.406 l
214.671 208.593 l
217.468 208.593 l
217.468 222.218 l
220.468 222.218 l
220.468 224.656 l
217.468 224.656 l
217.468 231.000 l
214.671 231.000 l
h
207.515 222.218 m
214.875 222.218 l
214.875 212.265 l
207.515 222.218 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
262.169 188.000 m
262.169 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
262.328 219.390 m
263.755 217.546 265.546 216.625 267.703 216.625  c
269.661 216.625 271.263 217.273 272.507 218.570  c
273.752 219.867 274.375 221.526 274.375 223.546  c
274.375 225.880 273.677 227.799 272.281 229.304  c
270.885 230.809 269.109 231.562 266.953 231.562  c
264.484 231.562 262.554 230.567 261.164 228.578  c
259.773 226.588 259.078 223.828 259.078 220.296  c
259.078 216.411 259.877 213.393 261.476 211.242  c
263.075 209.091 265.328 208.015 268.234 208.015  c
269.567 208.015 271.234 208.302 273.234 208.875  c
273.234 211.468 l
271.119 210.666 269.390 210.265 268.046 210.265  c
264.234 210.265 262.328 213.307 262.328 219.390  c
h
271.375 224.218 m
271.375 222.520 270.994 221.187 270.234 220.218  c
269.474 219.250 268.416 218.765 267.062 218.765  c
265.802 218.765 264.718 219.190 263.812 220.039  c
262.906 220.888 262.453 221.906 262.453 223.093  c
262.453 224.968 262.882 226.474 263.742 227.609  c
264.601 228.744 265.744 229.312 267.171 229.312  c
268.453 229.312 269.474 228.851 270.234 227.929  c
270.994 227.007 271.375 225.770 271.375 224.218  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
315.559 188.000 m
315.559 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.125 218.796 m
314.937 217.276 313.843 215.593 313.843 213.750  c
313.843 212.052 314.463 210.671 315.703 209.609  c
316.942 208.546 318.562 208.015 320.562 208.015  c
322.406 208.015 323.901 208.466 325.046 209.367  c
326.192 210.268 326.765 211.432 326.765 212.859  c
326.765 215.036 325.375 217.015 322.593 218.796  c
325.979 220.453 327.671 222.588 327.671 225.203  c
327.671 227.078 326.960 228.606 325.539 229.789  c
324.117 230.971 322.286 231.562 320.046 231.562  c
317.849 231.562 316.070 231.005 314.710 229.890  c
313.351 228.776 312.671 227.307 312.671 225.484  c
312.671 222.807 314.156 220.578 317.125 218.796  c
h
320.921 217.859 m
323.015 216.484 324.062 214.958 324.062 213.281  c
324.062 212.375 323.713 211.648 323.015 211.101  c
322.317 210.554 321.401 210.281 320.265 210.281  c
319.161 210.281 318.265 210.549 317.578 211.085  c
316.890 211.622 316.546 212.322 316.546 213.187  c
316.546 214.020 316.859 214.768 317.484 215.429  c
318.109 216.091 319.255 216.901 320.921 217.859  c
h
318.750 220.015 m
317.552 220.942 316.737 221.752 316.304 222.445  c
315.872 223.138 315.656 223.994 315.656 225.015  c
315.656 226.296 316.070 227.333 316.898 228.125  c
317.726 228.916 318.817 229.312 320.171 229.312  c
321.474 229.312 322.536 228.976 323.359 228.304  c
324.182 227.632 324.593 226.755 324.593 225.671  c
324.593 224.807 324.338 224.072 323.828 223.468  c
323.317 222.864 322.333 222.130 320.875 221.265  c
318.750 220.015 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
368.949 188.000 m
368.949 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
357.656 231.000 m
357.656 228.765 l
362.140 228.765 l
362.140 211.078 l
357.656 212.203 l
357.656 209.906 l
365.140 208.031 l
365.140 228.765 l
369.625 228.765 l
369.625 231.000 l
357.656 231.000 l
h
382.718 231.562 m
380.406 231.562 378.536 230.474 377.109 228.296  c
375.682 226.119 374.968 223.281 374.968 219.781  c
374.968 216.250 375.687 213.408 377.125 211.257  c
378.562 209.106 380.458 208.031 382.812 208.031  c
385.156 208.031 387.049 209.106 388.492 211.257  c
389.934 213.408 390.656 216.234 390.656 219.734  c
390.656 223.328 389.934 226.197 388.492 228.343  c
387.049 230.489 385.125 231.562 382.718 231.562  c
h
382.750 229.312 m
385.906 229.312 387.484 226.104 387.484 219.687  c
387.484 213.416 385.927 210.281 382.812 210.281  c
379.697 210.281 378.140 213.447 378.140 219.781  c
378.140 226.135 379.677 229.312 382.750 229.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
128.695 188.000 m
128.695 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
182.084 188.000 m
182.084 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
235.474 188.000 m
235.474 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
288.864 188.000 m
288.864 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
342.254 188.000 m
342.254 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
102.000 188.000 m
102.000 19.0909 l
S
Q
0 J
1 j
[ 0 -1.00000 1.00000 0 -78.0000 128.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-49 85 139 37 rc
newpath
-38.1406 101.296 m
-39.1875 104.781 l
-38.0833 103.489 -37.1015 102.585 -36.2421 102.070  c
-35.3828 101.554 -34.5052 101.296 -33.6093 101.296  c
-32.7031 101.296 -31.9322 101.653 -31.2968 102.367  c
-30.6614 103.080 -30.3437 104.005 -30.3437 105.140  c
-30.3437 107.359 -31.2474 109.617 -33.0546 111.914  c
-34.8619 114.210 -36.9687 115.359 -39.3750 115.359  c
-39.8750 115.359 -40.3203 115.304 -40.7109 115.195  c
-41.1015 115.085 -41.5364 114.890 -42.0156 114.609  c
-43.1250 118.515 l
-43.3437 119.276 -43.4531 119.776 -43.4531 120.015  c
-43.4531 120.234 -43.3958 120.421 -43.2812 120.578  c
-43.1666 120.734 -42.9791 120.854 -42.7187 120.937  c
-42.4583 121.020 -41.9375 121.062 -41.1562 121.062  c
-41.2968 121.625 l
-48.4218 121.625 l
-48.2656 121.062 l
-47.3281 121.031 -46.6953 120.872 -46.3671 120.585  c
-46.0390 120.299 -45.6927 119.515 -45.3281 118.234  c
-41.5000 104.984 l
-41.2708 104.140 -41.1562 103.619 -41.1562 103.421  c
-41.1562 103.151 -41.2343 102.940 -41.3906 102.789  c
-41.5468 102.638 -41.7864 102.562 -42.1093 102.562  c
-42.4010 102.562 -42.8072 102.593 -43.3281 102.656  c
-43.3281 102.078 l
-38.1406 101.296 l
h
-41.6718 113.406 m
-41.0468 114.156 -40.2031 114.531 -39.1406 114.531  c
-38.6197 114.531 -38.0859 114.385 -37.5390 114.093  c
-36.9921 113.802 -36.4583 113.367 -35.9375 112.789  c
-35.4166 112.210 -34.9505 111.546 -34.5390 110.796  c
-34.1276 110.046 -33.7578 109.161 -33.4296 108.140  c
-33.1015 107.119 -32.9375 106.109 -32.9375 105.109  c
-32.9375 104.307 -33.1224 103.692 -33.4921 103.265  c
-33.8619 102.838 -34.2916 102.625 -34.7812 102.625  c
-35.8750 102.625 -36.9531 103.250 -38.0156 104.500  c
-39.0781 105.750 -39.8593 107.213 -40.3593 108.890  c
-41.6718 113.406 l
h
-14.6718 106.031 m
-14.6718 107.552 -15.0729 109.054 -15.8750 110.539  c
-16.6770 112.023 -17.7942 113.197 -19.2265 114.062  c
-20.6588 114.927 -22.0520 115.359 -23.4062 115.359  c
-24.7812 115.359 -25.9062 114.919 -26.7812 114.039  c
-27.6562 113.158 -28.0937 112.015 -28.0937 110.609  c
-28.0937 109.130 -27.6666 107.643 -26.8125 106.148  c
-25.9583 104.653 -24.8177 103.471 -23.3906 102.601  c
-21.9635 101.731 -20.5833 101.296 -19.2500 101.296  c
-17.9166 101.296 -16.8203 101.737 -15.9609 102.617  c
-15.1015 103.497 -14.6718 104.635 -14.6718 106.031  c
h
-17.1718 105.000 m
-17.1718 104.062 -17.4036 103.343 -17.8671 102.843  c
-18.3307 102.343 -18.9218 102.093 -19.6406 102.093  c
-21.1302 102.093 -22.4974 103.153 -23.7421 105.273  c
-24.9869 107.393 -25.6093 109.505 -25.6093 111.609  c
-25.6093 112.567 -25.3671 113.307 -24.8828 113.828  c
-24.3984 114.349 -23.7864 114.609 -23.0468 114.609  c
-21.6302 114.609 -20.2968 113.552 -19.0468 111.437  c
-17.7968 109.322 -17.1718 107.177 -17.1718 105.000  c
h
-1.75000 101.296 m
-2.67187 105.953 l
-3.23437 105.953 l
-3.28645 104.599 -3.57552 103.614 -4.10156 103.000  c
-4.62760 102.385 -5.27604 102.078 -6.04687 102.078  c
-6.67187 102.078 -7.16927 102.250 -7.53906 102.593  c
-7.90885 102.937 -8.09375 103.349 -8.09375 103.828  c
-8.09375 104.161 -8.02083 104.479 -7.87500 104.781  c
-7.72916 105.083 -7.41145 105.505 -6.92187 106.046  c
-5.60937 107.484 -4.76041 108.567 -4.37500 109.296  c
-3.98958 110.026 -3.79687 110.713 -3.79687 111.359  c
-3.79687 112.401 -4.23437 113.328 -5.10937 114.140  c
-5.98437 114.953 -7.08333 115.359 -8.40625 115.359  c
-9.13541 115.359 -9.97395 115.187 -10.9218 114.843  c
-11.2552 114.729 -11.5156 114.671 -11.7031 114.671  c
-12.1510 114.671 -12.4947 114.901 -12.7343 115.359  c
-13.2812 115.359 l
-12.3593 110.453 l
-11.7968 110.453 l
-11.7447 111.994 -11.4296 113.083 -10.8515 113.718  c
-10.2734 114.354 -9.48437 114.671 -8.48437 114.671  c
-7.72395 114.671 -7.11718 114.455 -6.66406 114.023  c
-6.21093 113.591 -5.98437 113.062 -5.98437 112.437  c
-5.98437 112.041 -6.06770 111.671 -6.23437 111.328  c
-6.51562 110.713 -7.10677 109.872 -8.00781 108.804  c
-8.90885 107.737 -9.48958 106.934 -9.75000 106.398  c
-10.0104 105.862 -10.1406 105.328 -10.1406 104.796  c
-10.1406 103.817 -9.78385 102.989 -9.07031 102.312  c
-8.35677 101.635 -7.44270 101.296 -6.32812 101.296  c
-6.00520 101.296 -5.71354 101.322 -5.45312 101.375  c
-5.30729 101.406 -4.97395 101.520 -4.45312 101.718  c
-3.93229 101.916 -3.58854 102.015 -3.42187 102.015  c
-2.98437 102.015 -2.61979 101.776 -2.32812 101.296  c
-1.75000 101.296 l
h
10.2500 101.296 m
9.32812 105.953 l
8.76562 105.953 l
8.71354 104.599 8.42447 103.614 7.89843 103.000  c
7.37239 102.385 6.72395 102.078 5.95312 102.078  c
5.32812 102.078 4.83072 102.250 4.46093 102.593  c
4.09114 102.937 3.90625 103.349 3.90625 103.828  c
3.90625 104.161 3.97916 104.479 4.12500 104.781  c
4.27083 105.083 4.58854 105.505 5.07812 106.046  c
6.39062 107.484 7.23958 108.567 7.62500 109.296  c
8.01041 110.026 8.20312 110.713 8.20312 111.359  c
8.20312 112.401 7.76562 113.328 6.89062 114.140  c
6.01562 114.953 4.91666 115.359 3.59375 115.359  c
2.86458 115.359 2.02604 115.187 1.07812 114.843  c
0.744792 114.729 0.484375 114.671 0.296875 114.671  c
-0.151042 114.671 -0.494792 114.901 -0.734375 115.359  c
-1.28125 115.359 l
-0.359375 110.453 l
0.203125 110.453 l
0.255208 111.994 0.570313 113.083 1.14843 113.718  c
1.72656 114.354 2.51562 114.671 3.51562 114.671  c
4.27604 114.671 4.88281 114.455 5.33593 114.023  c
5.78906 113.591 6.01562 113.062 6.01562 112.437  c
6.01562 112.041 5.93229 111.671 5.76562 111.328  c
5.48437 110.713 4.89322 109.872 3.99218 108.804  c
3.09114 107.737 2.51041 106.934 2.25000 106.398  c
1.98958 105.862 1.85937 105.328 1.85937 104.796  c
1.85937 103.817 2.21614 102.989 2.92968 102.312  c
3.64322 101.635 4.55729 101.296 5.67187 101.296  c
5.99479 101.296 6.28645 101.322 6.54687 101.375  c
6.69270 101.406 7.02604 101.520 7.54687 101.718  c
8.06770 101.916 8.41145 102.015 8.57812 102.015  c
9.01562 102.015 9.38020 101.776 9.67187 101.296  c
10.2500 101.296 l
h
17.9375 95.2968 m
18.3541 95.2968 18.7109 95.4427 19.0078 95.7343  c
19.3046 96.0260 19.4531 96.3854 19.4531 96.8125  c
19.4531 97.2187 19.3020 97.5703 19.0000 97.8671  c
18.6979 98.1640 18.3437 98.3125 17.9375 98.3125  c
17.5208 98.3125 17.1640 98.1640 16.8671 97.8671  c
16.5703 97.5703 16.4218 97.2187 16.4218 96.8125  c
16.4218 96.3854 16.5677 96.0260 16.8593 95.7343  c
17.1510 95.4427 17.5104 95.2968 17.9375 95.2968  c
h
18.1250 101.296 m
15.1250 111.906 l
14.9270 112.625 14.8281 113.057 14.8281 113.203  c
14.8281 113.359 14.8776 113.489 14.9765 113.593  c
15.0755 113.697 15.1875 113.750 15.3125 113.750  c
15.4687 113.750 15.6510 113.666 15.8593 113.500  c
16.4322 113.041 17.0104 112.395 17.5937 111.562  c
18.1250 111.906 l
17.4375 112.958 16.6302 113.843 15.7031 114.562  c
15.0156 115.093 14.3593 115.359 13.7343 115.359  c
13.3281 115.359 12.9921 115.237 12.7265 114.992  c
12.4609 114.747 12.3281 114.437 12.3281 114.062  c
12.3281 113.687 12.4531 113.067 12.7031 112.203  c
14.6718 105.421 l
14.9947 104.307 15.1562 103.609 15.1562 103.328  c
15.1562 103.109 15.0781 102.929 14.9218 102.789  c
14.7656 102.648 14.5520 102.578 14.2812 102.578  c
14.0625 102.578 13.6041 102.630 12.9062 102.734  c
12.9062 102.156 l
18.1250 101.296 l
h
28.9531 93.4687 m
25.9687 103.937 l
26.9375 102.927 27.7812 102.234 28.5000 101.859  c
29.2187 101.484 29.9739 101.296 30.7656 101.296  c
31.8697 101.296 32.7760 101.666 33.4843 102.406  c
34.1927 103.145 34.5468 104.145 34.5468 105.406  c
34.5468 107.031 34.0833 108.648 33.1562 110.257  c
32.2291 111.867 31.0625 113.119 29.6562 114.015  c
28.2500 114.911 26.8697 115.359 25.5156 115.359  c
23.9843 115.359 22.4166 114.791 20.8125 113.656  c
25.4218 97.7968 l
25.7760 96.5781 25.9531 95.8645 25.9531 95.6562  c
25.9531 95.3958 25.8697 95.1979 25.7031 95.0625  c
25.4739 94.8854 25.1302 94.7968 24.6718 94.7968  c
24.4635 94.7968 24.1406 94.8281 23.7031 94.8906  c
23.7031 94.3281 l
28.9531 93.4687 l
h
23.0937 113.812 m
24.1041 114.375 24.9895 114.656 25.7500 114.656  c
26.6354 114.656 27.5546 114.330 28.5078 113.679  c
29.4609 113.028 30.2890 111.929 30.9921 110.382  c
31.6953 108.835 32.0468 107.276 32.0468 105.703  c
32.0468 104.776 31.8177 104.049 31.3593 103.523  c
30.9010 102.997 30.3593 102.734 29.7343 102.734  c
28.7968 102.734 27.8776 103.112 26.9765 103.867  c
26.0755 104.622 25.4375 105.666 25.0625 107.000  c
23.0937 113.812 l
h
42.9375 95.2968 m
43.3541 95.2968 43.7109 95.4427 44.0078 95.7343  c
44.3046 96.0260 44.4531 96.3854 44.4531 96.8125  c
44.4531 97.2187 44.3020 97.5703 44.0000 97.8671  c
43.6979 98.1640 43.3437 98.3125 42.9375 98.3125  c
42.5208 98.3125 42.1640 98.1640 41.8671 97.8671  c
41.5703 97.5703 41.4218 97.2187 41.4218 96.8125  c
41.4218 96.3854 41.5677 96.0260 41.8593 95.7343  c
42.1510 95.4427 42.5104 95.2968 42.9375 95.2968  c
h
43.1250 101.296 m
40.1250 111.906 l
39.9270 112.625 39.8281 113.057 39.8281 113.203  c
39.8281 113.359 39.8776 113.489 39.9765 113.593  c
40.0755 113.697 40.1875 113.750 40.3125 113.750  c
40.4687 113.750 40.6510 113.666 40.8593 113.500  c
41.4322 113.041 42.0104 112.395 42.5937 111.562  c
43.1250 111.906 l
42.4375 112.958 41.6302 113.843 40.7031 114.562  c
40.0156 115.093 39.3593 115.359 38.7343 115.359  c
38.3281 115.359 37.9921 115.237 37.7265 114.992  c
37.4609 114.747 37.3281 114.437 37.3281 114.062  c
37.3281 113.687 37.4531 113.067 37.7031 112.203  c
39.6718 105.421 l
39.9947 104.307 40.1562 103.609 40.1562 103.328  c
40.1562 103.109 40.0781 102.929 39.9218 102.789  c
39.7656 102.648 39.5520 102.578 39.2812 102.578  c
39.0625 102.578 38.6041 102.630 37.9062 102.734  c
37.9062 102.156 l
43.1250 101.296 l
h
54.2187 93.4687 m
49.0468 111.484 l
48.7864 112.380 48.6562 112.932 48.6562 113.140  c
48.6562 113.286 48.7057 113.411 48.8046 113.515  c
48.9036 113.619 49.0208 113.671 49.1562 113.671  c
49.3541 113.671 49.5625 113.583 49.7812 113.406  c
50.3125 113.000 50.8645 112.359 51.4375 111.484  c
51.8906 111.953 l
50.9322 113.307 50.0468 114.250 49.2343 114.781  c
48.6406 115.166 48.0781 115.359 47.5468 115.359  c
47.1614 115.359 46.8411 115.229 46.5859 114.968  c
46.3307 114.708 46.2031 114.406 46.2031 114.062  c
46.2031 113.697 46.3645 112.953 46.6875 111.828  c
50.7812 97.6250 l
51.1145 96.4583 51.2812 95.7916 51.2812 95.6250  c
51.2812 95.3854 51.1849 95.1875 50.9921 95.0312  c
50.7994 94.8750 50.5000 94.7968 50.0937 94.7968  c
49.8645 94.7968 49.5156 94.8281 49.0468 94.8906  c
49.0468 94.3437 l
54.2187 93.4687 l
h
60.9375 95.2968 m
61.3541 95.2968 61.7109 95.4427 62.0078 95.7343  c
62.3046 96.0260 62.4531 96.3854 62.4531 96.8125  c
62.4531 97.2187 62.3020 97.5703 62.0000 97.8671  c
61.6979 98.1640 61.3437 98.3125 60.9375 98.3125  c
60.5208 98.3125 60.1640 98.1640 59.8671 97.8671  c
59.5703 97.5703 59.4218 97.2187 59.4218 96.8125  c
59.4218 96.3854 59.5677 96.0260 59.8593 95.7343  c
60.1510 95.4427 60.5104 95.2968 60.9375 95.2968  c
h
61.1250 101.296 m
58.1250 111.906 l
57.9270 112.625 57.8281 113.057 57.8281 113.203  c
57.8281 113.359 57.8776 113.489 57.9765 113.593  c
58.0755 113.697 58.1875 113.750 58.3125 113.750  c
58.4687 113.750 58.6510 113.666 58.8593 113.500  c
59.4322 113.041 60.0104 112.395 60.5937 111.562  c
61.1250 111.906 l
60.4375 112.958 59.6302 113.843 58.7031 114.562  c
58.0156 115.093 57.3593 115.359 56.7343 115.359  c
56.3281 115.359 55.9921 115.237 55.7265 114.992  c
55.4609 114.747 55.3281 114.437 55.3281 114.062  c
55.3281 113.687 55.4531 113.067 55.7031 112.203  c
57.6718 105.421 l
57.9947 104.307 58.1562 103.609 58.1562 103.328  c
58.1562 103.109 58.0781 102.929 57.9218 102.789  c
57.7656 102.648 57.5520 102.578 57.2812 102.578  c
57.0625 102.578 56.6041 102.630 55.9062 102.734  c
55.9062 102.156 l
61.1250 101.296 l
h
71.0468 97.5468 m
69.8750 101.671 l
72.2500 101.671 l
71.9843 102.625 l
69.6250 102.625 l
67.0312 111.546 l
66.7500 112.505 66.6093 113.125 66.6093 113.406  c
66.6093 113.583 66.6484 113.716 66.7265 113.804  c
66.8046 113.893 66.9010 113.937 67.0156 113.937  c
67.2656 113.937 67.5989 113.760 68.0156 113.406  c
68.2552 113.208 68.7916 112.588 69.6250 111.546  c
70.1250 111.921 l
69.1979 113.276 68.3229 114.229 67.5000 114.781  c
66.9270 115.166 66.3541 115.359 65.7812 115.359  c
65.3437 115.359 64.9817 115.221 64.6953 114.945  c
64.4088 114.669 64.2656 114.312 64.2656 113.875  c
64.2656 113.333 64.4270 112.500 64.7500 111.375  c
67.2812 102.625 l
65.0000 102.625 l
65.1562 102.031 l
66.2604 101.729 67.1822 101.276 67.9218 100.671  c
68.6614 100.067 69.4843 99.0260 70.3906 97.5468  c
71.0468 97.5468 l
h
76.9531 101.296 m
77.2968 101.880 77.5338 102.427 77.6640 102.937  c
77.7942 103.447 77.9270 104.453 78.0625 105.953  c
78.7187 113.390 l
79.3229 112.671 80.2031 111.520 81.3593 109.937  c
81.9114 109.177 82.5937 108.135 83.4062 106.812  c
83.9062 106.000 84.2135 105.432 84.3281 105.109  c
84.3802 104.953 84.4062 104.786 84.4062 104.609  c
84.4062 104.505 84.3724 104.416 84.3046 104.343  c
84.2369 104.270 84.0546 104.187 83.7578 104.093  c
83.4609 104.000 83.2135 103.822 83.0156 103.562  c
82.8177 103.302 82.7187 103.005 82.7187 102.671  c
82.7187 102.265 82.8385 101.934 83.0781 101.679  c
83.3177 101.424 83.6197 101.296 83.9843 101.296  c
84.4322 101.296 84.8125 101.481 85.1250 101.851  c
85.4375 102.221 85.5937 102.729 85.5937 103.375  c
85.5937 104.177 85.3203 105.088 84.7734 106.109  c
84.2265 107.130 83.1770 108.700 81.6250 110.820  c
80.0729 112.940 78.1927 115.250 75.9843 117.750  c
74.4635 119.479 73.3333 120.567 72.5937 121.015  c
71.8541 121.463 71.2239 121.687 70.7031 121.687  c
70.3906 121.687 70.1145 121.570 69.8750 121.335  c
69.6354 121.101 69.5156 120.828 69.5156 120.515  c
69.5156 120.119 69.6796 119.760 70.0078 119.437  c
70.3359 119.114 70.6927 118.953 71.0781 118.953  c
71.2760 118.953 71.4427 119.000 71.5781 119.093  c
71.6614 119.135 71.7500 119.276 71.8437 119.515  c
71.9375 119.755 72.0260 119.916 72.1093 120.000  c
72.1614 120.052 72.2187 120.078 72.2812 120.078  c
72.3437 120.078 72.4531 120.026 72.6093 119.921  c
73.1614 119.578 73.8072 119.031 74.5468 118.281  c
75.5156 117.291 76.2291 116.484 76.6875 115.859  c
75.8437 106.265 l
75.7083 104.682 75.4974 103.718 75.2109 103.375  c
74.9244 103.031 74.4479 102.859 73.7812 102.859  c
73.5729 102.859 73.1979 102.890 72.6562 102.953  c
72.5156 102.390 l
76.9531 101.296 l
h
f
Q
cliprestore
newpath
-147.000 83.0000 m
-147.000 473.000 l
123.000 473.000 l
123.000 83.0000 l
h
W
Q
[ 0 -1.00000 1.00000 0 -78.0000 128.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
newpath
102.000 188.000 m
96.8000 188.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
87.7187 206.562 m
85.4062 206.562 83.5364 205.474 82.1093 203.296  c
80.6822 201.119 79.9687 198.281 79.9687 194.781  c
79.9687 191.250 80.6875 188.408 82.1250 186.257  c
83.5625 184.106 85.4583 183.031 87.8125 183.031  c
90.1562 183.031 92.0494 184.106 93.4921 186.257  c
94.9349 188.408 95.6562 191.234 95.6562 194.734  c
95.6562 198.328 94.9349 201.197 93.4921 203.343  c
92.0494 205.489 90.1250 206.562 87.7187 206.562  c
h
87.7500 204.312 m
90.9062 204.312 92.4843 201.104 92.4843 194.687  c
92.4843 188.416 90.9270 185.281 87.8125 185.281  c
84.6979 185.281 83.1406 188.447 83.1406 194.781  c
83.1406 201.135 84.6770 204.312 87.7500 204.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 154.218 m
96.8000 154.218 l
S
Q
q
newpath
102.000 120.436 m
96.8000 120.436 l
S
Q
q
newpath
102.000 86.6545 m
96.8000 86.6545 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 104.562 m
55.4062 104.562 53.5364 103.474 52.1093 101.296  c
50.6822 99.1197 49.9687 96.2812 49.9687 92.7812  c
49.9687 89.2500 50.6875 86.4088 52.1250 84.2578  c
53.5625 82.1067 55.4583 81.0312 57.8125 81.0312  c
60.1562 81.0312 62.0494 82.1067 63.4921 84.2578  c
64.9349 86.4088 65.6562 89.2343 65.6562 92.7343  c
65.6562 96.3281 64.9349 99.1979 63.4921 101.343  c
62.0494 103.489 60.1250 104.562 57.7187 104.562  c
h
57.7500 102.312 m
60.9062 102.312 62.4843 99.1041 62.4843 92.6875  c
62.4843 86.4166 60.9270 83.2812 57.8125 83.2812  c
54.6979 83.2812 53.1406 86.4479 53.1406 92.7812  c
53.1406 99.1354 54.6770 102.312 57.7500 102.312  c
h
71.0312 104.000 m
71.0312 100.265 l
74.7656 100.265 l
74.7656 104.000 l
71.0312 104.000 l
h
83.3281 92.3906 m
84.7552 90.5468 86.5468 89.6250 88.7031 89.6250  c
90.6614 89.6250 92.2630 90.2734 93.5078 91.5703  c
94.7526 92.8671 95.3750 94.5260 95.3750 96.5468  c
95.3750 98.8802 94.6770 100.799 93.2812 102.304  c
91.8854 103.809 90.1093 104.562 87.9531 104.562  c
85.4843 104.562 83.5546 103.567 82.1640 101.578  c
80.7734 99.5885 80.0781 96.8281 80.0781 93.2968  c
80.0781 89.4114 80.8776 86.3932 82.4765 84.2421  c
84.0755 82.0911 86.3281 81.0156 89.2343 81.0156  c
90.5677 81.0156 92.2343 81.3020 94.2343 81.8750  c
94.2343 84.4687 l
92.1197 83.6666 90.3906 83.2656 89.0468 83.2656  c
85.2343 83.2656 83.3281 86.3072 83.3281 92.3906  c
h
92.3750 97.2187 m
92.3750 95.5208 91.9947 94.1875 91.2343 93.2187  c
90.4739 92.2500 89.4166 91.7656 88.0625 91.7656  c
86.8020 91.7656 85.7187 92.1901 84.8125 93.0390  c
83.9062 93.8880 83.4531 94.9062 83.4531 96.0937  c
83.4531 97.9687 83.8828 99.4739 84.7421 100.609  c
85.6015 101.744 86.7447 102.312 88.1718 102.312  c
89.4531 102.312 90.4739 101.851 91.2343 100.929  c
91.9947 100.007 92.3750 98.7708 92.3750 97.2187  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 52.8727 m
96.8000 52.8727 l
S
Q
q
newpath
102.000 19.0909 m
96.8000 19.0909 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
82.6562 37.0000 m
82.6562 34.7656 l
87.1406 34.7656 l
87.1406 17.0781 l
82.6562 18.2031 l
82.6562 15.9062 l
90.1406 14.0312 l
90.1406 34.7656 l
94.6250 34.7656 l
94.6250 37.0000 l
82.6562 37.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 171.109 m
99.4000 171.109 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 137.327 m
99.4000 137.327 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 103.545 m
99.4000 103.545 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 69.7636 m
99.4000 69.7636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 35.9818 m
99.4000 35.9818 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

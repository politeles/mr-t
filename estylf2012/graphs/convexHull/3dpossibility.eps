%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 18.25 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 200.000 200.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -200.000 -200.000 ] concat
q
[ 390.000 0 0 390.000 5.00000 5.00000 ] concat
<<
/ImageType 1
/Width 390  /Height 390
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [390 0 0 390 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/idFR,'#__sL^U30uld*^.MPHmIc?IfN:D=?f->cA.%.a;o^l*jWZ@U5LBLd`;Zi"."NeJ$2'((Jd
@Y)RXGYB<7SE9-&c_"oDKTO`3I7F"/h%UMha<^4Q&7SHu2%`0@o)<CrrTX2\IT[kJ/0_D:n?%\I6jQYf
p><3_=0n@qd$+eZ>0)-o^7`l<#U-ke+/n;5`alG*6AS>/q&2Bn+L8.Y#pJ@OpgN=^*D)RI`[?G$,(cj$
s+j_Qhb&Lrd$+eZ!m&ccp\uJ_cU\>PONER97?:@E.S^6U%/A-@]rNK\]rB,K'kR"c6LNq/a7jmW.EDW"
lC*<27*)bYa.]Bsq.'W"YOHfD+dW1X`7Fl&":iM:&g:?(oabK@9Q<<C4@4ic^lL_NNIm.#T8s-.fY#))
KFj3W9`t4X>k=SU0AFInOEo_"Bh*ipT_Y_nmWu_)C1f#uH"fd%`*gR9l/M@\o+FCV!$6S#)=fpnO;3gM
Vns[3*(9Rn]Mqr/NjO+=6q.GB#kF8UHQA?!a8]J4cS296,D;QgI'lNtp\;mmG9s@M0D4f?+fE,b-S@cN
]!A+P*[,&Y_O$cdL7BmQ^GZTec-[#U7gReoG?<A0^^SEIMh6r<0'\2cPn?>`"7Goe=I*MjAG/\tq["?]
1-F@d#U,(Uqu%+KIH27en7tiVUWnHn$],F%3,7C/$W)eC3@<M@8>$A*>Moh<9>G'WN`lL6/UDj\2JMlK
4CClaq[">R#u@uJG6aop0,H@,4a;6Ie]oPe6VHej/s@qP"gf/=:#&l"fnKl)P/G0J&t+a'aHGaUA)W!E
Y4-6o7j:B,1^4R0IOY>_Q=X>(,,=PG7H9NT]O0XTIm2.:Wod^i4R)O]OEnNmB5i9_V5OZ^aVqS<[pN98
R9^Ue6LVRmNSpQTiI.n*c:\FWZ>DhcDC3GXa1\l3kY$U$UA3"8b)gfn6!!Ue45n</'&ni,+2ScKl0tW0
bL501goh3+15e^^pBeBuiYtLYDX:g7J$06(+bpUt=Y7:;/67Fj"jiNgMKLK8'1+I?G$=9=A*,UG1l^M.
Lo`V??lBftCWa"(K8r@nYhG4Sj*[KZ1U7,g%iucI,;L3E;as8$^0'!$a9]OFZt.7j]os?F:R3.[,1)In
*Yrl:^0-I5f7i0@A^*N0IjS\IohKl.^T\M>)'5'SloEKr%PK7G\Hs:5C`r&lYtf)kot?1)OF(cKR<u\u
[MbZaY:T!C@QG.T6e5,Z,=-/XXb2;b!55]1Im669qoZ4cXbA-U.Yfse`:JTmZ3R0]nK'S7"4&Qs_CNbo
AQ(sP23@P2_>f1a.mnJ%-kk_p*guAJ[ou8]+pP$SA_+,r9MkH*jEX%ZO@AOa,N/qah'*MAMJqer3u4'/
YLg5&Qu"Oj\*Q+MfF1Q;%>W!!&b1Ic4Yp5U4_Jcf1G:.Dk#IWd$kJaBPTa0@@L]PO_<3BK3'JVr&>"1`
KNOoA.A-;t^3N2:P_&E=@Y&Ha(Amg[caEKGb%_"ga<nfObN+(t4?Pp,*ZcIo&/tQH'.uXq&1C`pSe+e<
GR(S%%?HTLJ/t+n&6T)2*1,XUc@f9k%E1ob<Y(=(K+kO4I&A76[1^+[H3[[qhUdlPAhcLmm>)bCh19T*
p<&QnW6OJ4&74`O?WeohO-$1PH`q[=BV$Vkfr9=f11Bc\;??S;+\OQb#fc%5&`2u;k.Cr*3"d8U90l>8
c0a1A>-H.pGbE9*(1;C3d0T!uHWi\G&X7ET4iM\BKm,5/Zf0<)Lb;h#$/LlgC<?RF0^nQ$jF%Ai[knJF
i=Rh7Z(o%(<pRFR=kC=,_oo,q/3H`ETZDcp,PRA*'?=Y0@07AYP\g]0GUbZihH1Po_\7JFUe.n&=3)$0
]!uQDGi798<-U4),<\:_nY*/](gZ\,4r@UCU4Med0/>\Je>RLtX_3B"1WKnX]U:=4n1r[D<uMKCQpj/#
:kk>b+[S\1)\D7EiUNr)n3qiZ(7r1RL9j,L4BQ.M*Zu`'fcf9p%@96%b>s:_`!t63*e#TKYfMK.+K^IC
e-B5%@sCXX.g@8cnFV@g)n>7:S<U,]YP@;&n=&+s89bAtX;`2e9\'F*:+5hUN"!8+-C_O^$kJTE(Bn/T
OU&1*3]m^<f/'S,`*;I(dn\T)/8@Be$#ce:4UZS`D1IPY6Io-$b'Lr-ARFQNTM1'K<7W"[QAi<RBerS/
C)8:Q[k3Lm7q.T._e[Og/0M%Dq^8'rE*9'.OaZBrAJVSMrF@09,h1fB5hW_"Ljd"N;<sN&=n,+N%%2<!
M\Y3mZJXPLSOHjdA2ub]T5;9dbN+)<aV<q*Pp,*D)nTll`R.fK@2Z<\pcuZf41It(hQ*qQ[_jnm"gQ:e
F*V*c#f,UJ+u:8]-o7HKnaNhK&9hZ#='NhNXJj'K_t309B#5M.6JeUknurN5O-g)e(#cu>Tp#rR7j5OS
26k4YZE`nT*I=>#5ODDD6W4a[]](ENbJIb6[D.lWJ1ZoJD9<LH>,JSRHBauiMFp]W4H$Af-eilH6scGY
YOf&9?H)D5Z<.]F:%nQ:M`_ju-j/WYqt[BcEK+R@a@/o@1-Auh36K*\G[D?AO74.2*[6Ck[@ZWo1?7?D
@OR!*qa6Z$$4i@q[YjVEjN*0=A'Y<tRH+gb87jtHB&PSZjqXW0n,H/jmqpXFL%4XtRIMheLBktNYFX+S
L!5X\Mm,n.\fe;cpF$NoOEh@KnMB[cG"Ig9RB.Zk'T;n&3%<%R(DdmPXU#H%NFah&msE4dO*4<]:Lug+
OZae3Lh+9Cla9KBKQf,.Yp*iKKZncsMrR51Ab4m&K>cpHa.gDd!5Qtr#Lo"bpsE\'Msj)5i>%WNb]jo]
JB2D0/D]dd]E=W31;!M`6pkk1A]UVROWj>9a?g1$]4tWHZ,jVa1nDV05#pD,MpRHf[OAPGZYJ*<"(.;C
1*eu7=U<tLIg35]&Y9OcR"]M8@huIt"[0qDNg,R4$9NMUMl5*BL:9]c4:?,b!H)tSjp7X156;SQHX<iD
5ah-n*c-Q9b)@,SP]b54bZ0Z+HMA(TK!Sr&_m3f7]\B`jh-U#c*E451=%O53PeDRcA]VNWCdiTACk!5F
%VLn-g&CIP))>&FUf.[iQrW0n=)jb)%(TIjrli#21*et\=i_D5%9U6@)dZD(Y/j&b=;GE<Jf\L\Oj[Sh
^#@(W2-m9X'.ss\"_Gcf#IAY:`mX?k5P`H2/3Ha@^K%j'n(<)u&!@Nlq[qM=GnX#?hXEe`n@[G>77@Dl
Ru;Zu<Rep%CA_ORZ]*"P_ZOJiZP];.kKT.A.Pp$@2)Z$ZI/a>ldXjif+R9J4?Ho<L==A4W-XU#8af]Iq
VgMDk-8d#8/qUA:_ZOK@`S]R"OR"I/A/C!pPrT#Qhc/n1)-Jl$8pI![5^9tFaHLe$#Ki"7MXg1$)*"g>
IWb/7?-=)A"rY>5+R;q:"%hnSpV6rDZ4]"37rV[WTT!#aZE(j#C.G7'r9V!kMX7pcCaQg`okdh?KVqp_
\\l*kd4;i&<PgiGpWqa3$F3k.5hW+X(^TS<('@!S>8&d\_(:NZ)3iC!Vio"FNg0P#_t%)h=6#VGaI33_
Z:3`'1*d70n,um6E>=C:S-9G,2D6I7hC;0VI#fKuTLrLqiY40N*g%c'=etoS(m1p101M'uAT<t[ak*k+
jf6%e/;UBC?<rub/8B_N41Vm6=CbQX,Ra*f!5Q1f\*T5gf5&\B7(+:%:pqd1hPaOeG?Hb@M*Wr*[m6l)
0$BJ8ZL>H!/7'(oc-IS0L'PkCZN(/X5uRUYTd!DWnFq-%hDqS3J<O+E37?+A`an?:`lK?0mmssoCOnb(
WW(;1l"3f*Na/[-=QBKcDg7)>WTdEoUFS2fr3!S,Io)HU[8Z36$fi\jOjq:,;<1YY1nc/-oj)u0-:@4'
a_'rE_ZOJk`L/9sU(V"7Z='^ACr7m=,K<V#Y^QFh1FX7KDeBj=]V)@:9Nlf(<#0;80'GjF)j,JsJ*7Ae
6tS?i1uV!5)d25>RI9&MmiB$f5*Ms'DuV1]PT_Oeb#X1^J55FQ!h$NpR<57L=^9T/_ZY%VhuB)d9phdN
f@gM'9V,<?]Wj"e_F%k>@)e=._@*[cft<sdS9KKkNq>de[;YU**^I.HfV5d!B>Oa^8$YBt)7Yi8jB;u8
n9KAS,N2!IC]4T=A6nfd19L&sAKaHJ])phh]THta,6R,JTd/Nk+Tq#P&tF[Sn7H4s*(_HhYKZcF*!m./
NheW]rnr/&+=Q+X+SC"[A4UqI=Wfr.447,ETcTdLFJOIrM]:`h8&--".0K>,=EpaLkT+<mOh,G@C+[5U
f7K#>5IgVjHN1OQ`+@$&TPR&A_I!Pb'/YUe#oksN=Gs$7eR\9uOXA+ecLUj"7A`9,U+@#M/V^a[Oj\h4
Y%j4nkX^n9W:u@Um*mZ7P!*:MMQS01(VcC=7ICMd3SGa#Unna<J!+BhYJRl'ZEAIqA\)"MPHK))hqr]%
I$"ZN>7)BBCTcg&_.C$$6.npW7^D4uB9=DF^BQ+W9I/qs,H[=FHn&hn]\W`cap,^]cU&\KG\*j!V2.Q@
a^PE3*U3==qo\dsinHt$"!8ps1A([/aCYW]l:>4T"toJ69HAbG,TAr8hPX8hh/^7=l.]Ojf9LnOR<9bk
70^)[22cG:8@=AnZ:38Tcdj#$$-HSB4>/*MjrMVHq=TssV5$H`A\,"L)39e'>jp2ojh'a7P8E[uA2f'_
Yp);,#!U^ek??q;[/c/h`CtM<3?Gu&?:XkB=WT*/YOu:Ob>N+ESoI_?^#<hRi]CuDb#7gC-G=@M<b!D6
2i&^#5CnE'JG,ol9A6SYVm8io*D*cN6$?up<b!M?LNnjO&$72t-psT%TPR&AM!V1G>rh4A1"O2If&B9'
\+SHNni0)=>IrCL@kqKLiUB+c9GUp-DDRp=`>EB!!J;Pl^B+bm7`)U(gAA(*Z?Fiq9UHV)DeU!.YLX\m
ph-L?E>G$@WF.`okJ=/E"&BiK9!.SJ)?)%nkt!8G=rbJ$Cm,]39sGYRd2'iGZN.0JEMT&Ipf]LE4,EFr
AoNm$&EN^9=n_cNbE.!8=`[nG-EibD6$phRGYsP??OO3M#]^>,W>5:M^GmR0\Tbq*c(XJc;EDB)@n!hV
QT,4hPT"el8ZckPQHA`MiMf'<CS<'tEXRm1LALg):un&r%2IOtN^E-P?#!d1XH9!A[jc[iCO`a%5/Ouc
MJN<;!TSDuXk?%U(X8Wd:]tnY&g!W5(-qDnp)PSjk-1T$nk]P\(c.!*e7t*R]/%"Tgos3b1+t&>k=&qV
?!\L"SL^ujr'oP]F_]g*"J<=_ZL@J?f"bj,i?:!8`uMh'_Vt^7I$##/(L.1u'-O^FK69GF>*XBQ;3;<@
L]$GkOj^eJYYTc`C;`XPbQ</IlH7Q=44f!6ZQS^sPg6CbEFNJKnG>GJ_pLd?n=qL$%R6TpN9WQ^Hn[PD
86n",[0T$b7(rdsXgTI[laRAV@\?D^(R-cn98LOcEC`QI/R/r?SN$(:bBgI[+=PE^&o:uAV@jq*C$jMN
N\oO6\ng8kGSrY4:$q[F;jMqXi%k3Ue"r:?8;'E_4%DosCZ1L&H0mV>7U<=LF0<l4L<[$5VWgX-hS(4W
\TCC9VtR0d5*>8`VN<>%r^fN_3^_:7KR!_=Eomsu)pAPW"mj-X[0Xn-1D72)PHtChf`/jY&\N>6'Zg&"
,+Q;*eo`bt"QRQ@Bhn^f/71G[JB?qO4GMB5m;f#^3-H95I4ZX/7u@?"Yq'?Z,q+u?m6)\BJ(eBrGh;2_
72V%1qg5SiQ?@g!"Et&%%s^o-o<RM;@ucd[45,oDFfbg&?l/t.)`Y5Dp_cG\2:!"+=`&KqaD*Nj58C@A
EMR#;]'jb5O2*1L:/0m*n=U<9aGTT7K\*m,pdNQ)1;RL`_fI*nk)o?6le(Ju`p&hfH=3#,[a6=9cJ*.8
H19dN\-XArH[AY+/Rl%NpL[(>7YL[B$GnT?p*e&pV62A]7HJ!b_,`OYmTKb5QQuGmi"Oq'>c%0l9'buq
PeH86Hq*tPYka4\QK;`63Ke?V4OMC^Dm;.n\Z%Ol+tKDO8Fk8TAJ!PI:tK``'_3D;[[ldTqE6^XK3o#G
.d=92-Y;PKR_jT_&S0.XMi*PeQ*F3D(p$35eK6H]a!%GFHSR3HfKuN1]#]95PHK))e?]q"@B^krUnrU>
&R;3p8BoeQ*f%IZ(`9KXjk-1oNg/YicXNY-*N=4W0Fi@1*_#Q3$b/n$BO_FMGYrET>t<o%876pYZ4d^s
Q7e1R,Ij9'L-g(:UhjWfDn)`mn)QLo6;BO=qH24XM+EVW!t6Ah5#B%)Qk8YrMoFV^gl+DLjG5%oqf_3l
lNRk%EZBKX2p8L2F>(eBVNW.*p&)2.gVXT48qBo>#C-JB[M:2`6^r2(,Gg8ZeS[n&KVV2t=p7Z<"bJsh
Y;"lEc'/Ijg-D:0<G&<`7-7%Np:Ro?'*]lQ`u1<)[U!`6P8D&,M9Psn4^PKV!;=;In)m,<#/6`V^il01
Sopjkd11Y_,6Fb_.01Hf2%^]+4LBW-<fpNE,7..Dp6uCZ*,3;@>@N@]K:J'%CE;s,#1$I_(DU<(C/7b$
RgO_i(c\p?'Q'XhZ$8>Y"-6tK;^btj.mSD@;F^J1I)RXIL2=P<K`s]:1dB&(@0dZ.3)Y>mg65i<]sYOV
2n7kgQNNNf0E/a*=`^D2IpZ["WGoM/4<qDpfmnlV;-"+#p=GiO^W/J1RgO_i(c\qJJ1k'YJO*<\1-(M$
0`)k>XoE%&He;TCV6=^m\^h4=$,nd%>qFhrHuCU.JOrpJ/34DJDOr(1"J<5^Z]G4K!oaG4:^4Z"2'Y6F
8Aa`sB7BrEVHP\d_<Le3e5YGjLSjEo,9aA:GhIG]d#gjgDqtsp!bL:do$k]#8[s[83VCtCmmmX#?4l-c
nF-G'lc>2$%nf7mY#sW3<\Rm`mj8541-YAG7iK*C8:c3A`MkZAL&fj43*N_9`bBl3!ak&(isW1qF/7s%
jNWhU8/^_?=u:7Fe<^.TE,8jYNg0;C#BROMFJOPZ.R&*AC(BRNOh,'^F1aoX-c+fc*Ib:TSsj4K4L0rr
8()OdXq]NV!h5,>I:\UH79FcpS3.g19QjG`>I)u4"1%B&].WC*4*fI'&'$1f8(u2dZM^qffZ<=/VB_(c
Pl4bG86KJ5Td)/Ki;3TTU:nF+FC3D10G+!`pZ9I0F69Ul\ahk."W"#q#n,8p@ed)W14j^?;Rnq-a/^q6
7`$7W)?IFiPW:[p6+&5^l_YY9VT>XckU]6L8@SZgeU`Qp^h+28a.]XA/N_BC2A^-bRu;g0>KMn)]/V@"
MXeaT=EmOj:cBJ,(<&<R?aU=_59n^)5[G@>iGMt)0=ghs);^Jk%HrVS\M'NPg1BrB\F*R*$qFJXV@/EV
Ok)sAiL2ejo7+ZDO2lk7PTqb8-',)eaUq$XIQl2K89[>ZGgH,>rBoj5N[08lR"K%IpH#HZdsIB9bepgR
o:RO&WW]@iR.Wm-T'<h$+&?_an^@&S7]HTl8\Ba0EpAT_HZrD\-oOqD[.><;.GMB9;4%1)WUEB)-JC/s
.Dh_<CY@P18Eo,V%kqMOKaXDS'8);ZGSBJ"WVIb9,I5EP7iK#6e;?Z]KTJe(,@5-T1)ds$,LqEP::umK
QdJ1)e:OMQ$lpeWGQ>=n9BXRaE--o#b<3fc.D'%tBd.[jQpe[,81d:HMPrLtik9LNaA+!:`5n[/pXCBM
p_5IE8ClA5>!)n3O'f\FC9E1rMCD&qh/sKc+lTp@?H-\o!?Q;Tl#ieuT:='-Pi"*6)E*2fe3(a`)*/Cj
naME\N#BQ>C@2/[chl*c7maF%@>;CEE?(h;pPcd'foae/V`BZn<V+aHN^E-P957emZiD+\(b_S/M/r[o
WVLjb=b)MhK8Y2b+5non;_oJd9h[R1dhO\\[dij!Yah0DfIZWtDRF+?*=9Z)j>LNFrUIU"qahW8<I>Ii
3'!I^NhhB^4u=+An=JM0$?&$a1&r=d(P=.R%k3G^R=-@VJrZXe[E^TDbWfXmH$Zc3S?pk)`&jG/8X;eK
<]dkEM<(@U&BY,5G/W+O:*_Quj%/^+eOZlIL`o.IN+=(b$S_d:NjK]4H!,s^NQQI@j%17%+=b5GGhib]
pIaB:4eCBt!&D2KP*+43<9Qjl38;=TCFaTL;Q`qi)(]ARkXaId-;nB(;EPlbJW@+$,@)=q[[WHf=[S\&
44=&?[k0O_dl]^U$<]X#d#j@(%5l8!V"ggq+$.h![WQr<nnpuJADQV$j[b:n2r2.=gf\,<9o;H9K@#a@
Zb$0(Q?QV4+j8sQ3g()b`O]09<6/8=U?5#3k#8q6j7+)V1*#t_fSW.k,FN"05seUS2lVlbEXEi/+P^j/
[$"l'>,1d;LQ6Hl`QCTKnF)(RB_-if?(OL,<el]G!UdQ<P=`%Lbjo),pG1-YN%eV5O;4?Y.V(i^:jZR(
k"&mMQbs9"0q;4aC.+e.*HWQBE"BZ#8;[Xm(Y%#,r?'tmau7RJ`Bk?N2lVm-#`7J1hd>V=(>rdu4\;p'
Hm(RLdehfo7oH.`F<QPN-5A<1fQ?r2bh""!OubPj8gLBtM2/"pfV@k*BU#=0[2W%>M@Ve`i/X&[ceW]=
SMYOta>s]#L!994#!NJR5BkS=p2esum5i6#?OU&ZZh2/m]%K+/i31[sq>J^*26RRhJ6meVR\h;M,f!G$
pc.Cg7j9YR887]\;R1e<idJ:Z3>16!i\B[gi!=G#S\4]r]5$Adj=W<Ad-E'ulch$>GD#\0l*gP>Z)hq!
8?r`doE&>h5'O>qG2dN)iW6YaNASa<G2SW[*\\86Km)I_g0J,Kc&pLPGGO\pD__-%)bs$hE2`AQ%O<nC
7iH`>qnCF^D>)o$e76>,:78cBFenJ=amYkD3c6Q*HRoBGDpFQMEdV6K"8Ch?=9S)O3E!&JIBjQQpC41^
RQZZf)BEP0np]ObcnD[L/UE[,.WF:eYW*\$FJN7?+u?I'#W-CBaBtP'8-\$*l\4Hk_UI74SVR0:#`C\I
D;5:6*/SO*"o$M//>.Co8)e/u40XZIY`d#RE[8B)Xb/L\Kr7Yg#cg<_3Y(o03`oLRoK!ULCN"j%>7D&!
+LOYs8#1cVVsK)52?b,C)D'Tkp^"*VMBhYV9a0sCZ`s5F&cP!-59as![B]d6i@OGQEqY%Gs,Ge?CLmaB
<"JOOrkO$BY$L4r,-_)a_F6IRnU6B=OnQR'=b[HF,Ld\>2]k*/!:4k^E1&U_Hu"*.h#+H7E1O3g^>O>)
V"SB3.$-r4?6kAmnHmOKgQ4X2,8rTU#eSeP>eUYtgI1-f;Vhfi&d(<uQ6Q5;8PhlHC;M$P#8_Iog&I/8
Bkk-8G?kUB&/@BB<q*L5iNLpofcQ*dh@)L>#.VV:e6^(^V&!TH-<B%G\CS7@/7lf`mRt&Pr<qS0=:sLJ
O\fRkG4"S!1N/"@YCc\?)E\(PT=\TSB@c,Q+%c&dT7_fXfV$uL+/%W04sY(!$o<!R1."0KhmON6j\$0;
'uQt3P#>OK\1M'>F5bSN"nf@5945LH"?&h)@pcZuJ"aK*X-+cmgpT9k)>i%cpTIXuS)$NQ@,$3^VkDbW
=4R,HA;N@Vm?]PBDedP^>ub,&'%);j,a3XHqS'm*mg@B@ac[+;UBI$XKD6&UF9j-7\*YC[j?FPGJu`Y-
Sft.CK72]KlloLW9+H!sc>%qNI]f[f4+usU/bec6N`>q#\#X7d<O0OW\*^RA_EY2/<?Lo:YlL8tFtUA+
105bpN,s8'nkJMOA;L\3gOjF[rt634S(F4`kK`4S^MF/;WaprbDVLH@euqPEj\*7-<P.+r4g.JDK]/rF
]dMK[1*uJ#kO<FXReNm1M9QKH*'VF4$'M=ps*,!C?21fPf+PTuUS\ea01,XMomn&8WMh=9aHq.R*\='o
kn)8g=O0K0-W2RMi'_lELlk6('d7+H(gA+J('.;U7"kW%B%QPXW';Hj\D@pKKD-<F+fk.F4.Je.1i,Le
iUdSr?-H(09ZRh$D&-IZqhg[N$i#%(HO85(<=,pbQgNfW:)?2/@N62FFlO(FW$*=E0YX53LM&V*6Mt;<
B:4b(Cg_o!_!Kg2_5PT/MND3_gh>8*Z5*roZ*AHPYS2u'aq/S(G.+!)8;r3faL)jF&fctK80%sZabCsD
4$+VHbI*p,4!MTi#N&dHbf_q&6L8d9*5^#m#T7.PiF1nk4;ngkOj,KjCa)3%3l-c,G!q.1p:TFeSq:lq
KLB:%@lPL!&9<H#a,EG3o4UN_Ct;aEM_PM]elZq]clJ3<,=698h*VS\70mmd5oZL<&TT[2mmlu%n4elR
ndcI"3?%rA,SH;2Pi6t71a7V&Qnantdh+o!@I2@hHOGm(KFjXSLKQPq+bVC%);5ZGA.8Cl$BajQN=[iU
kVi$b&4-Xho6;MXb+fOlA-K:+o\Mn?+d7".&+,/aZC9cW=E]C:C4q\>HnD;j'-W$Fi-c15pBMb!#U*iS
(D/u-5s$9D&4-XGKFgIfi'4Rnr?_~>
Q
[ 1.00000 0 0 1.00000 200.000 200.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -200.000 -200.000 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: maandag 30 mei 2011 13.07 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
786 786 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
786.000 0 l
786.000 786.000 l
0 786.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 776 776 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
3.00000 w
0 1.00000 0 RG
43.0000 4.00819 729.993 731.991 rc
newpath
46.0000 733.000 m
118.187 733.000 l
118.422 732.177 l
225.830 14.1437 l
227.754 8.00817 l
768.993 8.00817 l
S
cliprestore
newpath
0 0 m
0 776.000 l
776.000 776.000 l
776.000 0 l
h
W
Q
q
3.00000 w
43.0000 4.00819 729.993 731.991 rc
newpath
46.0000 8.00817 m
371.155 8.00817 l
372.048 22.0761 l
406.673 716.489 l
407.503 733.000 l
768.993 733.000 l
S
cliprestore
newpath
0 0 m
0 776.000 l
776.000 776.000 l
776.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
46.0000 733.000 m
768.993 733.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
400 760 14 15 rc
newpath
406.250 766.250 m
406.458 766.468 406.614 766.692 406.718 766.921  c
406.802 767.067 406.927 767.463 407.093 768.109  c
407.656 767.281 l
407.802 767.072 407.981 766.877 408.195 766.695  c
408.408 766.513 408.593 766.385 408.750 766.312  c
408.854 766.270 408.968 766.250 409.093 766.250  c
409.270 766.250 409.414 766.299 409.523 766.398  c
409.632 766.497 409.687 766.614 409.687 766.750  c
409.687 766.916 409.656 767.031 409.593 767.093  c
409.479 767.197 409.343 767.250 409.187 767.250  c
409.093 767.250 409.000 767.229 408.906 767.187  c
408.708 767.125 408.572 767.093 408.500 767.093  c
408.395 767.093 408.276 767.151 408.140 767.265  c
407.880 767.484 407.567 767.911 407.203 768.546  c
407.718 770.718 l
407.802 771.052 407.869 771.252 407.921 771.320  c
407.974 771.388 408.031 771.421 408.093 771.421  c
408.177 771.421 408.281 771.375 408.406 771.281  c
408.635 771.083 408.833 770.828 409.000 770.515  c
409.218 770.625 l
408.947 771.125 408.609 771.541 408.203 771.875  c
407.974 772.062 407.776 772.156 407.609 772.156  c
407.369 772.156 407.182 772.020 407.046 771.750  c
406.953 771.583 406.770 770.875 406.500 769.625  c
405.833 770.770 405.302 771.505 404.906 771.828  c
404.645 772.046 404.395 772.156 404.156 772.156  c
403.989 772.156 403.833 772.093 403.687 771.968  c
403.593 771.875 403.546 771.750 403.546 771.593  c
403.546 771.458 403.593 771.343 403.687 771.250  c
403.781 771.156 403.895 771.109 404.031 771.109  c
404.166 771.109 404.307 771.177 404.453 771.312  c
404.567 771.406 404.656 771.453 404.718 771.453  c
404.760 771.453 404.822 771.421 404.906 771.359  c
405.104 771.192 405.375 770.843 405.718 770.312  c
406.062 769.781 406.286 769.395 406.390 769.156  c
406.130 768.125 405.989 767.583 405.968 767.531  c
405.875 767.250 405.750 767.052 405.593 766.937  c
405.437 766.822 405.203 766.765 404.890 766.765  c
404.796 766.765 404.687 766.770 404.562 766.781  c
404.562 766.546 l
406.250 766.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 776.000 l
776.000 776.000 l
776.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
46.0000 733.000 m
46.0000 742.060 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
48.4687 758.750 m
48.4687 757.770 48.6171 756.924 48.9140 756.210  c
49.2109 755.497 49.6041 754.968 50.0937 754.625  c
50.4791 754.354 50.8750 754.218 51.2812 754.218  c
51.9375 754.218 52.5260 754.552 53.0468 755.218  c
53.7031 756.052 54.0312 757.182 54.0312 758.609  c
54.0312 759.609 53.8880 760.458 53.6015 761.156  c
53.3151 761.854 52.9479 762.362 52.5000 762.679  c
52.0520 762.997 51.6250 763.156 51.2187 763.156  c
50.3958 763.156 49.7083 762.671 49.1562 761.703  c
48.6979 760.880 48.4687 759.895 48.4687 758.750  c
h
49.7187 758.906 m
49.7187 760.093 49.8645 761.062 50.1562 761.812  c
50.3958 762.437 50.7552 762.750 51.2343 762.750  c
51.4635 762.750 51.7005 762.648 51.9453 762.445  c
52.1901 762.242 52.3750 761.895 52.5000 761.406  c
52.6979 760.687 52.7968 759.661 52.7968 758.328  c
52.7968 757.349 52.6927 756.531 52.4843 755.875  c
52.3385 755.385 52.1406 755.041 51.8906 754.843  c
51.7239 754.708 51.5156 754.640 51.2656 754.640  c
50.9843 754.640 50.7291 754.765 50.5000 755.015  c
50.1979 755.369 49.9921 755.924 49.8828 756.679  c
49.7734 757.434 49.7187 758.177 49.7187 758.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
226.748 733.000 m
226.748 742.060 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
233.640 754.390 m
233.140 755.468 l
230.562 755.468 l
230.000 756.625 l
231.114 756.791 232.000 757.208 232.656 757.875  c
233.218 758.447 233.500 759.125 233.500 759.906  c
233.500 760.364 233.408 760.786 233.226 761.171  c
233.044 761.557 232.812 761.885 232.531 762.156  c
232.250 762.427 231.937 762.640 231.593 762.796  c
231.114 763.036 230.614 763.156 230.093 763.156  c
229.583 763.156 229.210 763.067 228.976 762.890  c
228.742 762.713 228.625 762.520 228.625 762.312  c
228.625 762.187 228.674 762.080 228.773 761.992  c
228.872 761.903 228.994 761.859 229.140 761.859  c
229.244 761.859 229.338 761.875 229.421 761.906  c
229.505 761.937 229.645 762.026 229.843 762.171  c
230.166 762.390 230.489 762.500 230.812 762.500  c
231.312 762.500 231.747 762.312 232.117 761.937  c
232.487 761.562 232.671 761.104 232.671 760.562  c
232.671 760.041 232.505 759.557 232.171 759.109  c
231.838 758.661 231.380 758.312 230.796 758.062  c
230.328 757.875 229.697 757.765 228.906 757.734  c
230.562 754.390 l
233.640 754.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
407.496 733.000 m
407.496 742.060 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
407.531 755.234 m
409.625 754.218 l
409.828 754.218 l
409.828 761.484 l
409.828 761.963 409.849 762.263 409.890 762.382  c
409.932 762.502 410.015 762.593 410.140 762.656  c
410.265 762.718 410.520 762.755 410.906 762.765  c
410.906 763.000 l
407.671 763.000 l
407.671 762.765 l
408.078 762.755 408.341 762.718 408.460 762.656  c
408.580 762.593 408.664 762.510 408.710 762.406  c
408.757 762.302 408.781 761.994 408.781 761.484  c
408.781 756.843 l
408.781 756.208 408.760 755.802 408.718 755.625  c
408.687 755.489 408.632 755.390 408.554 755.328  c
408.476 755.265 408.380 755.234 408.265 755.234  c
408.109 755.234 407.895 755.302 407.625 755.437  c
407.531 755.234 l
h
412.468 758.750 m
412.468 757.770 412.617 756.924 412.914 756.210  c
413.210 755.497 413.604 754.968 414.093 754.625  c
414.479 754.354 414.875 754.218 415.281 754.218  c
415.937 754.218 416.526 754.552 417.046 755.218  c
417.703 756.052 418.031 757.182 418.031 758.609  c
418.031 759.609 417.888 760.458 417.601 761.156  c
417.315 761.854 416.947 762.362 416.500 762.679  c
416.052 762.997 415.625 763.156 415.218 763.156  c
414.395 763.156 413.708 762.671 413.156 761.703  c
412.697 760.880 412.468 759.895 412.468 758.750  c
h
413.718 758.906 m
413.718 760.093 413.864 761.062 414.156 761.812  c
414.395 762.437 414.755 762.750 415.234 762.750  c
415.463 762.750 415.700 762.648 415.945 762.445  c
416.190 762.242 416.375 761.895 416.500 761.406  c
416.697 760.687 416.796 759.661 416.796 758.328  c
416.796 757.349 416.692 756.531 416.484 755.875  c
416.338 755.385 416.140 755.041 415.890 754.843  c
415.724 754.708 415.515 754.640 415.265 754.640  c
414.984 754.640 414.729 754.765 414.500 755.015  c
414.197 755.369 413.992 755.924 413.882 756.679  c
413.773 757.434 413.718 758.177 413.718 758.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
588.245 733.000 m
588.245 742.060 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
588.531 755.234 m
590.625 754.218 l
590.828 754.218 l
590.828 761.484 l
590.828 761.963 590.849 762.263 590.890 762.382  c
590.932 762.502 591.015 762.593 591.140 762.656  c
591.265 762.718 591.520 762.755 591.906 762.765  c
591.906 763.000 l
588.671 763.000 l
588.671 762.765 l
589.078 762.755 589.341 762.718 589.460 762.656  c
589.580 762.593 589.664 762.510 589.710 762.406  c
589.757 762.302 589.781 761.994 589.781 761.484  c
589.781 756.843 l
589.781 756.208 589.760 755.802 589.718 755.625  c
589.687 755.489 589.632 755.390 589.554 755.328  c
589.476 755.265 589.380 755.234 589.265 755.234  c
589.109 755.234 588.895 755.302 588.625 755.437  c
588.531 755.234 l
h
598.640 754.390 m
598.140 755.468 l
595.562 755.468 l
595.000 756.625 l
596.114 756.791 597.000 757.208 597.656 757.875  c
598.218 758.447 598.500 759.125 598.500 759.906  c
598.500 760.364 598.408 760.786 598.226 761.171  c
598.044 761.557 597.812 761.885 597.531 762.156  c
597.250 762.427 596.937 762.640 596.593 762.796  c
596.114 763.036 595.614 763.156 595.093 763.156  c
594.583 763.156 594.210 763.067 593.976 762.890  c
593.742 762.713 593.625 762.520 593.625 762.312  c
593.625 762.187 593.674 762.080 593.773 761.992  c
593.872 761.903 593.994 761.859 594.140 761.859  c
594.244 761.859 594.338 761.875 594.421 761.906  c
594.505 761.937 594.645 762.026 594.843 762.171  c
595.166 762.390 595.489 762.500 595.812 762.500  c
596.312 762.500 596.747 762.312 597.117 761.937  c
597.487 761.562 597.671 761.104 597.671 760.562  c
597.671 760.041 597.505 759.557 597.171 759.109  c
596.838 758.661 596.380 758.312 595.796 758.062  c
595.328 757.875 594.697 757.765 593.906 757.734  c
595.562 754.390 l
598.640 754.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
768.993 733.000 m
768.993 742.060 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
772.953 761.343 m
772.359 763.000 l
767.281 763.000 l
767.281 762.765 l
768.770 761.401 769.820 760.286 770.429 759.421  c
771.039 758.557 771.343 757.770 771.343 757.062  c
771.343 756.510 771.177 756.059 770.843 755.710  c
770.510 755.362 770.109 755.187 769.640 755.187  c
769.224 755.187 768.846 755.309 768.507 755.554  c
768.169 755.799 767.921 756.161 767.765 756.640  c
767.531 756.640 l
767.635 755.859 767.906 755.260 768.343 754.843  c
768.781 754.427 769.328 754.218 769.984 754.218  c
770.682 754.218 771.265 754.442 771.734 754.890  c
772.203 755.338 772.437 755.864 772.437 756.468  c
772.437 756.906 772.333 757.343 772.125 757.781  c
771.812 758.468 771.307 759.192 770.609 759.953  c
769.557 761.109 768.895 761.807 768.625 762.046  c
770.875 762.046 l
771.333 762.046 771.653 762.028 771.835 761.992  c
772.018 761.955 772.184 761.885 772.335 761.781  c
772.487 761.677 772.614 761.531 772.718 761.343  c
772.953 761.343 l
h
773.468 758.750 m
773.468 757.770 773.617 756.924 773.914 756.210  c
774.210 755.497 774.604 754.968 775.093 754.625  c
775.479 754.354 775.875 754.218 776.281 754.218  c
776.937 754.218 777.526 754.552 778.046 755.218  c
778.703 756.052 779.031 757.182 779.031 758.609  c
779.031 759.609 778.888 760.458 778.601 761.156  c
778.315 761.854 777.947 762.362 777.500 762.679  c
777.052 762.997 776.625 763.156 776.218 763.156  c
775.395 763.156 774.708 762.671 774.156 761.703  c
773.697 760.880 773.468 759.895 773.468 758.750  c
h
774.718 758.906 m
774.718 760.093 774.864 761.062 775.156 761.812  c
775.395 762.437 775.755 762.750 776.234 762.750  c
776.463 762.750 776.700 762.648 776.945 762.445  c
777.190 762.242 777.375 761.895 777.500 761.406  c
777.697 760.687 777.796 759.661 777.796 758.328  c
777.796 757.349 777.692 756.531 777.484 755.875  c
777.338 755.385 777.140 755.041 776.890 754.843  c
776.724 754.708 776.515 754.640 776.265 754.640  c
775.984 754.640 775.729 754.765 775.500 755.015  c
775.197 755.369 774.992 755.924 774.882 756.679  c
774.773 757.434 774.718 758.177 774.718 758.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
82.1496 733.000 m
82.1496 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
118.299 733.000 m
118.299 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
154.449 733.000 m
154.449 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
190.598 733.000 m
190.598 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
262.898 733.000 m
262.898 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
299.047 733.000 m
299.047 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
335.197 733.000 m
335.197 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
371.347 733.000 m
371.347 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
443.646 733.000 m
443.646 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
479.796 733.000 m
479.796 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
515.945 733.000 m
515.945 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
552.095 733.000 m
552.095 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
624.394 733.000 m
624.394 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
660.544 733.000 m
660.544 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
696.694 733.000 m
696.694 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
732.843 733.000 m
732.843 737.530 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
46.0000 733.000 m
46.0000 8.00817 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 363 8 15 rc
Q
cliprestore
newpath
0 0 m
0 776.000 l
776.000 776.000 l
776.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
46.0000 733.000 m
36.9400 733.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.4687 738.750 m
30.4687 737.770 30.6171 736.924 30.9140 736.210  c
31.2109 735.497 31.6041 734.968 32.0937 734.625  c
32.4791 734.354 32.8750 734.218 33.2812 734.218  c
33.9375 734.218 34.5260 734.552 35.0468 735.218  c
35.7031 736.052 36.0312 737.182 36.0312 738.609  c
36.0312 739.609 35.8880 740.458 35.6015 741.156  c
35.3151 741.854 34.9479 742.362 34.5000 742.679  c
34.0520 742.997 33.6250 743.156 33.2187 743.156  c
32.3958 743.156 31.7083 742.671 31.1562 741.703  c
30.6979 740.880 30.4687 739.895 30.4687 738.750  c
h
31.7187 738.906 m
31.7187 740.093 31.8645 741.062 32.1562 741.812  c
32.3958 742.437 32.7552 742.750 33.2343 742.750  c
33.4635 742.750 33.7005 742.648 33.9453 742.445  c
34.1901 742.242 34.3750 741.895 34.5000 741.406  c
34.6979 740.687 34.7968 739.661 34.7968 738.328  c
34.7968 737.349 34.6927 736.531 34.4843 735.875  c
34.3385 735.385 34.1406 735.041 33.8906 734.843  c
33.7239 734.708 33.5156 734.640 33.2656 734.640  c
32.9843 734.640 32.7291 734.765 32.5000 735.015  c
32.1979 735.369 31.9921 735.924 31.8828 736.679  c
31.7734 737.434 31.7187 738.177 31.7187 738.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 588.001 m
36.9400 588.001 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
21.4687 593.750 m
21.4687 592.770 21.6171 591.924 21.9140 591.210  c
22.2109 590.497 22.6041 589.968 23.0937 589.625  c
23.4791 589.354 23.8750 589.218 24.2812 589.218  c
24.9375 589.218 25.5260 589.552 26.0468 590.218  c
26.7031 591.052 27.0312 592.182 27.0312 593.609  c
27.0312 594.609 26.8880 595.458 26.6015 596.156  c
26.3151 596.854 25.9479 597.362 25.5000 597.679  c
25.0520 597.997 24.6250 598.156 24.2187 598.156  c
23.3958 598.156 22.7083 597.671 22.1562 596.703  c
21.6979 595.880 21.4687 594.895 21.4687 593.750  c
h
22.7187 593.906 m
22.7187 595.093 22.8645 596.062 23.1562 596.812  c
23.3958 597.437 23.7552 597.750 24.2343 597.750  c
24.4635 597.750 24.7005 597.648 24.9453 597.445  c
25.1901 597.242 25.3750 596.895 25.5000 596.406  c
25.6979 595.687 25.7968 594.661 25.7968 593.328  c
25.7968 592.349 25.6927 591.531 25.4843 590.875  c
25.3385 590.385 25.1406 590.041 24.8906 589.843  c
24.7239 589.708 24.5156 589.640 24.2656 589.640  c
23.9843 589.640 23.7291 589.765 23.5000 590.015  c
23.1979 590.369 22.9921 590.924 22.8828 591.679  c
22.7734 592.434 22.7187 593.177 22.7187 593.906  c
h
28.6250 596.765 m
28.8229 596.765 28.9895 596.835 29.1250 596.976  c
29.2604 597.117 29.3281 597.281 29.3281 597.468  c
29.3281 597.666 29.2604 597.833 29.1250 597.968  c
28.9895 598.104 28.8229 598.171 28.6250 598.171  c
28.4270 598.171 28.2604 598.104 28.1250 597.968  c
27.9895 597.833 27.9218 597.666 27.9218 597.468  c
27.9218 597.270 27.9895 597.104 28.1250 596.968  c
28.2604 596.833 28.4270 596.765 28.6250 596.765  c
h
35.9531 596.343 m
35.3593 598.000 l
30.2812 598.000 l
30.2812 597.765 l
31.7708 596.401 32.8203 595.286 33.4296 594.421  c
34.0390 593.557 34.3437 592.770 34.3437 592.062  c
34.3437 591.510 34.1770 591.059 33.8437 590.710  c
33.5104 590.362 33.1093 590.187 32.6406 590.187  c
32.2239 590.187 31.8463 590.309 31.5078 590.554  c
31.1692 590.799 30.9218 591.161 30.7656 591.640  c
30.5312 591.640 l
30.6354 590.859 30.9062 590.260 31.3437 589.843  c
31.7812 589.427 32.3281 589.218 32.9843 589.218  c
33.6822 589.218 34.2656 589.442 34.7343 589.890  c
35.2031 590.338 35.4375 590.864 35.4375 591.468  c
35.4375 591.906 35.3333 592.343 35.1250 592.781  c
34.8125 593.468 34.3072 594.192 33.6093 594.953  c
32.5572 596.109 31.8958 596.807 31.6250 597.046  c
33.8750 597.046 l
34.3333 597.046 34.6536 597.028 34.8359 596.992  c
35.0182 596.955 35.1849 596.885 35.3359 596.781  c
35.4869 596.677 35.6145 596.531 35.7187 596.343  c
35.9531 596.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 443.003 m
36.9400 443.003 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
21.4687 448.750 m
21.4687 447.770 21.6171 446.924 21.9140 446.210  c
22.2109 445.497 22.6041 444.968 23.0937 444.625  c
23.4791 444.354 23.8750 444.218 24.2812 444.218  c
24.9375 444.218 25.5260 444.552 26.0468 445.218  c
26.7031 446.052 27.0312 447.182 27.0312 448.609  c
27.0312 449.609 26.8880 450.458 26.6015 451.156  c
26.3151 451.854 25.9479 452.362 25.5000 452.679  c
25.0520 452.997 24.6250 453.156 24.2187 453.156  c
23.3958 453.156 22.7083 452.671 22.1562 451.703  c
21.6979 450.880 21.4687 449.895 21.4687 448.750  c
h
22.7187 448.906 m
22.7187 450.093 22.8645 451.062 23.1562 451.812  c
23.3958 452.437 23.7552 452.750 24.2343 452.750  c
24.4635 452.750 24.7005 452.648 24.9453 452.445  c
25.1901 452.242 25.3750 451.895 25.5000 451.406  c
25.6979 450.687 25.7968 449.661 25.7968 448.328  c
25.7968 447.349 25.6927 446.531 25.4843 445.875  c
25.3385 445.385 25.1406 445.041 24.8906 444.843  c
24.7239 444.708 24.5156 444.640 24.2656 444.640  c
23.9843 444.640 23.7291 444.765 23.5000 445.015  c
23.1979 445.369 22.9921 445.924 22.8828 446.679  c
22.7734 447.434 22.7187 448.177 22.7187 448.906  c
h
28.6250 451.765 m
28.8229 451.765 28.9895 451.835 29.1250 451.976  c
29.2604 452.117 29.3281 452.281 29.3281 452.468  c
29.3281 452.666 29.2604 452.833 29.1250 452.968  c
28.9895 453.104 28.8229 453.171 28.6250 453.171  c
28.4270 453.171 28.2604 453.104 28.1250 452.968  c
27.9895 452.833 27.9218 452.666 27.9218 452.468  c
27.9218 452.270 27.9895 452.104 28.1250 451.968  c
28.2604 451.833 28.4270 451.765 28.6250 451.765  c
h
36.0468 449.828 m
36.0468 450.734 l
34.8906 450.734 l
34.8906 453.000 l
33.8437 453.000 l
33.8437 450.734 l
30.2031 450.734 l
30.2031 449.921 l
34.2031 444.218 l
34.8906 444.218 l
34.8906 449.828 l
36.0468 449.828 l
h
33.8437 449.828 m
33.8437 445.546 l
30.8281 449.828 l
33.8437 449.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 298.004 m
36.9400 298.004 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
21.4687 303.750 m
21.4687 302.770 21.6171 301.924 21.9140 301.210  c
22.2109 300.497 22.6041 299.968 23.0937 299.625  c
23.4791 299.354 23.8750 299.218 24.2812 299.218  c
24.9375 299.218 25.5260 299.552 26.0468 300.218  c
26.7031 301.052 27.0312 302.182 27.0312 303.609  c
27.0312 304.609 26.8880 305.458 26.6015 306.156  c
26.3151 306.854 25.9479 307.362 25.5000 307.679  c
25.0520 307.997 24.6250 308.156 24.2187 308.156  c
23.3958 308.156 22.7083 307.671 22.1562 306.703  c
21.6979 305.880 21.4687 304.895 21.4687 303.750  c
h
22.7187 303.906 m
22.7187 305.093 22.8645 306.062 23.1562 306.812  c
23.3958 307.437 23.7552 307.750 24.2343 307.750  c
24.4635 307.750 24.7005 307.648 24.9453 307.445  c
25.1901 307.242 25.3750 306.895 25.5000 306.406  c
25.6979 305.687 25.7968 304.661 25.7968 303.328  c
25.7968 302.349 25.6927 301.531 25.4843 300.875  c
25.3385 300.385 25.1406 300.041 24.8906 299.843  c
24.7239 299.708 24.5156 299.640 24.2656 299.640  c
23.9843 299.640 23.7291 299.765 23.5000 300.015  c
23.1979 300.369 22.9921 300.924 22.8828 301.679  c
22.7734 302.434 22.7187 303.177 22.7187 303.906  c
h
28.6250 306.765 m
28.8229 306.765 28.9895 306.835 29.1250 306.976  c
29.2604 307.117 29.3281 307.281 29.3281 307.468  c
29.3281 307.666 29.2604 307.833 29.1250 307.968  c
28.9895 308.104 28.8229 308.171 28.6250 308.171  c
28.4270 308.171 28.2604 308.104 28.1250 307.968  c
27.9895 307.833 27.9218 307.666 27.9218 307.468  c
27.9218 307.270 27.9895 307.104 28.1250 306.968  c
28.2604 306.833 28.4270 306.765 28.6250 306.765  c
h
35.8281 299.218 m
35.8281 299.453 l
35.2656 299.505 34.8072 299.614 34.4531 299.781  c
34.0989 299.947 33.7500 300.203 33.4062 300.546  c
33.0625 300.890 32.7786 301.273 32.5546 301.695  c
32.3307 302.117 32.1406 302.614 31.9843 303.187  c
32.5989 302.770 33.2135 302.562 33.8281 302.562  c
34.4114 302.562 34.9192 302.799 35.3515 303.273  c
35.7838 303.747 36.0000 304.359 36.0000 305.109  c
36.0000 305.828 35.7812 306.484 35.3437 307.078  c
34.8229 307.796 34.1302 308.156 33.2656 308.156  c
32.6718 308.156 32.1718 307.958 31.7656 307.562  c
30.9635 306.812 30.5625 305.833 30.5625 304.625  c
30.5625 303.854 30.7161 303.122 31.0234 302.429  c
31.3307 301.737 31.7708 301.119 32.3437 300.578  c
32.9166 300.036 33.4661 299.674 33.9921 299.492  c
34.5182 299.309 35.0052 299.218 35.4531 299.218  c
35.8281 299.218 l
h
31.8750 303.656 m
31.8020 304.229 31.7656 304.692 31.7656 305.046  c
31.7656 305.453 31.8411 305.893 31.9921 306.367  c
32.1432 306.841 32.3645 307.218 32.6562 307.500  c
32.8750 307.697 33.1406 307.796 33.4531 307.796  c
33.8177 307.796 34.1458 307.622 34.4375 307.273  c
34.7291 306.924 34.8750 306.432 34.8750 305.796  c
34.8750 305.067 34.7291 304.440 34.4375 303.914  c
34.1458 303.388 33.7395 303.125 33.2187 303.125  c
33.0520 303.125 32.8776 303.158 32.6953 303.226  c
32.5130 303.294 32.2395 303.437 31.8750 303.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 153.006 m
36.9400 153.006 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
21.4687 158.750 m
21.4687 157.770 21.6171 156.924 21.9140 156.210  c
22.2109 155.497 22.6041 154.968 23.0937 154.625  c
23.4791 154.354 23.8750 154.218 24.2812 154.218  c
24.9375 154.218 25.5260 154.552 26.0468 155.218  c
26.7031 156.052 27.0312 157.182 27.0312 158.609  c
27.0312 159.609 26.8880 160.458 26.6015 161.156  c
26.3151 161.854 25.9479 162.362 25.5000 162.679  c
25.0520 162.997 24.6250 163.156 24.2187 163.156  c
23.3958 163.156 22.7083 162.671 22.1562 161.703  c
21.6979 160.880 21.4687 159.895 21.4687 158.750  c
h
22.7187 158.906 m
22.7187 160.093 22.8645 161.062 23.1562 161.812  c
23.3958 162.437 23.7552 162.750 24.2343 162.750  c
24.4635 162.750 24.7005 162.648 24.9453 162.445  c
25.1901 162.242 25.3750 161.895 25.5000 161.406  c
25.6979 160.687 25.7968 159.661 25.7968 158.328  c
25.7968 157.349 25.6927 156.531 25.4843 155.875  c
25.3385 155.385 25.1406 155.041 24.8906 154.843  c
24.7239 154.708 24.5156 154.640 24.2656 154.640  c
23.9843 154.640 23.7291 154.765 23.5000 155.015  c
23.1979 155.369 22.9921 155.924 22.8828 156.679  c
22.7734 157.434 22.7187 158.177 22.7187 158.906  c
h
28.6250 161.765 m
28.8229 161.765 28.9895 161.835 29.1250 161.976  c
29.2604 162.117 29.3281 162.281 29.3281 162.468  c
29.3281 162.666 29.2604 162.833 29.1250 162.968  c
28.9895 163.104 28.8229 163.171 28.6250 163.171  c
28.4270 163.171 28.2604 163.104 28.1250 162.968  c
27.9895 162.833 27.9218 162.666 27.9218 162.468  c
27.9218 162.270 27.9895 162.104 28.1250 161.968  c
28.2604 161.833 28.4270 161.765 28.6250 161.765  c
h
32.5000 158.671 m
31.8125 158.109 31.3697 157.658 31.1718 157.320  c
30.9739 156.981 30.8750 156.630 30.8750 156.265  c
30.8750 155.703 31.0911 155.221 31.5234 154.820  c
31.9557 154.419 32.5312 154.218 33.2500 154.218  c
33.9479 154.218 34.5078 154.406 34.9296 154.781  c
35.3515 155.156 35.5625 155.583 35.5625 156.062  c
35.5625 156.385 35.4479 156.713 35.2187 157.046  c
34.9895 157.380 34.5156 157.776 33.7968 158.234  c
34.5364 158.807 35.0260 159.260 35.2656 159.593  c
35.5885 160.020 35.7500 160.474 35.7500 160.953  c
35.7500 161.557 35.5208 162.075 35.0625 162.507  c
34.6041 162.940 34.0000 163.156 33.2500 163.156  c
32.4270 163.156 31.7864 162.901 31.3281 162.390  c
30.9635 161.974 30.7812 161.520 30.7812 161.031  c
30.7812 160.656 30.9114 160.281 31.1718 159.906  c
31.4322 159.531 31.8750 159.119 32.5000 158.671  c
h
33.4843 157.984 m
33.9947 157.526 34.3177 157.164 34.4531 156.898  c
34.5885 156.632 34.6562 156.333 34.6562 156.000  c
34.6562 155.562 34.5312 155.216 34.2812 154.960  c
34.0312 154.705 33.6927 154.578 33.2656 154.578  c
32.8281 154.578 32.4739 154.703 32.2031 154.953  c
31.9322 155.203 31.7968 155.494 31.7968 155.828  c
31.7968 156.046 31.8541 156.268 31.9687 156.492  c
32.0833 156.716 32.2447 156.927 32.4531 157.125  c
33.4843 157.984 l
h
32.7968 158.906 m
32.4427 159.197 32.1822 159.518 32.0156 159.867  c
31.8489 160.216 31.7656 160.593 31.7656 161.000  c
31.7656 161.552 31.9140 161.992 32.2109 162.320  c
32.5078 162.648 32.8854 162.812 33.3437 162.812  c
33.8020 162.812 34.1692 162.682 34.4453 162.421  c
34.7213 162.161 34.8593 161.849 34.8593 161.484  c
34.8593 161.182 34.7760 160.906 34.6093 160.656  c
34.3177 160.208 33.7135 159.625 32.7968 158.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 8.00817 m
36.9400 8.00817 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.5312 10.2343 m
33.6250 9.21875 l
33.8281 9.21875 l
33.8281 16.4843 l
33.8281 16.9635 33.8489 17.2630 33.8906 17.3828  c
33.9322 17.5026 34.0156 17.5937 34.1406 17.6562  c
34.2656 17.7187 34.5208 17.7552 34.9062 17.7656  c
34.9062 18.0000 l
31.6718 18.0000 l
31.6718 17.7656 l
32.0781 17.7552 32.3411 17.7187 32.4609 17.6562  c
32.5807 17.5937 32.6640 17.5104 32.7109 17.4062  c
32.7578 17.3020 32.7812 16.9947 32.7812 16.4843  c
32.7812 11.8437 l
32.7812 11.2083 32.7604 10.8020 32.7187 10.6250  c
32.6875 10.4895 32.6328 10.3906 32.5546 10.3281  c
32.4765 10.2656 32.3802 10.2343 32.2656 10.2343  c
32.1093 10.2343 31.8958 10.3020 31.6250 10.4375  c
31.5312 10.2343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 660.500 m
41.4700 660.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 515.502 m
41.4700 515.502 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 370.504 m
41.4700 370.504 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 225.505 m
41.4700 225.505 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
46.0000 80.5073 m
41.4700 80.5073 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 786 786 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

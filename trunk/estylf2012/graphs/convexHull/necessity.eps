%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 14.41 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
34 272 331 118 rc
q
q
37 275 299 38 rc
q
3.00000 w
[ 3.00000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
[ 1.00000 0 0 1.00000 39.0000 286.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -39.0000 -286.000 ] concat
Q
[ 1.00000 0 0 1.00000 37.0000 275.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 261 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
47.0156 8.59375 l
58.2812 25.9062 l
58.2812 8.59375 l
61.0156 8.59375 l
61.0156 31.0000 l
57.9062 31.0000 l
46.6093 13.7031 l
46.6093 31.0000 l
43.8906 31.0000 l
h
79.0312 30.4687 m
77.0312 31.0729 75.3229 31.3750 73.9062 31.3750  c
71.4791 31.3750 69.5026 30.5703 67.9765 28.9609  c
66.4505 27.3515 65.6875 25.2656 65.6875 22.7031  c
65.6875 20.2135 66.3593 18.1718 67.7031 16.5781  c
69.0468 14.9843 70.7708 14.1875 72.8750 14.1875  c
74.8645 14.1875 76.4010 14.8932 77.4843 16.3046  c
78.5677 17.7161 79.1093 19.7239 79.1093 22.3281  c
79.0937 23.2500 l
68.7187 23.2500 l
69.1562 27.1562 71.0677 29.1093 74.4531 29.1093  c
75.7031 29.1093 77.2291 28.7760 79.0312 28.1093  c
79.0312 30.4687 l
h
68.8593 21.0156 m
76.1093 21.0156 l
76.1093 17.9531 74.9687 16.4218 72.6875 16.4218  c
70.3958 16.4218 69.1197 17.9531 68.8593 21.0156  c
h
90.4062 31.3750 m
88.1770 31.3750 86.3333 30.5520 84.8750 28.9062  c
83.4166 27.2604 82.6875 25.1875 82.6875 22.6875  c
82.6875 20.0104 83.4114 17.9270 84.8593 16.4375  c
86.3072 14.9479 88.3281 14.2031 90.9218 14.2031  c
92.2031 14.2031 93.6354 14.3802 95.2187 14.7343  c
95.2187 17.2187 l
93.5312 16.7291 92.1562 16.4843 91.0937 16.4843  c
89.5729 16.4843 88.3515 17.0572 87.4296 18.2031  c
86.5078 19.3489 86.0468 20.8750 86.0468 22.7812  c
86.0468 24.6250 86.5208 26.1171 87.4687 27.2578  c
88.4166 28.3984 89.6562 28.9687 91.1875 28.9687  c
92.5520 28.9687 93.9531 28.6197 95.3906 27.9218  c
95.3906 30.5000 l
93.4635 31.0833 91.8020 31.3750 90.4062 31.3750  c
h
100.031 31.0000 m
100.031 27.2656 l
103.765 27.2656 l
103.765 31.0000 l
100.031 31.0000 l
h
128.453 28.9062 m
126.671 30.5520 124.953 31.3750 123.296 31.3750  c
121.932 31.3750 120.802 30.9479 119.906 30.0937  c
119.010 29.2395 118.562 28.1666 118.562 26.8750  c
118.562 25.0729 119.315 23.6901 120.820 22.7265  c
122.325 21.7630 124.489 21.2812 127.312 21.2812  c
128.015 21.2812 l
128.015 19.2968 l
128.015 17.3906 127.036 16.4375 125.078 16.4375  c
123.505 16.4375 121.807 16.9218 119.984 17.8906  c
119.984 15.4218 l
121.994 14.6093 123.875 14.2031 125.625 14.2031  c
127.468 14.2031 128.825 14.6171 129.695 15.4453  c
130.565 16.2734 131.000 17.5572 131.000 19.2968  c
131.000 26.7500 l
131.000 28.4479 131.526 29.2968 132.578 29.2968  c
132.703 29.2968 132.895 29.2812 133.156 29.2500  c
133.359 30.8906 l
132.682 31.2135 131.937 31.3750 131.125 31.3750  c
129.729 31.3750 128.838 30.5520 128.453 28.9062  c
h
128.015 27.2968 m
128.015 23.0312 l
127.015 23.0000 l
125.380 23.0000 124.059 23.3125 123.054 23.9375  c
122.049 24.5625 121.546 25.3802 121.546 26.3906  c
121.546 27.0989 121.799 27.7005 122.304 28.1953  c
122.809 28.6901 123.421 28.9375 124.140 28.9375  c
125.380 28.9375 126.671 28.3906 128.015 27.2968  c
h
140.546 16.7968 m
140.546 31.0000 l
137.546 31.0000 l
137.546 16.7968 l
135.218 16.7968 l
135.218 14.5625 l
137.546 14.5625 l
137.546 12.5937 l
137.546 8.67708 139.333 6.71875 142.906 6.71875  c
143.906 6.71875 145.041 6.88541 146.312 7.21875  c
146.312 9.57812 l
144.968 9.16145 143.890 8.95312 143.078 8.95312  c
142.099 8.95312 141.432 9.19010 141.078 9.66406  c
140.724 10.1380 140.546 11.0104 140.546 12.2812  c
140.546 14.5625 l
144.640 14.5625 l
144.640 16.7968 l
140.546 16.7968 l
h
152.921 31.3750 m
151.401 31.3750 150.218 30.9427 149.375 30.0781  c
148.531 29.2135 148.109 28.0052 148.109 26.4531  c
148.109 16.7968 l
146.046 16.7968 l
146.046 14.5625 l
148.109 14.5625 l
148.109 11.5781 l
151.078 11.2968 l
151.078 14.5625 l
155.390 14.5625 l
155.390 16.7968 l
151.078 16.7968 l
151.078 25.9062 l
151.078 28.0625 152.010 29.1406 153.875 29.1406  c
154.260 29.1406 154.739 29.0729 155.312 28.9375  c
155.312 31.0000 l
154.395 31.2500 153.599 31.3750 152.921 31.3750  c
h
172.031 30.4687 m
170.031 31.0729 168.322 31.3750 166.906 31.3750  c
164.479 31.3750 162.502 30.5703 160.976 28.9609  c
159.450 27.3515 158.687 25.2656 158.687 22.7031  c
158.687 20.2135 159.359 18.1718 160.703 16.5781  c
162.046 14.9843 163.770 14.1875 165.875 14.1875  c
167.864 14.1875 169.401 14.8932 170.484 16.3046  c
171.567 17.7161 172.109 19.7239 172.109 22.3281  c
172.093 23.2500 l
161.718 23.2500 l
162.156 27.1562 164.067 29.1093 167.453 29.1093  c
168.703 29.1093 170.229 28.7760 172.031 28.1093  c
172.031 30.4687 l
h
161.859 21.0156 m
169.109 21.0156 l
169.109 17.9531 167.968 16.4218 165.687 16.4218  c
163.395 16.4218 162.119 17.9531 161.859 21.0156  c
h
176.984 31.0000 m
176.984 14.5625 l
179.968 14.5625 l
179.968 17.6562 l
181.145 15.3541 182.859 14.2031 185.109 14.2031  c
185.411 14.2031 185.729 14.2291 186.062 14.2812  c
186.062 17.0625 l
185.552 16.8854 185.099 16.7968 184.703 16.7968  c
182.817 16.7968 181.239 17.9166 179.968 20.1562  c
179.968 31.0000 l
176.984 31.0000 l
h
204.921 31.3750 m
203.401 31.3750 202.218 30.9427 201.375 30.0781  c
200.531 29.2135 200.109 28.0052 200.109 26.4531  c
200.109 16.7968 l
198.046 16.7968 l
198.046 14.5625 l
200.109 14.5625 l
200.109 11.5781 l
203.078 11.2968 l
203.078 14.5625 l
207.390 14.5625 l
207.390 16.7968 l
203.078 16.7968 l
203.078 25.9062 l
203.078 28.0625 204.010 29.1406 205.875 29.1406  c
206.260 29.1406 206.739 29.0729 207.312 28.9375  c
207.312 31.0000 l
206.395 31.2500 205.599 31.3750 204.921 31.3750  c
h
211.984 31.0000 m
211.984 7.09375 l
214.968 7.09375 l
214.968 17.6562 l
216.541 15.3541 218.468 14.2031 220.750 14.2031  c
222.166 14.2031 223.299 14.6536 224.148 15.5546  c
224.997 16.4557 225.421 17.6666 225.421 19.1875  c
225.421 31.0000 l
222.437 31.0000 l
222.437 20.1562 l
222.437 18.9375 222.257 18.0677 221.898 17.5468  c
221.539 17.0260 220.947 16.7656 220.125 16.7656  c
218.302 16.7656 216.583 17.9635 214.968 20.3593  c
214.968 31.0000 l
211.984 31.0000 l
h
239.453 28.9062 m
237.671 30.5520 235.953 31.3750 234.296 31.3750  c
232.932 31.3750 231.802 30.9479 230.906 30.0937  c
230.010 29.2395 229.562 28.1666 229.562 26.8750  c
229.562 25.0729 230.315 23.6901 231.820 22.7265  c
233.325 21.7630 235.489 21.2812 238.312 21.2812  c
239.015 21.2812 l
239.015 19.2968 l
239.015 17.3906 238.036 16.4375 236.078 16.4375  c
234.505 16.4375 232.807 16.9218 230.984 17.8906  c
230.984 15.4218 l
232.994 14.6093 234.875 14.2031 236.625 14.2031  c
238.468 14.2031 239.825 14.6171 240.695 15.4453  c
241.565 16.2734 242.000 17.5572 242.000 19.2968  c
242.000 26.7500 l
242.000 28.4479 242.526 29.2968 243.578 29.2968  c
243.703 29.2968 243.895 29.2812 244.156 29.2500  c
244.359 30.8906 l
243.682 31.2135 242.937 31.3750 242.125 31.3750  c
240.729 31.3750 239.838 30.5520 239.453 28.9062  c
h
239.015 27.2968 m
239.015 23.0312 l
238.015 23.0000 l
236.380 23.0000 235.059 23.3125 234.054 23.9375  c
233.049 24.5625 232.546 25.3802 232.546 26.3906  c
232.546 27.0989 232.799 27.7005 233.304 28.1953  c
233.809 28.6901 234.421 28.9375 235.140 28.9375  c
236.380 28.9375 237.671 28.3906 239.015 27.2968  c
h
247.984 31.0000 m
247.984 14.5625 l
250.968 14.5625 l
250.968 17.6562 l
252.541 15.3541 254.468 14.2031 256.750 14.2031  c
258.166 14.2031 259.299 14.6536 260.148 15.5546  c
260.997 16.4557 261.421 17.6666 261.421 19.1875  c
261.421 31.0000 l
258.437 31.0000 l
258.437 20.1562 l
258.437 18.9375 258.257 18.0677 257.898 17.5468  c
257.539 17.0260 256.947 16.7656 256.125 16.7656  c
254.302 16.7656 252.583 17.9635 250.968 20.3593  c
250.968 31.0000 l
247.984 31.0000 l
h
282.218 31.0000 m
282.218 10.9687 l
274.265 10.9687 l
274.265 8.59375 l
293.343 8.59375 l
293.343 10.9687 l
285.390 10.9687 l
285.390 31.0000 l
282.218 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
299.000 38.0000 l
299.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 37.0000 275.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -37.0000 -275.000 ] concat
cliprestore
newpath
34.0000 272.000 m
34.0000 390.000 l
365.000 390.000 l
365.000 272.000 l
h
W
Q
q
37 312 326 38 rc
q
3.00000 w
[ 22.5000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
[ 1.00000 0 0 1.00000 39.0000 323.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -39.0000 -323.000 ] concat
Q
[ 1.00000 0 0 1.00000 37.0000 312.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 288 37 rc
newpath
43.8906 31.0000 m
43.8906 8.59375 l
47.0156 8.59375 l
58.2812 25.9062 l
58.2812 8.59375 l
61.0156 8.59375 l
61.0156 31.0000 l
57.9062 31.0000 l
46.6093 13.7031 l
46.6093 31.0000 l
43.8906 31.0000 l
h
79.0312 30.4687 m
77.0312 31.0729 75.3229 31.3750 73.9062 31.3750  c
71.4791 31.3750 69.5026 30.5703 67.9765 28.9609  c
66.4505 27.3515 65.6875 25.2656 65.6875 22.7031  c
65.6875 20.2135 66.3593 18.1718 67.7031 16.5781  c
69.0468 14.9843 70.7708 14.1875 72.8750 14.1875  c
74.8645 14.1875 76.4010 14.8932 77.4843 16.3046  c
78.5677 17.7161 79.1093 19.7239 79.1093 22.3281  c
79.0937 23.2500 l
68.7187 23.2500 l
69.1562 27.1562 71.0677 29.1093 74.4531 29.1093  c
75.7031 29.1093 77.2291 28.7760 79.0312 28.1093  c
79.0312 30.4687 l
h
68.8593 21.0156 m
76.1093 21.0156 l
76.1093 17.9531 74.9687 16.4218 72.6875 16.4218  c
70.3958 16.4218 69.1197 17.9531 68.8593 21.0156  c
h
90.4062 31.3750 m
88.1770 31.3750 86.3333 30.5520 84.8750 28.9062  c
83.4166 27.2604 82.6875 25.1875 82.6875 22.6875  c
82.6875 20.0104 83.4114 17.9270 84.8593 16.4375  c
86.3072 14.9479 88.3281 14.2031 90.9218 14.2031  c
92.2031 14.2031 93.6354 14.3802 95.2187 14.7343  c
95.2187 17.2187 l
93.5312 16.7291 92.1562 16.4843 91.0937 16.4843  c
89.5729 16.4843 88.3515 17.0572 87.4296 18.2031  c
86.5078 19.3489 86.0468 20.8750 86.0468 22.7812  c
86.0468 24.6250 86.5208 26.1171 87.4687 27.2578  c
88.4166 28.3984 89.6562 28.9687 91.1875 28.9687  c
92.5520 28.9687 93.9531 28.6197 95.3906 27.9218  c
95.3906 30.5000 l
93.4635 31.0833 91.8020 31.3750 90.4062 31.3750  c
h
100.031 31.0000 m
100.031 27.2656 l
103.765 27.2656 l
103.765 31.0000 l
100.031 31.0000 l
h
119.984 31.1875 m
119.984 7.09375 l
122.968 7.09375 l
122.968 17.6562 l
124.187 15.3541 126.015 14.2031 128.453 14.2031  c
130.432 14.2031 131.989 14.9244 133.125 16.3671  c
134.260 17.8099 134.828 19.7812 134.828 22.2812  c
134.828 25.0104 134.184 27.2083 132.898 28.8750  c
131.612 30.5416 129.921 31.3750 127.828 31.3750  c
125.880 31.3750 124.260 30.6302 122.968 29.1406  c
122.593 31.1875 l
119.984 31.1875 l
h
122.968 27.0781 m
124.500 28.4531 125.963 29.1406 127.359 29.1406  c
130.224 29.1406 131.656 26.9531 131.656 22.5781  c
131.656 18.7239 130.385 16.7968 127.843 16.7968  c
126.177 16.7968 124.552 17.7031 122.968 19.5156  c
122.968 27.0781 l
h
152.031 30.4687 m
150.031 31.0729 148.322 31.3750 146.906 31.3750  c
144.479 31.3750 142.502 30.5703 140.976 28.9609  c
139.450 27.3515 138.687 25.2656 138.687 22.7031  c
138.687 20.2135 139.359 18.1718 140.703 16.5781  c
142.046 14.9843 143.770 14.1875 145.875 14.1875  c
147.864 14.1875 149.401 14.8932 150.484 16.3046  c
151.567 17.7161 152.109 19.7239 152.109 22.3281  c
152.093 23.2500 l
141.718 23.2500 l
142.156 27.1562 144.067 29.1093 147.453 29.1093  c
148.703 29.1093 150.229 28.7760 152.031 28.1093  c
152.031 30.4687 l
h
141.859 21.0156 m
149.109 21.0156 l
149.109 17.9531 147.968 16.4218 145.687 16.4218  c
143.395 16.4218 142.119 17.9531 141.859 21.0156  c
h
160.546 16.7968 m
160.546 31.0000 l
157.546 31.0000 l
157.546 16.7968 l
155.218 16.7968 l
155.218 14.5625 l
157.546 14.5625 l
157.546 12.5937 l
157.546 8.67708 159.333 6.71875 162.906 6.71875  c
163.906 6.71875 165.041 6.88541 166.312 7.21875  c
166.312 9.57812 l
164.968 9.16145 163.890 8.95312 163.078 8.95312  c
162.099 8.95312 161.432 9.19010 161.078 9.66406  c
160.724 10.1380 160.546 11.0104 160.546 12.2812  c
160.546 14.5625 l
164.640 14.5625 l
164.640 16.7968 l
160.546 16.7968 l
h
174.421 31.3750 m
172.067 31.3750 170.190 30.5963 168.789 29.0390  c
167.388 27.4817 166.687 25.3958 166.687 22.7812  c
166.687 20.1354 167.390 18.0442 168.796 16.5078  c
170.203 14.9713 172.109 14.2031 174.515 14.2031  c
176.932 14.2031 178.843 14.9713 180.250 16.5078  c
181.656 18.0442 182.359 20.1250 182.359 22.7500  c
182.359 25.4375 181.653 27.5468 180.242 29.0781  c
178.830 30.6093 176.890 31.3750 174.421 31.3750  c
h
174.453 29.1406 m
177.619 29.1406 179.203 27.0104 179.203 22.7500  c
179.203 18.5416 177.640 16.4375 174.515 16.4375  c
171.411 16.4375 169.859 18.5520 169.859 22.7812  c
169.859 27.0208 171.390 29.1406 174.453 29.1406  c
h
186.984 31.0000 m
186.984 14.5625 l
189.968 14.5625 l
189.968 17.6562 l
191.145 15.3541 192.859 14.2031 195.109 14.2031  c
195.411 14.2031 195.729 14.2291 196.062 14.2812  c
196.062 17.0625 l
195.552 16.8854 195.099 16.7968 194.703 16.7968  c
192.817 16.7968 191.239 17.9166 189.968 20.1562  c
189.968 31.0000 l
186.984 31.0000 l
h
212.031 30.4687 m
210.031 31.0729 208.322 31.3750 206.906 31.3750  c
204.479 31.3750 202.502 30.5703 200.976 28.9609  c
199.450 27.3515 198.687 25.2656 198.687 22.7031  c
198.687 20.2135 199.359 18.1718 200.703 16.5781  c
202.046 14.9843 203.770 14.1875 205.875 14.1875  c
207.864 14.1875 209.401 14.8932 210.484 16.3046  c
211.567 17.7161 212.109 19.7239 212.109 22.3281  c
212.093 23.2500 l
201.718 23.2500 l
202.156 27.1562 204.067 29.1093 207.453 29.1093  c
208.703 29.1093 210.229 28.7760 212.031 28.1093  c
212.031 30.4687 l
h
201.859 21.0156 m
209.109 21.0156 l
209.109 17.9531 207.968 16.4218 205.687 16.4218  c
203.395 16.4218 202.119 17.9531 201.859 21.0156  c
h
231.921 31.3750 m
230.401 31.3750 229.218 30.9427 228.375 30.0781  c
227.531 29.2135 227.109 28.0052 227.109 26.4531  c
227.109 16.7968 l
225.046 16.7968 l
225.046 14.5625 l
227.109 14.5625 l
227.109 11.5781 l
230.078 11.2968 l
230.078 14.5625 l
234.390 14.5625 l
234.390 16.7968 l
230.078 16.7968 l
230.078 25.9062 l
230.078 28.0625 231.010 29.1406 232.875 29.1406  c
233.260 29.1406 233.739 29.0729 234.312 28.9375  c
234.312 31.0000 l
233.395 31.2500 232.599 31.3750 231.921 31.3750  c
h
238.984 31.0000 m
238.984 7.09375 l
241.968 7.09375 l
241.968 17.6562 l
243.541 15.3541 245.468 14.2031 247.750 14.2031  c
249.166 14.2031 250.299 14.6536 251.148 15.5546  c
251.997 16.4557 252.421 17.6666 252.421 19.1875  c
252.421 31.0000 l
249.437 31.0000 l
249.437 20.1562 l
249.437 18.9375 249.257 18.0677 248.898 17.5468  c
248.539 17.0260 247.947 16.7656 247.125 16.7656  c
245.302 16.7656 243.583 17.9635 241.968 20.3593  c
241.968 31.0000 l
238.984 31.0000 l
h
266.453 28.9062 m
264.671 30.5520 262.953 31.3750 261.296 31.3750  c
259.932 31.3750 258.802 30.9479 257.906 30.0937  c
257.010 29.2395 256.562 28.1666 256.562 26.8750  c
256.562 25.0729 257.315 23.6901 258.820 22.7265  c
260.325 21.7630 262.489 21.2812 265.312 21.2812  c
266.015 21.2812 l
266.015 19.2968 l
266.015 17.3906 265.036 16.4375 263.078 16.4375  c
261.505 16.4375 259.807 16.9218 257.984 17.8906  c
257.984 15.4218 l
259.994 14.6093 261.875 14.2031 263.625 14.2031  c
265.468 14.2031 266.825 14.6171 267.695 15.4453  c
268.565 16.2734 269.000 17.5572 269.000 19.2968  c
269.000 26.7500 l
269.000 28.4479 269.526 29.2968 270.578 29.2968  c
270.703 29.2968 270.895 29.2812 271.156 29.2500  c
271.359 30.8906 l
270.682 31.2135 269.937 31.3750 269.125 31.3750  c
267.729 31.3750 266.838 30.5520 266.453 28.9062  c
h
266.015 27.2968 m
266.015 23.0312 l
265.015 23.0000 l
263.380 23.0000 262.059 23.3125 261.054 23.9375  c
260.049 24.5625 259.546 25.3802 259.546 26.3906  c
259.546 27.0989 259.799 27.7005 260.304 28.1953  c
260.809 28.6901 261.421 28.9375 262.140 28.9375  c
263.380 28.9375 264.671 28.3906 266.015 27.2968  c
h
274.984 31.0000 m
274.984 14.5625 l
277.968 14.5625 l
277.968 17.6562 l
279.541 15.3541 281.468 14.2031 283.750 14.2031  c
285.166 14.2031 286.299 14.6536 287.148 15.5546  c
287.997 16.4557 288.421 17.6666 288.421 19.1875  c
288.421 31.0000 l
285.437 31.0000 l
285.437 20.1562 l
285.437 18.9375 285.257 18.0677 284.898 17.5468  c
284.539 17.0260 283.947 16.7656 283.125 16.7656  c
281.302 16.7656 279.583 17.9635 277.968 20.3593  c
277.968 31.0000 l
274.984 31.0000 l
h
309.218 31.0000 m
309.218 10.9687 l
301.265 10.9687 l
301.265 8.59375 l
320.343 8.59375 l
320.343 10.9687 l
312.390 10.9687 l
312.390 31.0000 l
309.218 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
326.000 38.0000 l
326.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 37.0000 312.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -37.0000 -312.000 ] concat
cliprestore
newpath
34.0000 272.000 m
34.0000 390.000 l
365.000 390.000 l
365.000 272.000 l
h
W
Q
q
37 349 223 38 rc
q
3.00000 w
[ 1.00000 0 0 1.00000 39.0000 360.000 ] concat
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -39.0000 -360.000 ] concat
Q
[ 1.00000 0 0 1.00000 37.0000 349.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 185 37 rc
newpath
53.4843 31.5625 m
50.0052 31.5625 47.3177 30.5390 45.4218 28.4921  c
43.5260 26.4453 42.5781 23.5520 42.5781 19.8125  c
42.5781 16.0833 43.5442 13.1875 45.4765 11.1250  c
47.4088 9.06250 50.1302 8.03125 53.6406 8.03125  c
55.6510 8.03125 58.0000 8.35937 60.6875 9.01562  c
60.6875 12.0000 l
57.6250 10.9375 55.2604 10.4062 53.5937 10.4062  c
51.1666 10.4062 49.2864 11.2291 47.9531 12.8750  c
46.6197 14.5208 45.9531 16.8437 45.9531 19.8437  c
45.9531 22.6979 46.6640 24.9505 48.0859 26.6015  c
49.5078 28.2526 51.4479 29.0781 53.9062 29.0781  c
56.0312 29.0781 58.3020 28.4270 60.7187 27.1250  c
60.7187 29.8437 l
58.5104 30.9895 56.0989 31.5625 53.4843 31.5625  c
h
71.4218 31.3750 m
69.0677 31.3750 67.1901 30.5963 65.7890 29.0390  c
64.3880 27.4817 63.6875 25.3958 63.6875 22.7812  c
63.6875 20.1354 64.3906 18.0442 65.7968 16.5078  c
67.2031 14.9713 69.1093 14.2031 71.5156 14.2031  c
73.9322 14.2031 75.8437 14.9713 77.2500 16.5078  c
78.6562 18.0442 79.3593 20.1250 79.3593 22.7500  c
79.3593 25.4375 78.6536 27.5468 77.2421 29.0781  c
75.8307 30.6093 73.8906 31.3750 71.4218 31.3750  c
h
71.4531 29.1406 m
74.6197 29.1406 76.2031 27.0104 76.2031 22.7500  c
76.2031 18.5416 74.6406 16.4375 71.5156 16.4375  c
68.4114 16.4375 66.8593 18.5520 66.8593 22.7812  c
66.8593 27.0208 68.3906 29.1406 71.4531 29.1406  c
h
83.9843 31.0000 m
83.9843 14.5625 l
86.9687 14.5625 l
86.9687 17.6562 l
88.5416 15.3541 90.4687 14.2031 92.7500 14.2031  c
94.1666 14.2031 95.2994 14.6536 96.1484 15.5546  c
96.9974 16.4557 97.4218 17.6666 97.4218 19.1875  c
97.4218 31.0000 l
94.4375 31.0000 l
94.4375 20.1562 l
94.4375 18.9375 94.2578 18.0677 93.8984 17.5468  c
93.5390 17.0260 92.9479 16.7656 92.1250 16.7656  c
90.3020 16.7656 88.5833 17.9635 86.9687 20.3593  c
86.9687 31.0000 l
83.9843 31.0000 l
h
106.390 31.0000 m
100.265 14.5625 l
103.250 14.5625 l
108.031 27.3593 l
113.078 14.5625 l
115.859 14.5625 l
109.375 31.0000 l
106.390 31.0000 l
h
131.031 30.4687 m
129.031 31.0729 127.322 31.3750 125.906 31.3750  c
123.479 31.3750 121.502 30.5703 119.976 28.9609  c
118.450 27.3515 117.687 25.2656 117.687 22.7031  c
117.687 20.2135 118.359 18.1718 119.703 16.5781  c
121.046 14.9843 122.770 14.1875 124.875 14.1875  c
126.864 14.1875 128.401 14.8932 129.484 16.3046  c
130.567 17.7161 131.109 19.7239 131.109 22.3281  c
131.093 23.2500 l
120.718 23.2500 l
121.156 27.1562 123.067 29.1093 126.453 29.1093  c
127.703 29.1093 129.229 28.7760 131.031 28.1093  c
131.031 30.4687 l
h
120.859 21.0156 m
128.109 21.0156 l
128.109 17.9531 126.968 16.4218 124.687 16.4218  c
122.395 16.4218 121.119 17.9531 120.859 21.0156  c
h
134.328 31.0000 m
140.578 22.5156 l
134.515 14.5625 l
138.062 14.5625 l
142.859 20.8906 l
147.203 14.5625 l
150.109 14.5625 l
144.406 22.9062 l
150.609 31.0000 l
147.062 31.0000 l
142.109 24.4843 l
137.328 31.0000 l
134.328 31.0000 l
h
164.984 31.0000 m
164.984 7.09375 l
167.968 7.09375 l
167.968 17.6562 l
169.541 15.3541 171.468 14.2031 173.750 14.2031  c
175.166 14.2031 176.299 14.6536 177.148 15.5546  c
177.997 16.4557 178.421 17.6666 178.421 19.1875  c
178.421 31.0000 l
175.437 31.0000 l
175.437 20.1562 l
175.437 18.9375 175.257 18.0677 174.898 17.5468  c
174.539 17.0260 173.947 16.7656 173.125 16.7656  c
171.302 16.7656 169.583 17.9635 167.968 20.3593  c
167.968 31.0000 l
164.984 31.0000 l
h
194.265 31.0000 m
194.265 27.9062 l
192.682 30.2187 190.760 31.3750 188.500 31.3750  c
187.062 31.3750 185.919 30.9244 185.070 30.0234  c
184.221 29.1224 183.796 27.9062 183.796 26.3750  c
183.796 14.5625 l
186.781 14.5625 l
186.781 25.4062 l
186.781 26.6354 186.960 27.5104 187.320 28.0312  c
187.679 28.5520 188.276 28.8125 189.109 28.8125  c
190.932 28.8125 192.651 27.6145 194.265 25.2187  c
194.265 14.5625 l
197.234 14.5625 l
197.234 31.0000 l
194.265 31.0000 l
h
202.984 31.0000 m
202.984 7.09375 l
205.968 7.09375 l
205.968 31.0000 l
202.984 31.0000 l
h
211.984 31.0000 m
211.984 7.09375 l
214.968 7.09375 l
214.968 31.0000 l
211.984 31.0000 l
h
f
Q
cliprestore
newpath
0 0 m
0 38.0000 l
223.000 38.0000 l
223.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 37.0000 349.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -37.0000 -349.000 ] concat
cliprestore
newpath
34.0000 272.000 m
34.0000 390.000 l
365.000 390.000 l
365.000 272.000 l
h
W
Q
Q
2 J
0 j
newpath
35.5000 273.500 m
362.500 273.500 l
362.500 387.500 l
35.5000 387.500 l
35.5000 273.500 l
h
S
0 J
1 j
Q
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 270 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
3.00000 w
[ 3.00000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 188.000 m
222.056 188.000 l
222.386 184.722 l
235.170 22.9374 l
235.477 19.0909 l
368.949 19.0909 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
q
3.00000 w
[ 22.5000 7.50000 ] 0 d
0.752941 0.752941 0.752941 RG
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 19.0909 m
128.653 19.0909 l
128.740 19.2824 l
168.398 186.570 l
169.108 188.000 l
368.949 188.000 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
q
3.00000 w
99.0000 15.0909 273.949 175.909 rc
newpath
102.000 188.000 m
128.653 188.000 l
128.740 187.808 l
168.398 20.5203 l
169.108 19.0909 l
222.056 19.0909 l
222.386 22.3684 l
235.170 184.153 l
235.477 188.000 l
368.949 188.000 l
S
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
102.000 188.000 m
368.949 188.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
231 233 8 37 rc
Q
cliprestore
newpath
0 0 m
0 270.000 l
390.000 270.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
102.000 188.000 m
102.000 193.200 l
S
Q
q
newpath
168.737 188.000 m
168.737 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
166.765 231.093 m
166.765 228.421 l
168.255 229.015 169.666 229.312 171.000 229.312  c
172.479 229.312 173.640 228.880 174.484 228.015  c
175.328 227.151 175.750 225.958 175.750 224.437  c
175.750 221.072 173.432 219.390 168.796 219.390  c
168.276 219.390 167.724 219.427 167.140 219.500  c
167.140 208.593 l
178.484 208.593 l
178.484 211.203 l
169.765 211.203 l
169.765 217.109 l
172.640 217.109 174.885 217.768 176.500 219.085  c
178.114 220.403 178.921 222.234 178.921 224.578  c
178.921 226.755 178.187 228.463 176.718 229.703  c
175.250 230.942 173.213 231.562 170.609 231.562  c
169.484 231.562 168.203 231.406 166.765 231.093  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
235.474 188.000 m
235.474 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
224.656 231.000 m
224.656 228.765 l
229.140 228.765 l
229.140 211.078 l
224.656 212.203 l
224.656 209.906 l
232.140 208.031 l
232.140 228.765 l
236.625 228.765 l
236.625 231.000 l
224.656 231.000 l
h
249.718 231.562 m
247.406 231.562 245.536 230.474 244.109 228.296  c
242.682 226.119 241.968 223.281 241.968 219.781  c
241.968 216.250 242.687 213.408 244.125 211.257  c
245.562 209.106 247.458 208.031 249.812 208.031  c
252.156 208.031 254.049 209.106 255.492 211.257  c
256.934 213.408 257.656 216.234 257.656 219.734  c
257.656 223.328 256.934 226.197 255.492 228.343  c
254.049 230.489 252.125 231.562 249.718 231.562  c
h
249.750 229.312 m
252.906 229.312 254.484 226.104 254.484 219.687  c
254.484 213.416 252.927 210.281 249.812 210.281  c
246.697 210.281 245.140 213.447 245.140 219.781  c
245.140 226.135 246.677 229.312 249.750 229.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
302.212 188.000 m
302.212 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
291.656 231.000 m
291.656 228.765 l
296.140 228.765 l
296.140 211.078 l
291.656 212.203 l
291.656 209.906 l
299.140 208.031 l
299.140 228.765 l
303.625 228.765 l
303.625 231.000 l
291.656 231.000 l
h
310.765 231.093 m
310.765 228.421 l
312.255 229.015 313.666 229.312 315.000 229.312  c
316.479 229.312 317.640 228.880 318.484 228.015  c
319.328 227.151 319.750 225.958 319.750 224.437  c
319.750 221.072 317.432 219.390 312.796 219.390  c
312.276 219.390 311.724 219.427 311.140 219.500  c
311.140 208.593 l
322.484 208.593 l
322.484 211.203 l
313.765 211.203 l
313.765 217.109 l
316.640 217.109 318.885 217.768 320.500 219.085  c
322.114 220.403 322.921 222.234 322.921 224.578  c
322.921 226.755 322.187 228.463 320.718 229.703  c
319.250 230.942 317.213 231.562 314.609 231.562  c
313.484 231.562 312.203 231.406 310.765 231.093  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
368.949 188.000 m
368.949 193.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
355.578 231.000 m
355.578 228.375 l
356.442 226.354 358.197 224.145 360.843 221.750  c
362.546 220.218 l
364.744 218.229 365.843 216.255 365.843 214.296  c
365.843 213.046 365.468 212.065 364.718 211.351  c
363.968 210.638 362.937 210.281 361.625 210.281  c
360.072 210.281 358.244 210.880 356.140 212.078  c
356.140 209.437 l
358.119 208.500 360.088 208.031 362.046 208.031  c
364.151 208.031 365.838 208.596 367.109 209.726  c
368.380 210.856 369.015 212.359 369.015 214.234  c
369.015 215.567 368.695 216.755 368.054 217.796  c
367.414 218.838 366.218 220.099 364.468 221.578  c
363.328 222.562 l
360.932 224.593 359.546 226.531 359.171 228.375  c
368.906 228.375 l
368.906 231.000 l
355.578 231.000 l
h
382.718 231.562 m
380.406 231.562 378.536 230.474 377.109 228.296  c
375.682 226.119 374.968 223.281 374.968 219.781  c
374.968 216.250 375.687 213.408 377.125 211.257  c
378.562 209.106 380.458 208.031 382.812 208.031  c
385.156 208.031 387.049 209.106 388.492 211.257  c
389.934 213.408 390.656 216.234 390.656 219.734  c
390.656 223.328 389.934 226.197 388.492 228.343  c
387.049 230.489 385.125 231.562 382.718 231.562  c
h
382.750 229.312 m
385.906 229.312 387.484 226.104 387.484 219.687  c
387.484 213.416 385.927 210.281 382.812 210.281  c
379.697 210.281 378.140 213.447 378.140 219.781  c
378.140 226.135 379.677 229.312 382.750 229.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
115.347 188.000 m
115.347 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
128.695 188.000 m
128.695 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
142.042 188.000 m
142.042 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
155.390 188.000 m
155.390 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
182.084 188.000 m
182.084 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
195.432 188.000 m
195.432 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
208.779 188.000 m
208.779 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
222.127 188.000 m
222.127 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
248.822 188.000 m
248.822 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
262.169 188.000 m
262.169 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
275.517 188.000 m
275.517 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
288.864 188.000 m
288.864 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
315.559 188.000 m
315.559 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
328.907 188.000 m
328.907 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
342.254 188.000 m
342.254 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
355.602 188.000 m
355.602 190.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
102.000 188.000 m
102.000 19.0909 l
S
Q
0 J
1 j
[ 0 -1.00000 1.00000 0 -78.0000 128.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-40 85 120 37 rc
newpath
-30.9843 103.656 m
-29.3593 101.697 -27.8125 100.718 -26.3437 100.718  c
-25.5833 100.718 -24.9322 100.908 -24.3906 101.289  c
-23.8489 101.669 -23.4166 102.291 -23.0937 103.156  c
-22.8645 103.770 -22.7500 104.703 -22.7500 105.953  c
-22.7500 111.859 l
-22.7500 112.744 -22.6822 113.343 -22.5468 113.656  c
-22.4322 113.906 -22.2526 114.101 -22.0078 114.242  c
-21.7630 114.382 -21.3072 114.453 -20.6406 114.453  c
-20.6406 115.000 l
-27.5000 115.000 l
-27.5000 114.453 l
-27.2031 114.453 l
-26.5572 114.453 -26.1067 114.354 -25.8515 114.156  c
-25.5963 113.958 -25.4166 113.671 -25.3125 113.296  c
-25.2708 113.140 -25.2500 112.661 -25.2500 111.859  c
-25.2500 106.187 l
-25.2500 104.927 -25.4140 104.013 -25.7421 103.445  c
-26.0703 102.877 -26.6250 102.593 -27.4062 102.593  c
-28.6041 102.593 -29.7968 103.250 -30.9843 104.562  c
-30.9843 111.859 l
-30.9843 112.807 -30.9322 113.390 -30.8281 113.609  c
-30.6822 113.901 -30.4869 114.114 -30.2421 114.250  c
-29.9974 114.385 -29.4947 114.453 -28.7343 114.453  c
-28.7343 115.000 l
-35.5937 115.000 l
-35.5937 114.453 l
-35.2812 114.453 l
-34.5833 114.453 -34.1093 114.273 -33.8593 113.914  c
-33.6093 113.554 -33.4843 112.869 -33.4843 111.859  c
-33.4843 106.718 l
-33.4843 105.052 -33.5234 104.036 -33.6015 103.671  c
-33.6796 103.307 -33.7968 103.059 -33.9531 102.929  c
-34.1093 102.799 -34.3177 102.734 -34.5781 102.734  c
-34.8593 102.734 -35.1979 102.812 -35.5937 102.968  c
-35.8125 102.421 l
-31.6406 100.718 l
-30.9843 100.718 l
-30.9843 103.656 l
h
-17.7031 106.359 m
-17.7135 108.411 -17.2135 110.026 -16.2031 111.203  c
-15.1927 112.369 -14.0052 112.953 -12.6406 112.953  c
-11.7343 112.953 -10.9453 112.703 -10.2734 112.203  c
-9.60156 111.703 -9.04166 110.849 -8.59375 109.640  c
-8.12500 109.937 l
-8.33333 111.322 -8.94791 112.583 -9.96875 113.718  c
-10.9895 114.854 -12.2656 115.421 -13.7968 115.421  c
-15.4635 115.421 -16.8880 114.773 -18.0703 113.476  c
-19.2526 112.179 -19.8437 110.437 -19.8437 108.250  c
-19.8437 105.875 -19.2369 104.023 -18.0234 102.695  c
-16.8099 101.367 -15.2864 100.703 -13.4531 100.703  c
-11.8906 100.703 -10.6119 101.216 -9.61718 102.242  c
-8.62239 103.268 -8.12500 104.640 -8.12500 106.359  c
-17.7031 106.359 l
h
-17.7031 105.484 m
-11.2812 105.484 l
-11.3333 104.588 -11.4375 103.963 -11.5937 103.609  c
-11.8541 103.036 -12.2343 102.588 -12.7343 102.265  c
-13.2343 101.942 -13.7552 101.781 -14.2968 101.781  c
-15.1302 101.781 -15.8776 102.106 -16.5390 102.757  c
-17.2005 103.408 -17.5885 104.317 -17.7031 105.484  c
h
5.75000 109.734 m
5.37500 111.557 4.64322 112.960 3.55468 113.945  c
2.46614 114.929 1.26041 115.421 -0.0625000 115.421  c
-1.63541 115.421 -3.00781 114.760 -4.17968 113.437  c
-5.35156 112.114 -5.93750 110.328 -5.93750 108.078  c
-5.93750 105.901 -5.28906 104.130 -3.99218 102.765  c
-2.69531 101.401 -1.14062 100.718 0.671875 100.718  c
2.03645 100.718 3.15885 101.080 4.03906 101.804  c
4.91927 102.528 5.35937 103.281 5.35937 104.062  c
5.35937 104.437 5.23437 104.744 4.98437 104.984  c
4.73437 105.224 4.38541 105.343 3.93750 105.343  c
3.34375 105.343 2.89583 105.151 2.59375 104.765  c
2.42708 104.557 2.31510 104.153 2.25781 103.554  c
2.20052 102.955 1.99479 102.500 1.64062 102.187  c
1.28645 101.885 0.796875 101.734 0.171875 101.734  c
-0.838542 101.734 -1.65104 102.109 -2.26562 102.859  c
-3.07812 103.849 -3.48437 105.156 -3.48437 106.781  c
-3.48437 108.437 -3.07812 109.898 -2.26562 111.164  c
-1.45312 112.429 -0.359375 113.062 1.01562 113.062  c
2.00520 113.062 2.89583 112.724 3.68750 112.046  c
4.23958 111.588 4.78125 110.744 5.31250 109.515  c
5.75000 109.734 l
h
10.2968 106.359 m
10.2864 108.411 10.7864 110.026 11.7968 111.203  c
12.8072 112.369 13.9947 112.953 15.3593 112.953  c
16.2656 112.953 17.0546 112.703 17.7265 112.203  c
18.3984 111.703 18.9583 110.849 19.4062 109.640  c
19.8750 109.937 l
19.6666 111.322 19.0520 112.583 18.0312 113.718  c
17.0104 114.854 15.7343 115.421 14.2031 115.421  c
12.5364 115.421 11.1119 114.773 9.92968 113.476  c
8.74739 112.179 8.15625 110.437 8.15625 108.250  c
8.15625 105.875 8.76302 104.023 9.97656 102.695  c
11.1901 101.367 12.7135 100.703 14.5468 100.703  c
16.1093 100.703 17.3880 101.216 18.3828 102.242  c
19.3776 103.268 19.8750 104.640 19.8750 106.359  c
10.2968 106.359 l
h
10.2968 105.484 m
16.7187 105.484 l
16.6666 104.588 16.5625 103.963 16.4062 103.609  c
16.1458 103.036 15.7656 102.588 15.2656 102.265  c
14.7656 101.942 14.2447 101.781 13.7031 101.781  c
12.8697 101.781 12.1224 102.106 11.4609 102.757  c
10.7994 103.408 10.4114 104.317 10.2968 105.484  c
h
30.9375 100.718 m
30.9375 105.453 l
30.4375 105.453 l
30.0520 103.963 29.5572 102.953 28.9531 102.421  c
28.3489 101.890 27.5833 101.625 26.6562 101.625  c
25.9583 101.625 25.3906 101.809 24.9531 102.179  c
24.5156 102.549 24.2968 102.963 24.2968 103.421  c
24.2968 103.984 24.4583 104.468 24.7812 104.875  c
25.0937 105.291 25.7291 105.729 26.6875 106.187  c
28.9062 107.265 l
30.9479 108.265 31.9687 109.583 31.9687 111.218  c
31.9687 112.479 31.4921 113.494 30.5390 114.265  c
29.5859 115.036 28.5208 115.421 27.3437 115.421  c
26.5000 115.421 25.5312 115.270 24.4375 114.968  c
24.1041 114.864 23.8333 114.812 23.6250 114.812  c
23.3854 114.812 23.2031 114.947 23.0781 115.218  c
22.5781 115.218 l
22.5781 110.265 l
23.0781 110.265 l
23.3593 111.671 23.8984 112.734 24.6953 113.453  c
25.4921 114.171 26.3854 114.531 27.3750 114.531  c
28.0729 114.531 28.6406 114.325 29.0781 113.914  c
29.5156 113.502 29.7343 113.010 29.7343 112.437  c
29.7343 111.739 29.4895 111.153 29.0000 110.679  c
28.5104 110.205 27.5338 109.606 26.0703 108.882  c
24.6067 108.158 23.6458 107.505 23.1875 106.921  c
22.7395 106.338 22.5156 105.609 22.5156 104.734  c
22.5156 103.599 22.9062 102.645 23.6875 101.875  c
24.4687 101.104 25.4791 100.718 26.7187 100.718  c
27.2708 100.718 27.9322 100.838 28.7031 101.078  c
29.2239 101.224 29.5677 101.296 29.7343 101.296  c
29.8906 101.296 30.0156 101.263 30.1093 101.195  c
30.2031 101.127 30.3125 100.968 30.4375 100.718  c
30.9375 100.718 l
h
41.9375 100.718 m
41.9375 105.453 l
41.4375 105.453 l
41.0520 103.963 40.5572 102.953 39.9531 102.421  c
39.3489 101.890 38.5833 101.625 37.6562 101.625  c
36.9583 101.625 36.3906 101.809 35.9531 102.179  c
35.5156 102.549 35.2968 102.963 35.2968 103.421  c
35.2968 103.984 35.4583 104.468 35.7812 104.875  c
36.0937 105.291 36.7291 105.729 37.6875 106.187  c
39.9062 107.265 l
41.9479 108.265 42.9687 109.583 42.9687 111.218  c
42.9687 112.479 42.4921 113.494 41.5390 114.265  c
40.5859 115.036 39.5208 115.421 38.3437 115.421  c
37.5000 115.421 36.5312 115.270 35.4375 114.968  c
35.1041 114.864 34.8333 114.812 34.6250 114.812  c
34.3854 114.812 34.2031 114.947 34.0781 115.218  c
33.5781 115.218 l
33.5781 110.265 l
34.0781 110.265 l
34.3593 111.671 34.8984 112.734 35.6953 113.453  c
36.4921 114.171 37.3854 114.531 38.3750 114.531  c
39.0729 114.531 39.6406 114.325 40.0781 113.914  c
40.5156 113.502 40.7343 113.010 40.7343 112.437  c
40.7343 111.739 40.4895 111.153 40.0000 110.679  c
39.5104 110.205 38.5338 109.606 37.0703 108.882  c
35.6067 108.158 34.6458 107.505 34.1875 106.921  c
33.7395 106.338 33.5156 105.609 33.5156 104.734  c
33.5156 103.599 33.9062 102.645 34.6875 101.875  c
35.4687 101.104 36.4791 100.718 37.7187 100.718  c
38.2708 100.718 38.9322 100.838 39.7031 101.078  c
40.2239 101.224 40.5677 101.296 40.7343 101.296  c
40.8906 101.296 41.0156 101.263 41.1093 101.195  c
41.2031 101.127 41.3125 100.968 41.4375 100.718  c
41.9375 100.718 l
h
47.5000 93.4687 m
47.9166 93.4687 48.2760 93.6197 48.5781 93.9218  c
48.8802 94.2239 49.0312 94.5833 49.0312 95.0000  c
49.0312 95.4270 48.8802 95.7916 48.5781 96.0937  c
48.2760 96.3958 47.9166 96.5468 47.5000 96.5468  c
47.0729 96.5468 46.7083 96.3958 46.4062 96.0937  c
46.1041 95.7916 45.9531 95.4270 45.9531 95.0000  c
45.9531 94.5833 46.1015 94.2239 46.3984 93.9218  c
46.6953 93.6197 47.0625 93.4687 47.5000 93.4687  c
h
48.7500 100.718 m
48.7500 111.859 l
48.7500 112.734 48.8125 113.315 48.9375 113.601  c
49.0625 113.888 49.2500 114.101 49.5000 114.242  c
49.7500 114.382 50.2031 114.453 50.8593 114.453  c
50.8593 115.000 l
44.1250 115.000 l
44.1250 114.453 l
44.8020 114.453 45.2552 114.388 45.4843 114.257  c
45.7135 114.127 45.8958 113.911 46.0312 113.609  c
46.1666 113.307 46.2343 112.724 46.2343 111.859  c
46.2343 106.515 l
46.2343 105.015 46.1927 104.046 46.1093 103.609  c
46.0364 103.286 45.9244 103.059 45.7734 102.929  c
45.6224 102.799 45.4166 102.734 45.1562 102.734  c
44.8645 102.734 44.5208 102.812 44.1250 102.968  c
43.9062 102.421 l
48.0937 100.718 l
48.7500 100.718 l
h
57.0000 96.5781 m
57.0000 101.140 l
60.2343 101.140 l
60.2343 102.187 l
57.0000 102.187 l
57.0000 111.187 l
57.0000 112.083 57.1276 112.687 57.3828 113.000  c
57.6380 113.312 57.9687 113.468 58.3750 113.468  c
58.7083 113.468 59.0312 113.364 59.3437 113.156  c
59.6562 112.947 59.8958 112.645 60.0625 112.250  c
60.6562 112.250 l
60.3020 113.239 59.8020 113.984 59.1562 114.484  c
58.5104 114.984 57.8437 115.234 57.1562 115.234  c
56.6979 115.234 56.2474 115.104 55.8046 114.843  c
55.3619 114.583 55.0338 114.213 54.8203 113.734  c
54.6067 113.255 54.5000 112.515 54.5000 111.515  c
54.5000 102.187 l
52.2968 102.187 l
52.2968 101.687 l
52.8593 101.468 53.4296 101.093 54.0078 100.562  c
54.5859 100.031 55.1041 99.4062 55.5625 98.6875  c
55.7916 98.3020 56.1145 97.5989 56.5312 96.5781  c
57.0000 96.5781 l
h
61.1875 101.140 m
67.6406 101.140 l
67.6406 101.687 l
67.3281 101.687 l
66.8697 101.687 66.5286 101.786 66.3046 101.984  c
66.0807 102.182 65.9687 102.427 65.9687 102.718  c
65.9687 103.114 66.1354 103.661 66.4687 104.359  c
69.8437 111.359 l
72.9375 103.687 l
73.1145 103.281 73.2031 102.875 73.2031 102.468  c
73.2031 102.281 73.1666 102.145 73.0937 102.062  c
73.0104 101.947 72.8828 101.856 72.7109 101.789  c
72.5390 101.721 72.2395 101.687 71.8125 101.687  c
71.8125 101.140 l
76.3125 101.140 l
76.3125 101.687 l
75.9479 101.729 75.6640 101.812 75.4609 101.937  c
75.2578 102.062 75.0364 102.291 74.7968 102.625  c
74.7031 102.760 74.5312 103.145 74.2812 103.781  c
68.6250 117.625 l
68.0833 118.958 67.3697 119.968 66.4843 120.656  c
65.5989 121.343 64.7500 121.687 63.9375 121.687  c
63.3437 121.687 62.8541 121.515 62.4687 121.171  c
62.0833 120.828 61.8906 120.437 61.8906 120.000  c
61.8906 119.572 62.0286 119.231 62.3046 118.976  c
62.5807 118.721 62.9635 118.593 63.4531 118.593  c
63.7864 118.593 64.2395 118.703 64.8125 118.921  c
65.2187 119.067 65.4739 119.140 65.5781 119.140  c
65.8802 119.140 66.2083 118.984 66.5625 118.671  c
66.9166 118.359 67.2760 117.755 67.6406 116.859  c
68.6250 114.453 l
63.6562 104.000 l
63.5000 103.687 63.2552 103.296 62.9218 102.828  c
62.6718 102.474 62.4635 102.239 62.2968 102.125  c
62.0677 101.958 61.6979 101.812 61.1875 101.687  c
61.1875 101.140 l
h
f
Q
cliprestore
newpath
-147.000 83.0000 m
-147.000 473.000 l
123.000 473.000 l
123.000 83.0000 l
h
W
Q
[ 0 -1.00000 1.00000 0 -78.0000 128.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
newpath
102.000 188.000 m
96.8000 188.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
87.7187 206.562 m
85.4062 206.562 83.5364 205.474 82.1093 203.296  c
80.6822 201.119 79.9687 198.281 79.9687 194.781  c
79.9687 191.250 80.6875 188.408 82.1250 186.257  c
83.5625 184.106 85.4583 183.031 87.8125 183.031  c
90.1562 183.031 92.0494 184.106 93.4921 186.257  c
94.9349 188.408 95.6562 191.234 95.6562 194.734  c
95.6562 198.328 94.9349 201.197 93.4921 203.343  c
92.0494 205.489 90.1250 206.562 87.7187 206.562  c
h
87.7500 204.312 m
90.9062 204.312 92.4843 201.104 92.4843 194.687  c
92.4843 188.416 90.9270 185.281 87.8125 185.281  c
84.6979 185.281 83.1406 188.447 83.1406 194.781  c
83.1406 201.135 84.6770 204.312 87.7500 204.312  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 154.218 m
96.8000 154.218 l
S
Q
q
newpath
102.000 120.436 m
96.8000 120.436 l
S
Q
q
newpath
102.000 86.6545 m
96.8000 86.6545 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
57.7187 104.562 m
55.4062 104.562 53.5364 103.474 52.1093 101.296  c
50.6822 99.1197 49.9687 96.2812 49.9687 92.7812  c
49.9687 89.2500 50.6875 86.4088 52.1250 84.2578  c
53.5625 82.1067 55.4583 81.0312 57.8125 81.0312  c
60.1562 81.0312 62.0494 82.1067 63.4921 84.2578  c
64.9349 86.4088 65.6562 89.2343 65.6562 92.7343  c
65.6562 96.3281 64.9349 99.1979 63.4921 101.343  c
62.0494 103.489 60.1250 104.562 57.7187 104.562  c
h
57.7500 102.312 m
60.9062 102.312 62.4843 99.1041 62.4843 92.6875  c
62.4843 86.4166 60.9270 83.2812 57.8125 83.2812  c
54.6979 83.2812 53.1406 86.4479 53.1406 92.7812  c
53.1406 99.1354 54.6770 102.312 57.7500 102.312  c
h
71.0312 104.000 m
71.0312 100.265 l
74.7656 100.265 l
74.7656 104.000 l
71.0312 104.000 l
h
83.3281 92.3906 m
84.7552 90.5468 86.5468 89.6250 88.7031 89.6250  c
90.6614 89.6250 92.2630 90.2734 93.5078 91.5703  c
94.7526 92.8671 95.3750 94.5260 95.3750 96.5468  c
95.3750 98.8802 94.6770 100.799 93.2812 102.304  c
91.8854 103.809 90.1093 104.562 87.9531 104.562  c
85.4843 104.562 83.5546 103.567 82.1640 101.578  c
80.7734 99.5885 80.0781 96.8281 80.0781 93.2968  c
80.0781 89.4114 80.8776 86.3932 82.4765 84.2421  c
84.0755 82.0911 86.3281 81.0156 89.2343 81.0156  c
90.5677 81.0156 92.2343 81.3020 94.2343 81.8750  c
94.2343 84.4687 l
92.1197 83.6666 90.3906 83.2656 89.0468 83.2656  c
85.2343 83.2656 83.3281 86.3072 83.3281 92.3906  c
h
92.3750 97.2187 m
92.3750 95.5208 91.9947 94.1875 91.2343 93.2187  c
90.4739 92.2500 89.4166 91.7656 88.0625 91.7656  c
86.8020 91.7656 85.7187 92.1901 84.8125 93.0390  c
83.9062 93.8880 83.4531 94.9062 83.4531 96.0937  c
83.4531 97.9687 83.8828 99.4739 84.7421 100.609  c
85.6015 101.744 86.7447 102.312 88.1718 102.312  c
89.4531 102.312 90.4739 101.851 91.2343 100.929  c
91.9947 100.007 92.3750 98.7708 92.3750 97.2187  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 52.8727 m
96.8000 52.8727 l
S
Q
q
newpath
102.000 19.0909 m
96.8000 19.0909 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
82.6562 37.0000 m
82.6562 34.7656 l
87.1406 34.7656 l
87.1406 17.0781 l
82.6562 18.2031 l
82.6562 15.9062 l
90.1406 14.0312 l
90.1406 34.7656 l
94.6250 34.7656 l
94.6250 37.0000 l
82.6562 37.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 171.109 m
99.4000 171.109 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 137.327 m
99.4000 137.327 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 103.545 m
99.4000 103.545 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 69.7636 m
99.4000 69.7636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
102.000 35.9818 m
99.4000 35.9818 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

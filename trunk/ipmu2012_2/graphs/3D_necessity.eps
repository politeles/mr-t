%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 196 575 595
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 18.04 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
492 353 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
492.000 0 l
492.000 353.000 l
0 353.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 553.000 527.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -553.000 -527.000 ] concat
q
[ 1096.00 0 0 1044.00 5.00000 5.00000 ] concat
<<
/ImageType 1
/Width 1096  /Height 1044
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [1096 0 0 1044 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0Wd?:7cMu_6&s%d9C[qi9S^d`jZ"e>269fnMW8<jmPRI:plzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzTW?E=W?2-@!6FUfaI$W@!.areRg&im\@
'Z$kZRrd!-Xi[#gI#b!!$P1s!IlF"3tpuL[kEF!$Wom6pPIP1"61'!83UN9f'D*iu9oW!'j;Uc^oOm2e
\..!!(B<-G3f1F+0<GjT^]M>rCFm"!@RDXn_*Zal^%%?gou&%Ip\d!!!qc>>?c^meYqa!rnY'cgh`tp&
kAGo5re]Q#G,&f*"<nVLebWXoSO\$KdeFeP<_3l)a;Z,fi'8CB+@EK"5K.f8%M7%gd],m:;?gB!).7TX
fB8r[N]<9s`Wj"2iN5Qtl[%B^Xu':$Em5Ru9q36ef9F[J9j3a"u<I!79;0@Wl9u@6Kln_//i%Z`3#)O;
I?YS$+aN!,/Ol<0mfTfu'9^M,k#b!&1Z<:dcXj->SPu!!'f@]=nPL)*36@@O_bS,Q[rGpf>/*^DnXOhk
jO?Ubpoo$50<O!!"/:7@;>h09u@pE0,=8!!'fM"ht=a+@tQG9TqjE!5RW3hM\A7RGLDiHkE6?pX2I+U]
:D1PH95T-$!N6VgbG`pM9&&j$s(LJEMdHmg+@SVLE%:I#uE.DIu*5!!&)3j@_+f25q2h!!&)-r-loL+D
heBf)PdN-(fecb5QNYbF&5H3O1TbG;3m7/i]IO&u:TC>mUK2n.Y/#,OKB@;G2M.rD7fV0Z\@\lL@o3l9
Ta-d?O\3!%%;%r3LO4iOZ%$5?(ZQef4s9i8!'fgNdt`GpNFj5Xa=DG'XChZ=^GC8<D@ZdpFb&Zl5b?e<
'Ar!!%ODV$;)2n`Ehg-EW4MX,ksRUibLiH(r`^P2*5YHR/Xl5X`J,[W9um?GlF1q&l;ZY"fZ;dQt`#!<
<+O;K]=8_'@Y1"R25Ng\?lq8cSjA?&!R0Z[3IQi1GjP[*;2$^5;[sQ0&tb!:n=[c-Be$VO/AQe[??+[\
a\516o4@<*BsgQA./"#ljsEbj]MY'J2'V9P9I.!4",rlL?A;`Ih-MT/Z[?!!%Pe.c'@[:YgboBtDBS.t
[+NpR]o9rd*5L.ffVM%f#s'APN-Eq#\jCM,+-W&q0b+pZ/nR]+tP$`!sHo!!(r]82n.cG-[D379GQYV3
Sf&=/4;u/D!inWiWrr;(5%T>>@@86`pOl!,*e/UUG#N'@$cX23kLC4-pu=s%37kJ=G8/Rj2^#[h[0kq$
,u8-Ad=?^9OdB!!"WoYArTbM#[O+1Hqp*E-4.]Y!eO`Tl$NBUMZtE!rr<@0V&\Ss12IGqXEVCd_SJ9?&
>FGa5.r>C[0Fk92l8Xp'h!%1f81n.oT5kc"H$HU1KGJP`_lt8>8]Z!!(qQA5_&bE&,M2M3_Ysh9TcCTO
%g&!5(_aF&9X3V=&YQ/#46!&nJRcZbjD4<f^UMBY*,LU:pF7!!"QgC)g?^*%3"T:[16k-i+N@mWGVbo4
N.r88o"<!5.*jhl\f[^BK`W8J9j[g@L.$!8ur_%J/_N-:&n<ZN^C0?L-2pQTF<onPX/9).^1Q[%Lj%qL
TZW;'ZDI!5-lt,<\,o\fe:jo-%0_.SVi,WbluM#8/U)Qu2m(i(p1.NnbY2h\-lmB_lNDC6'YB!.YlC1t
AptoefHq>a-XWF/2C%@r#6OEVfq?J/=Z72O/UrZQH=UEcn,<rL/WWm97tUrrE,XW=I_5=?U\%fX?W/Sc
<!\58+e4!$:A?[isHPW\;FoD6$&)!:V8_/pFY^NHE.U2>9_m,Y63K`Z+sYT&Fmki7mI&k\:a+>GCs:n?
=^;"YnL,!:UiK2L*pC/f-p9ljY]q;5qJ%\Li+#*rl</W:It-mt\uQdXoQ/Z&)MBVlf[(6i[4+8"4GK8)
DR1Z=[pI]lu2;Z7Q%VOONbI7D5DnXf3lHfaP03:Z5!/GdY^P(N%@XRX1]9OSJhDWn*O>!'k.sD=HgBN*
2LZ\n5$*d[L#"%OBaIjS,utfpn3*!$Hp:h1>?i;X6D-Sj1Wp5"-bpP%oat!W[b(lMYJY^&#g>q8"1t8T
_.N)^_Rt!<@ZL4qj2=hp\o-P=,k\I8ZeIOPn?'1(aKdF>3)QBAMgX=e0]>Wt"H:9g.a/7.h\[`S$f`[a
O>'ITptA1?JQ:csPldpIMV/C"K8X61RF/+KNPd8/)St0Ti%5!.Z6XNG,+jNN]loU?03TM2hb]PGn%R!!
#"@A>e.iYJ*%p]^\1IB_q%kM0:K7(8PB5b$P/LTObHoSFrMN25TuXJojXb&$fHHX4lIW=!oI$l*`0l&c
i!J?5_mWKSalsAY4IT92lG->Z7Wq/r9Q.@'<18*aI',9eaYtcnICS'O9*4aRck%A0M!RfHj;qh_rlqWj
ODY!-$St[p8;VVu:8-(Yoh%>GB#$FsX/qk\Uu]qejU0r<E>\(-WCACKMXZr45!m$5.''P9a<9fp-7)`p
X@Gs%AKdam_n*!4]#S6FXV.5;/@?()EnIZh9<=@%qt/cA@iQQHaoNC:bc!?7hY'Q9S_ke12+2huQjtiu
sE;k-@OV8?P.5RKPX4B^`;'P&34LW:OeuIKTY$P2UK,lHcMH8qg!#D[%YmR0>UC-lAbeVI"*cdHY`+Ei
e!;Rc_gO!!%dCHG<+ZfCQ/2Z0_Fl#]efjT>Dt`E`P7ad=EEA)#Ho.!4]X<h,HOdWAC/0]Le4026EnGQK
VZ*G"^>bg5D>6!!(=.ekJl6D$H&3DmC]c&;eC23KU38$cH9P!,u&dDX-i>n(6!nbo.clc6p2tg(&u)$b
C1JcM_Z]m7"4=pi-96VE3$\RoreDCd-p-OOZ3i<8/QnBtDDhD<F;'<I:=J"p!S?DV\8<>,`$>(=OYPh%
NM4c!TkR7'3J+_H[0CE74#5fF;&a8@6Hi<bj`A)I)T[BCcSe1+H/VeZV@@J7iZS9hc_Aq%!>pNUb/[HB
<$$VN6]>3M5M#OT,-,Mf%^Bki<,l>QXtF`b1uF^u`DcOlZ]28+%+88H#B>4AWB@&p4]=n:f=@+9943Zu
)Wh5tYGWXHLgcogHV=^GVK.EbVr=VV?,Ta<S1UI'rK]3MYsl&HI>k,5kW>@>b9!;5/D;gF^gdWbn",!.
a.!^B:)md?#:\LP)s.<*>E(>EU65!$ItLs#03)Q7_+]O\3F>LTIX]/i]Ke5`fl?lJ#3O^L+],Pos.HM_
PG:+MZ5eV8(<)=FKtRd$-/8XKIs4Dj@7BUqW^4mB/h^[Uo-AD:r-1X)0T@!!(fkB%n)8m90ZbP%\[>ZQ
lniGbY$9!!#'Y^L-qd:V62eHB@B[bo1J^BR$r6?YrI,7$5Rs!.\+9Xk0kFNiZA9Qo3j%'%MW!er6X&GG
N_]^N3V><BF_q!!)4jf'1`:Phq+#[bh=AFA&tk8@M!VgJVDJ[VZ<Tag3Q!!4;DJgO)sGo$p%;-*f+f"h
%ub_.FYe!%q8iaWe(;BBu/+FA7reV$5Zfh.p5D%o9SbV$5Zf2;FMokl:_16)FOO*Ed792V6.s+%m:V10
ZQ7g?+5am<?ijK8G1UicS>GY%m9ZbV]A#_j+hb;PuHj[NiJ$4_Z4`XK+RIW-Pf,&hQ3:eO3!/m?T0feR
GZ^!#TVLVKAf:S#t@KE&'tn7.DCp[Uo+lb#>FCA[=8p!3WcaP#_@ccU9qYaX/grKf5q(HqSkO[S21Y/S
D)c-]1tE3=#UM:Sj@.d_BY%=`"a`#Q"Y7Fe[d>\#=IdU2JLNNWT:.c0!d4op)!uj`4'Y;3N-YWpQ#6o?
T"gm?qX4[?ZLL!792,93,c,K*uk)BbI4G[C0X_U(#S$br#J$#t.t&[rn\W'A]_CLM][1_Je,i)?9c?n<
o(sUjfN^D76<@9Z&"/WpQ"Knk:@2[V)=Pe^g.(!!%c.eWS/m+7!4%1r-pMh%E_:4eHEA`ojN`*i*#7<n
gM]XoSM>DJr2ARAe0-7ud_O0BeoS)!$Qk=n_51[j>-n_ehD4D7;oqD5fo-!+;I0/_S5uoXAEg98>o0)Y
ct+?&gqEWZAK!(F?(oC%s(V!#doRP*K4hl+p9ehsj=#aI7FL-:.JUMTdr'WkCGj0Z\@\q.fXZf)PdZGH
rN!D7O:LAh@SuDm-5k"c;lSBre@Xk,"$QC2^d;"07D;f)PdZGJ5C#9[pDu(Ru#a/^^EFmVTgJZ7SGD%5
QN8!"@JZ-/7cc2]Kh/LY4K)W+u(P22;hc$hCMLZ(<8_>QXs[>f2l/'P_rAF%rVMSK@55Uh?Fun]4taZe
C0tM<C:B!!%?A'JrT?40i*iJ&poDHD2`P``B^PL=1\:D+h?QcS3rN!"='?9D81*qk3L\q/=O:+O`35"m
6PAX*2(UE[80Q1#(-Yg;D,l!!'oBe<4[_,p%?X4Lh7[OD`TlQto``*38.;:Z=+k)?><H/oA][Dk?uXLo
`$WLqHA&%+;93b*lnKjfb_G?(Gd![4U47]n3d!!+<=;>I%gu*k<@)3RT'AcU@F?o`nOWhg/K:#MEA2QF
R2"@(6[ug%7H'bq_3/eDJnCT."ph+dhIqOBlqPk+pJ=g<,jV8I#mYK:GWbOLYPq@(:)+fk-sL$Q?"Q:S
M6Y@u8pb23haZ"l6V`^7],5-Hn=I!5nJGaj.QLhtAtNq*alu]+S*b]DONAY`pK*4PLKr'$jo:I@+dM!/
BgsOtE0saH:e1_dU/'g'h1]EMgV;_0>>@e]]lN!2FogL1HqTE*uDp3s\n8M?I'O>Q/qbXsjO%`ngpO>f
U(O!&33,Q7U\Fmi;H"-`Sh%?.OD+q*&n=#@>VAncAgH`Fkq;f@@hrob?fZ%a4HEIm(kkc/EC^M3cPT^U
BSHc<&b2>M;8tUR5fs!%KnIP6];hhoi`iYrpG[;<`qi%'mDj(pNC4F1BpSp9mtqre;3h!0Gc_rp<g?Q_
Yr)Pu4PoH?PQ2bJf5M"bWnZfi@G%T.Z[MimmJNQ8=A`Mt\R`/4g]Z!!sZm?i%QOPG]^BEe:E:WE#$ieT
RO"K%3?MUj<Zca\rKG5Uqo.!.,el=hh/MMf%=iW5">l>B;dFFA6=4_aKuDWo'C]1=tU?Q?\KRZIK$WOM
mQt-GJiUG[GIB>A_P6[kLjDXDU?MaD@M/+!e@nP3(u>-IoQS+0taAi=_FZ!0G%=\Rt<QIDp=`XhXGHrp
%h1CEd!:-V.gnk5&JL+!3O]Yq;H%L<E^7!'jc)c?&^2PB5"6i_Mio@"4[-78>"HN]i!t2n\*SF8/q]ZR
tu+eBoQB!*lQ]8p$G9K'SW0AG&mr`4kb]1.]_ZZc08C,BHTKaGmVSq,$ZWruqLE3,e.g'7%YN>-_%=?M
\g;;5Gl#%!"O/,Y5VQ9&p(Ec<%V_ZPg<qhWAp<+oq[=MR7c3$^PYgJbJ=GF3Spl(GSNtVRo\C*oi)$'5
42q?l<%i2$^/KZaZ(>PIO8V!!%cpDKlZ825U&bT/"rFpO!PtZKCEpnO03</_=5afBfNGgYUfQarF[g!5
Q"&]iY5<1UD:Rn55[?UiNaeNpOt;p=5=6U3_o/%Af4kbr,$+cgU7hD9;$c"Tnbk<LPdsNR4*d_+3=d-!
NO?ftl51RN:0gdj.d9aD-B>[27(Fbtg@*k1I-'FN9gN!;8H0f6!+PP.`'1pA"`"Dkb-8.[=(q+.-i4<8
28.DrJEq!s"jUV\.'MaT7MIEH=j<+Q%5*^+79Kn_(8FnH3i,_eQgND0!*<*WY+9*mg&rl+L:q!RkCgIp
K4)``uI<lRb6W'EA+W56!LOSH"kVSs(A#HYH2gI;)D=d?u-M,Op=ro2/5^D8*LRoo-3W!3#dr)-tbl93
'1RHTUW9Raidd8P?gB\6)J4H9(Bhog#pI+GUWde725V!2/E)]Zlnt4H31/8t+DfhT0e!Hcf)13ZKD#f9
C`_4R,VJomjll9m-CnnZ^IC!*EEA3)fKmGq*MS3)+3A3#Ue)UA/!b/IrllkI8dGUq6>*H/9D>!6ggG7T
hmXl->WeL#oOX/4ekD9'(Vh;qRUC<b"TO]Uml`4SSnP4YHecWTCbIWOea%`O*$5(OQ=%J)n.u$m5cZgV
%[QC?3Gm<)7qu[QMQ^:CR;3C@g9YJ[3hTen:__k.A#3RqmV4JeQBcC$F6lOj32De[@TUZd0*]i"k1rP&
6fNB&aorb_&2BbVdkA9Bd@dd:SL:Jd6P<3<B2.s8/sA[MC8q4VoR7r8t,@l1&/CeT#(ZER_$p0&&J>7#
L6;/^O-Rdf]YWm^"69-*M(*,*Tl[!/\o0ogB$3S`NPMRAFq7F/8*0/Pl&>P6CsCC"WN!RjR]*dRRi@qo
$3,ZFT+%(]cN.[@1lC&&5'sl%3`<G9:`b?NB#<9'p;`7OV%Y4`-e`k&V5AE%FOjY1\0bV:?G`(6khF]Q
]r)!:VK#R^>[75(.T(CR0kt#.\3G\ZXY48T4+P'*eNoA$lV:eHMd!VR+E1;*)#YKU*Bi-<gB6Y.5lCqo
fC2:i1/\HAOSQ3rnakRr.4gg$7hjZh;k3hk)BF[2C7"B"E$ULZOt17t/M)T2?lT9@s7FJDmkGhaZKCBb
Fsbm%V&Qg[UNc^a9$]%&YEKM;4KNr++F<+KLc4GJ@`mq;,jl3BsqR!-j@HIuQ)D5I/fqeq%7<q4+T/fb
O4l\`ScaYo<\Y)gp4q0'\q+QrN(S.dFWijpk/@\Rr12=YY9(`J+?mO1/pAZV;*Y.S42m>9ZjPE)#HhRC
QpQ"6e0J?d?([!0=VCQ^V]-U%C09-e$?;2>*G&PopP!R_@6PcFWZ;Qa8IJ^uLuRCH`E.^MZ4t?6QA8_n
rZ'#Juf+'T[NFrCkld!8n<PZcV'tB!ns&f5rg^hbi+1eH'i3OA`kMF%r9A?d9Df!&$'D%c]oNrQ'O4V.
I9U^/JPuK59Ha.q'ZdcM=`s:_RB+!!$&fCJp#5V"$<:mamu!CKd8@Ir#\sn-5M7<du^'Nut!J>u`O2Hn
)<5*&';VMUa]&+MkUcPdFGuY*03^!rtI?C3R6LBUEQjW:0HKLWq3I'IPlNS=+.2<a5UQbLma5i:0Dkjl
V4/5@.M)I#hQ+[VBkf,29a(.9eC^r*7^Ng=7a%D$p@5!i=aoaBZ']NUmJ%5-M8-:H%ZZe>)un<$Is,CO
Qkagl$0s/D1R7i!i^+e19[MAVs$jV'VTlYT*87UpMI(KU2U:$Fh"(Z]`bQ3g\*Uh#IErDg"o%Ef9#&>k
@o46Yii]4*)>b1/?,lQr9I9c\L\P;PF92DlHnVcQE#a!3g52h>:UKA?IqcaX.-<f(ei=#ogWdF1BpHf?
`%q!!!_'R;9O#rn1Nid;T?UHX=7<;Qm+r>grCIMbD,$!!$pk)_lpXa(O@)de_*lOe8FdHTqsD5?PK#;j
h4^IpH>%WMGf;G4I9BI-q!M9<<T2./o8*Z(^;qXpMW1`&FT]jdO>!B*T[1b3F[^H>G+7,liIn)U_s[P,
FI\qV5>3N0]_dV$A'5P'W_meQK2'i@+j/Dc:u>5#3DfVij5)TC:oI;d*+Fi,X"n*19`rp%,i`Hi\bA3q
H4Ul^[d4gJ*Ygg"!a)p[@Bgc*oCMCaSH0D3ri;&c_p724GU!NY8=K\^']nN8.;;ISt/G.@9K"UcRfHHc
]t'!+beXQ7U-<m[@l8F%n*"Wpr)@)4,Ze3<B1kpqB*aSk?/IVnN+eI,h*<D"GA7_Ge`\;HqI23rn3H<^
1i;1q(Jt4I%aip=*8o%P=tGO'<<Db_&\#!-g;@c#BY*Gh(pjo=VWrH\^eGQq*_^!'irD7OV%YXk`-!5"
GXDkP4%imT",Bo?IUA?m^B@PJ=t?DKe.,>8ZnjG<G3=-+*<KdfBH9WdFk"<>Un"Qnu$bln5nfg"c<YVf
)H\brk,V!!$Wr6d;Qi/l*e<4l@mNG@;P3Z9QYpQY2fl!'j!Pehg/Ka#mrjqhG,B[)\^*T*IK2GHW(g@+
2:)(CcM,R([BCr2/Dko8HDRoi^(]GQ<8Mc%]m+S(0H7abK7g#HsS3^3>$$Dd#%!5htLG=GHQjGAPCh=R
uQ3Rqr#YnT=2$1B>3CS);ROfBdXlJe*4k>k>Yf);VH'!._b3%F=<]1OQ.shPqmFY['E*G-:YtmCBr.W;
lomCu2nj01d%NmS[[bq>\j!X52lJmntM55V&f\RQmd/=d<jE\hVfaDt<8XY7L]lUtOqX`YPm1B2q1<bI
^_aY'J.g,X9Q7jT,@OQgb4(2s&*=<b8G9"*;^djtk7e)ZW,:q&>oq'db$4qCpOFUqJ6u<WrKm.LB=bKI
%(9Y$%%ZPS9>c!:VnG>-bMRa:D^^.EQb(UacQKi19GGA9fXr_H^$+kM5Z.!W_^n8QrDFAYcUlf@[GU4-
66H!.[!IhNDII9MlkSD/lmo.Dtg7]Dqp3`jTCr_?t?YSBD`Li8mG9A/X69:X34ObJ5XN'*/*[e#-SE-2
j%aNk+9Pf/!EB4*>G_gnooaf,W9>)Y6>s!"@Jc-.Dk\@]h`/Kae%O.c"8`^#*/YRZh"2!!)K8TdB<`Zb
n8FN%L%QF7"6*!!%bc\g>hrSRJ[8_F4q7n9EQmA8]kdB<Gt1d]:c:!<=h/74jp&Y6f8E>HW,LJ>]uQ-.
D"a@]jFj"V1V&(t\`$S3D;NQFZ,b='YG.UB(@65f8m]GLr@qjuTYm!.ZG2dZV.8F-4lnA&FdL[>gac!.
]t'8&\Mi+6_2![q(r=lW!#8&`l-=QN.$$FZp26$R,g7':l5rbepD9fC\$%!!$tlj`hC[=S@b5LKcMUL$
HHYe'4<Hg!]s%YU]ZXUQOl[>go+-!rtS:]=q+J.mdt?NoJikl-!>\hiKLj!<>5Xk.*t]esX'\'X%lEJ<
S:)27jW2o^Oi.0\6`_r'^_gn1#7!24q0FZs[4o>+K6KQp#_G!!""fA?Lcmhcuph)lPUF$nCG:]LDl$%V
R`OHr%N-m(U8Sk*dR\Y6E5X!5PV_Vo[0(=^AB"3'E[F;Xn2s!8+-u>SDD@nulr[jC,45B(a^5)$'^c3V
Mk>P5:q'^G;+c-7>u8!._Rb6d<*Z>baI*Ai\%ZNfrnK!<>[PY9ienZ^f5sRJgGLSeM0TiCl(rR;;Bb$3
C2EB^^`3(hIk\_"3hQ-NsJm"'o&Ak*k?n,6.^h\8d^u\L&o3)?>;X1hd7jk8I,m*hE`>JBYY0SW10,)m
9hRJ@j1:j^G;``DZa:E%h's,g8,kfREmO47[Zd%*URHGV&mqgmrV+/9B'T[N,A+)8'*8cu5ZK'_H%m!<
A]]K/\IoAeZ0o!:WrK^&EHoNQpq6D?Bl$Ri;U'R;4j)K`_=fLW6M:F%oFg)$&T3]WL"FII>!:!s$!%<q
'jrImt7FA@<9S!+#>qbVb`m[f?D%Baue*Y.9Qu"TVq%QZr[TbscFt!!"<+nE.qPc.Pkm!$X7Z%;E]6ZC
([m`9G9GZ'2<B8H8aNd70_*)fNS7!W[1oIe"b*c$;2Y!.aZ_k%E>[1[H._!,ZF'&$pE!fJ`d1Y2IRr@r
0k*Xu$+YY,:15bDtt!])Vip_qXFffW-.H'`\74BgIAf<.nNY!+6MSBS9[FA;^Ef(s?QI2VF]0f+.i]H"
]o&CefhX!<=5]DnMFhQ6fT?!!&F$<gW0pN"#df+?se`ce+4!f*23TpS**7Yn_cT!rr=FUlYIa+20W6!.
[0&\YJWZ>C+m$!!(@7o!\8:VuPn##6<\-hYa8L4&>e!cStn)ch>XRpP!8Y_G^X=i)O+9n\4CThfc^6!5
-e85,%V?PC;1A$NL1qBn0Q2VCsr(!!&C3akQ]R5KB*QNrT/VnbAFFfdHR]ZNC2X\7`S8s3stop9Or'!6
7408Uf`G4n>BK!2,0=G0A2nWTTfa!!'D!]MCILl#`Nkli7%$Fe7)F5NZ2lF!:Sad*6'<%6WQ"*qNV:!5
K-VBW(<J$?rZq!!"daHXD3eqJTY%!!&g8ld%lQ[.7Gi3<0&TFji8GNb.+QAcMh@M`]c`\6$LjggL0_\>
+C.hD_J.7\p.d^]WBU[_aW]][;00!5QM-U(u!]AGuo:!8uQ$pZ0FH9O8b?!5(_jcVUI?/c!*]!5Ju=D:
*D?QEr%@!$LG6LhnC!ga)q#?n,C0SuSA]`;fl<'rc(B,cN'>ScA`j5tTf*$tWtJ!<<*Z-::!^]S>AK!!
!!H%KH@V_!Jtb*<6(QB^B^.Wk8<3^i`-&]]c!;D&NBSGd\bo`e2_@!!#AKGgJ.o!!'f]o_bLcT0tki"o
nYle8=2i5RIJk+KZ-_3A-<[2@TWdnE9)aj*$Oc!.[/Bm`*9^@GRd]!!#VDRR*)A"98EC-M\KfVuZku,2
.LgX&UR?4TbZap1cRJ,RFMP!5)-l>9kR@\4m&*!1\7^0H$,o!!(s?bY=:2%s49F!!'OGi<c>V+ohUnL^
le0T`tJs\D#e8LrC2-lkod'd*o.3V/8Ht!.\+%[oYK>\4m&*!/qX1>L#>N!!&[E_ip"P"onYEU[hQne`
/i?"onYa<#T0hb5_MBP$$RsRJuJ0%0-BI(UI7VGn9rU+MZg9REn*m.fo\N35S&czz!!!#cofpuOV'>~>
Q
[ 1.00000 0 0 1.00000 553.000 527.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -553.000 -527.000 ] concat
0 0 492 353 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

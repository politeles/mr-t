%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 188 575 603
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: donderdag 9 juni 2011 18.03 u. PKT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
526 392 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
526.000 0 l
526.000 392.000 l
0 392.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 449.000 527.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -449.000 -527.000 ] concat
q
[ 888.000 0 0 1044.00 5.00000 5.00000 ] concat
<<
/ImageType 1
/Width 888  /Height 1044
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [888 0 0 1044 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0WgN'&M&-Yo1s%iMSUrLC4+rVUm$eBVrE!)*8V*/j^q0i>Ezzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!#
W:7oi[\.J]@%[j.c+VOj+<^%1@pAt?1UBm7f!4;DlR$KQ0!,,r4.Xtf`RK*?+/UuZUn/FXS<ri;/Wk;f
Ogh;BT!.^a,:Lc"a>(5cb2?<g12%,DeD^/fn!&1gG'k\VKn!3tS^n9Edal)&j\$-/=n7Hg8HInERScAb
/1]%`2GG4RH>P;;b2uisIZ2+\Z=+A8<R3'O_KqeYKN)%5=.u_g>0:8)5$6G2+l-Huaj8^lkaD\/m<b,a
L#&n_(13g0`<Zc.d9'hB<J5M]A[fh1sEiX#!H*d?\Ds"O*!+84<T-o#mXjJO"RmPeE$#XmPXg8geIj$f
c!(J5H/oARpe^)&>AVHDkjhAR:GEO`_?po%t9R.2$A+`K^%?L3pE[Cbp-b-2M'#F4'\a6<V9E5oiSG@5
JC%7M^bW"E"3>2AsnsPk^\[SgRb3=4p&6:T4\ZClN.ukD0r/k=_PQCi;>/oo?_<TYBZE9JYNY_('!.]F
`k-X#tA6ml'lth#H!!%>&KXAgHi5r:T:WE;+<\=@Pi/j.p9fFN5k]?@,1&q;X3V0j@:!.pWJG20?TaUp
OL1[EgBA%1T];7Fd!*T[]m_,M,!.aZid;*q\0O>MtW,,]3%BkeLRK*=./:VE>B3@7)hU3>C!%2V8lclk
F=uHh[h+kPn*<:W"XajKOmngI(`ct-p^TSqZ!$I-EL2pl*5(>_C_eH,Zg"(j1F(Y>`9cBLeh/ZlBH@>j
ESq8sG&gY&2qtms/g$71CQQepM%qFA"l\tN7!!'JVbl5ePDM\_$l/gd-6;5)+\'FP/56/K)1?X<uDuIl
%X)n%/elh.u#6;9cf$o1kHZP=U"Ij[:fksMgBqHIIi-'Bd_K+UQpI(.Lcc#$YKplRUT1#%/q#LK$ad*T
Pa58pZ]WCU>FkN\fMr#8@oXji@Fel+LCsNUlO@Q=@&3T!pZJ\:^>@rHXU6?@15t0Hq;E[5E5Uo?G_X:i
^98McSI]le=XY(YQ5Nu3C7G2gH4?ig265af1n:5f,K'SV;:O7.dSIEgT!0C,fhHsR/4!,)9f*8EbJS\Q
AB0ES<fiJ,#om_DjJE/oo=/[QdWBU41n[FBSQ2SElf\=usXisr2hWG+Da=NJfQ=Xpb_$XgK>;lFh[qp?
N<+T^trql`ra[KhAjrkmgW8JQjQN]l(D?&MGp]oXGqu?_u$K_e/)9MpZEge;BBsoJOS0?%t$Zna@_J5M
.#loon)JKP^(:N9T.pU]n]iCC*R/k$)arf$VQIe0a"a_c'qjft*lB+/p$(1e/=FpS9Y-QlPXg6k_@GOL
2%iPF5#J8)'Z@$k%=eXu*g$8.jeL-p<gfOa\d)":RheEei=gf'&R[!cbmWm7Bfl&DD!9bO<!ZtHD?Mti
&&t5$c!*np2O)_Y[hqhN0SW$mI1&uj*"TsUekEQ&J>j%GCb/n1YZE9Sa_8X4\dA@-dZjZrm3ie*QFj!$
]><C-)f5=``DXT%W!4YdfFgL#R;O)+4PbGQBA`Z$'C'"Ce$0IOfc#24tT7P-c="KR-G,D?Go0*'Q!!'r
c-A%MpA`#ad8QE41]U>S)lEWeO<6,1BR[^EmD<6aiQi4YTg:f]!9?I57.VqPZjl5.Wb6j/\bC/8H"oqJ
nS1&iKUN9SB\)q86&M&?LD9DnZJg/B@b?^@G[]JsM!5Qfp3@jLfh(<3+f/%=o$U,p<!.U=#<3%GlD:rr
>X0P(G]^DTE;\)h3!&.DTYFBE*?FF%dUho@n92@V)5"Z[m^sm6sq#'`<ZL?LtXN&PmQZ1Qd!<E$CO"P_
#Q8p`sDZc7*!"Uss"4L4G#RQi`(&CU([e3OQhN!oHm`n74@OD/gdoH\*?,p_e[d7P4\(f(is#qi,fNYn
&GKU_4&gdUk;`P$bf;#K!gMZr7ZJFl3p(E[*\T8Vgn.Ll:58Y#t.GHH/XT8DCi0OmrQcPE9b.`F;V6$g
.!#X!tEaO:-3r=t<[]I$BXIMiYpU2'<J]]66!#XP[HJN`.W3D00Y\^cHd^!TFbg>+Mk)-I][rl893t;7
LATq>X9U*_P8,I0ONM4Nrdo;LeXt0D*nQ&GJO9kp5&=h<Y;AKR*KsG:8CjsfQc)\teJ9r$nlfi5gD"^b
4g"&e*:Kl%O0.[2*DA66!;\n&l>?4;$'h:@>m@29!J/_WtX!jIO'IiqWe)Y3"]j'uVZIQ/EaoHr2PuCL
b=n&60PSIq:PlUl/q>=H<)nKiEDgWmrI?.pLDrUX8.0BSHS&L>ge?LP4*\CApiS1EVb&QY%hS+=Yf&nR
l5.Ua0/^=Kajg;1l:c8]OKtW]SbEb#>m/XquJi!)le_N),A\kZTk5:L0&#HA1XRIeA4ORm%`ZDjFYk0G
p:YBX1ag1$J%OYQ5]WLPWpY,$'G5tt/ZZ'D%ZS0<JRuUgmZLU^M?T.kkgIYHcBO8,IPJ$6[H/@ui4Pji
<kWe_CgZVHLlts.HG>$5e6MS+)\!(B-%s*nh/aXJd!1Lt_mhAO+)M]psRpCKsZGLH>>5%cicUh2^8Q`E
)F(nb^);af^]YrA8dr"B,S>_s0?<^I5a]t-]CieI[o<qEDXT8E.V>n1a4n@dn@Tm:YAT_SGR^Qf'7jDm
(GOe3/hN8.L8&"DM!5-ujo?Q^tKlco?$hcJN=lEE\?7O!hpsHPH*40Oik3B7Dn%3K#"lPqhR<M[B^>*s
7=et#?A\2/-QVCt#[beGN(*;:4AP&K8L?)#.HKm``PRgt(4ARI(%<$N^]9UVrB<'fhqoj4NY:FB]c30f
<T(>_HR'/!oXm&cmgmG"KAW=!1E[CdW/Z4s_PKr`dX4t,WC07ok3Qe5Vra+DDPd4HFm#*C:R_1AYGeX?
rWpAf<XU0=>i!mlP;+fNCXH72*Ni&m_[]DJlf)/fVfE)$^I2:NXH$=W,Z:Hd(Q5.-90)Hr_SgXIP'@,f
QQTj@U?2&dQJ5oZE3kL.sa.#rK,(nIN/9n(I-nEeP;>*`^'ZJ7a\DmGs!.EW;,at'bCQpuc/H7LT)$9;
>ds8/O-Os!ST%;AV9j`dBPlo7XUODmV2KRR:f)q9=^r)CL^sus..BD<&fls,p<leY`7m#GlCWfm%?gIp
RffoEM$Ds)NZLYPj<KsV7?$N@9%95;:/(DM\KM2@e0/D2ak<rn5Q#.h2AaG?tX\!$FcBR_I!'j`LM<m%
gpp+gGp-2_]W9I?kbaEa&S(0>K9DbqNIrk]6Vlb5Z24l9Y<43MSB%nsjqgI;lUq=l&b6m,V$^LfY6HbI
0HTJa@XKYd8Z=V:'AY7uI?iT!J*k&Lgfq-<?O"LFnoEur+q5^#insB;-n0MZ9)u?/36;?UJi-bi\H[Ud
']1:"qc*Ss9hS6AJQL381/Sj**!$nq`=u)Z2,%]kMZ$G$.a`5M4C6"VI-Bj034o0D6/kc**b*`5<W]Uk
H2nlh=2%h_sgY212=Wurb5O%Tr-d0430.`;C!>s=.$CbUlXkE)AAZK/c0ACe%6Z5K<P!:"9apMVa!1>F
:YejB7_QqKP"-q->V!@>@=h3\2AW[u6+JI=7XE0Ku9_:>Trj$Gb?#1Nr25mlFl/Ts)HmVq(QZiR_S-i3
Iek<@&n9eC.Ug$?<F'12_PVZkA)u>)j_RHT#gYV]"9)t&VA@Z<]IOj%r/.4'JNDaqAAE#Q?!G/lIP*?]
uBAjs5OC)N*qtsY-.keFA;79JG7G7$c/'@/*:7pBDbCZ.^8_NJAg\GLQ=1h`>!!rh,0P(u1]4'rO=^B>
>dp&V&AIZf_+Ii-?Q@)Qnr7Y$>ZIp$gas,Sm3O=!LOg<e2g9Br;LFlC>+_Lj1W2!9nFg+G8[Pbf1<4;[
%4D,FiYj?5:ZJ@*Xb0&d=!!ZFXL!:t@XWtd-,5o^qV/0:>fN@"Yr.[D.XRPWBp/X+/dLQ>:U3[1Dr,]U
=1XYBEq9-LW>LOj1*]e$+E?"bB/F6]P,66NbbS1g$6:7*9%77hPaMu;eDu'J`fAnU>XgqnJ!9ie@J*.?
MqpMucX']Kf/(DeO"LI<1A#_%RrcfD7X!;6Y0W6<sfP]2a7bMNaBNV^NA,.0'c^BQ7Mfa<C/CO?5AOjk
1!">mX'K01Mfe"_pVg-ncm,OCKeWaFS,%noB4*od?Qh>_Q&!8XK(f]6=/3(*C:Du@FbKI'3RHJo9X),6
l=Oo07`_QpA#rS?lFsku#U<r=J>*Vf`U.-e?IAsm@I*N/Wd*-'TR^QeP6g!eS!?eKpVQdq[gN7eOZ=%U
;Q7ZmPbB@60RkkTJ(:dAQPhkn([N]>c0W=<7YY2<'g9NnfVVK]:3A]OHZ7OGtK?MQ(1BA?BV,Q#Z,%9.
`&EJk;'l'2(9oBB`>33sq]g^(mUY;q'kJMJ+S-d!(3_WtE;Zp`JAZM*X/_-!Sd)KYAHcgMI:6IC6BWf!
I1>Df][X4=[I;bXPE2)5_KsKr9j[6_WCg(3&E^e89ImZ#Y<SXQHof3B[n$*fJB,d31]4'X,A,G]3kM!M
SL-%Slls$j/bN][k-Rs&Y1IRQ>G]:^haI*#b[%,`k'4W:cDXCQ2=1)0hc<40hbl21i,A_5-/n`IU.lZ.
iXPDcoAQOsL!GJDUB*N-PpH#n/8Y:L\QBc6kQ/.ocbIq1_QMDtE:<j!8PsV"N,&5slKgi0+!G/lej>4&
F<bSA7,tZBUI])1:rQ1H-ZuRL+`lk7P#F]EXGbr[.,0b3[.t"t@II#G>_k)^LK`_OsE1aF/T;'Wl9E86
V5LUXA'5sM[lE]!/ZK:ii=&pr`.q`aj4`ZYHA]pP)A_l.u!!&)-A4:&eY&%h!oJsZ-b0:nUgV's!PYI&
D>MA5`6YUN612eUGmCBC$Nsn/On-i$3B"U=L'Gg024_;5_>Eu\\behA2c0/^Z,\[@2#ABAYK=dqJ_Kr@
Q2(Y5WF2P<K7%,K9Q7jEK%GcH?ZW,0L0Y6B4>dq'q>gE7boGej4%V;[MmquiGG%d3]F(TfdbkM'Zg%k_
WBGEOKCUtK<BE"<B'j2+6<]1oF>KR:i0=RI.Pe.0]Dk)5]\C0q&D_/LtcE7-af4X&UI;i=9m1aa9_I$3
Lp!VF#8TNs;KX&f"?F[TN!1r=L>l5Y(VSBgi[<\mEH/l'5i(L1mjq[b'2msSLD[uiVjIa;@q<DMD/<+0
m>:nM(2I"K)*r4SR=LMC3=-cea%KTtf&6%4:Eib"W1M+CdSgiFM&hbce,gVmZ"^@tslMEcfo7(rl!+`G
u6/4YVgtk<OYLVRj?FI.HW[YuX@+jhuQf"[bRGYr,.[tum"e_>\bjA-]gV=uK&PHH=>8&Yo/KQ3NIWOD
G4N?Y%J3N&<Mj/Sf**LnI]`jhIB(`4^k0KH"`RC8`=lIll`f_:GB)k!FSUYRM6#LV6c;om\%.=;@Q@!I
sgEBId3T)_67WrKM2MsfT#2iB`ZU:`q,?6OTbd'WFZl`,Q\p^Ve`14C9Ft5($0?\:hc2kG8SCt_+n;6E
FAWbcrYcM)NDpCJOEk$8!c8RSjdJF1,$ELuc_n+"Rs6aad]ZuWmGfH=d^[95!3aBu.?>r7VSRhGE9*!l
WT/CgOofq.+WE-Njh=\ImZLZh1Pg'8<Uo\O<=j?6O=`9!G=6t9)gD`2\a'8lMc".BQhe,Ylb7S&$o@5G
%Pg(j(>S]>0H$`gQBD/HPd]*O7kBj>bPHG(>=*`X:2I.IWe;R_B=s&-7PajbgEVE($Sg^`(>nI&in]3.
1\=>F&fro!HII1XubW5:LH>JB.aGU+mM9l4Xh9K9BQC?GHm:?8j=LMG?r-GiR6_k.Y)gq?'EVfRfOSO=
mRhUC:5&9S(l@6,4e(3+#c*hgE>Mf3Ig"$6=Ci$L7:X4ot]*/`:m&L5]cK^pk/S_.tjpLY><Yt8NjM6Y
YXbUY6a46O98*HI!gYSnWH2IgI:go0fQW247k7dXK2-BP[2Z:fKSuAd((L14)S>bh$B#?_'(b`En!"M#
W1HuOWYO:gbh;n/17jDYLo:.g&Dk<Kpp#n$@k=Pc2>FdAWAWK1-PVXhSa(.&XALIojdCP=0m=iCAS/FQ
[ZDJUiQXt+)Wf%$'DAa8N+g\hXiZMH:LCX1]eR</BnFnS?Wm7#d;`)^dFdEZSW+UJ9,m+^#1h;'sbj3O
)c*dhM@X5(\[efYtfqFma->0KQlXXsolrZ7El:Vl\JnK>k<<I2o_W'!]eCd_`?%]#p'T_7Ub(BZK3:sD
;h_+(NmO$mCEb<3nn5O>?Fo^6Z1OG"<:YPmFh&GtCEVekBh6T&dRDDDC;gNWq!+[pU7aK;Y7s>BecDIg
a0a1:dmSHr.'>NpTk&,O.NU`OL>N#>T)?^&k/D#]lYmL/^SGChR]UWW8$X+"_$Fcf,h[:g<@PBDmadK2
BoPjda%KJ&^k03;NXAPNEB/RL6BaXb5NEGZS2(X[`,GO\m<l)nJ\_MXJcCCHWPPJ]:!*EF-<\:eamT#f
6^]0?REb:$:Q+,Mkc:?$ZNP#3YC7@#?(;GD$!FXIClJeLKafR/,qoY>WJr)*d(-0d%l^>@rdtaskJ4H5
<VMkf]9:p]7^YR_N]HqT)3V/21+mlo?Z]90>B=_C)(b[tWDdBi"N=5fhI2;*kO&X^(pjB,XHKWJoG@u*
+MH5dU4LB$4@ba\[T#1V^"$gqX+nI3s[M'Y&>KUQi<,Xn1mqt=JAC9:-F\he5(`r`Yc)/mAZYHLPdZQD
!)janGp+>IOXdAf;8cUEeioOud'&!+QWt>2@l[)j`.oNf<>.hQ6NHP+6_Jgc5B);g7Ad/TmV:D+39f?d
_C*p^,O;?/PX2g:VUIuinaTDbA@Z01H?tjET.b1V_WgP#HrUXI*Cc<XET8L][m?*B07*=UK*r;1.7LXf
Iq*-o9e]]H$CQ.)lDTnNl<sujmo2`]#!O+Cbl7)WngPrN31Q^E-aPW.mPHp'XHKNH/f01L!c2[o"-r\b
9X8d-@r>[imF,]W/(ocbi1V_ZHZJ:R%!sl]BlIaHXWb)Gm>LV=Fd^E_@]a>^^cC*RLR(_:;3!0H%T@FI
pQSLCcUmYj$%VEB?HTYS%dTrK8q+^bhaWiQk!;m]YB25:<AmE/_fJ\bmp9=5Wq2H,#Fb,qu!sh.sW`^Q
H1F&=l_SUQ+/M$;"[;Xej);-t'5HI=b!!2j4CJl"MgMF<m=!Y>I.>p$H-YI>a99@O'i(r=<nq8*RIna?
!P_\]$CAF`.PQgqUPr#mm-c442n0aAT;p?5[RMeQ`-?_"7Shn,F6a((J!*HWi$`BFN;Dg7`UEd2d%R5M
?Q6VGbrg[+N%L#<1J>KC$+k<ZVWgVqJs,@S;&l(VEUZBX;^40uGB<2)8Ou&`kj?UtQeQ1$(Q:3k$&1Jh
//G/Da$SkNY/?OY[G]NRQ":r5Yf4o`0m,_E1;WK(nGhM@g>Mj=8]J4'e^<.Om"Mh%`R^sM@$dPBi'NTB
j7BteP/'cm6B1C#f:S<KIbkM1BV)i.Q[kukjdaC3_2`QL9:[d#2"u>@8cf#`G#CqOY''!"YAB28.T<6!
TgX_8SmZt]jGBZ`jSiNqF1p/Sb!3D&RimUsZ&u1uM:sUka/mW@cGIG@k-nB\W[4tJ&XK-gQ@fjH<AL(@
m4@3TURD$>3YlD=H8M,28UUROGUoZXch-aF=S1to^r4+b!/sD$[)0b+;"J:S-B;"b]lB[VQGIO([;GZG
9T`?5'd[[k5C$S+SHXmtKXWE)QmF%M-=*AU`1Ye3'Mus&E]9C*S3V0l(PNTQ+]Mr<dfhB&fZoRa=Wb.j
7Eu-&$^n8KL@5.\ObaB1T=7#Ss3A5mY:PPWkD10%--,/o8ouuR=):Zh_++U!T3V0iu0^A?=2LKV5B1Ta
5G5bN+.;++Yhlf\dp;-j/E,!T[3mk]`$6/!)X_1,Kp]g3"C&iFrBD,o]TdA'f^#[D6YqGk!,P9`>-;q!
a9Th1b3bECc]OV"C9r$NZlDk;P7iR9Qpo5e0k[5aBI&IC;ZS,?dXk6aH1G=WS,MpIUYI[g9$6&'N5#O7
ZWR7n+o&MXLR18o(oP#EGL;ppi8c^n)eZ=n5R>YV!p=4=>,[o!RDRP,:gtAtl>U'5=%5BpQdGu1k]>1I
32]jG\p,pNX*e/_@*)cRM4PQ*_Xe3%nH?EHDPq$G?*;l_kkWdD-3WKX=LWjR31K?4?AK0erZK9<U;=gc
2r2J9O^_sbB:)TjBVNjYX<5b8Ik-BQYGiV9oE)M(t^/;=f:3uE(<lECUGpZGW*q6=Zn[rMm@@%']'>(S
<L'dDD"r_g9[FE<a1Q0LalU_W)PHG(><d&s2;pK2*_anCd1M?-Ah0qj8o2Ij4.KF-tpNM,TrEsV(#*7a
EQdCV[\WinL1ELKA!&QX*oTu7(8]Js#_\o6Dhj0eC.ShF77dhFL%W\]rk3:s*<5Y*A]fC/B-.UfhqIph
VEr`enQ8&>LlR-Am[]``QR:d^Tn:6pJk+@;Y71@m.!10.&DLQL[>LGF<-1bO$/l0bdH]LXDIYMVTJ.?T
P@*U$9De?(g4.AEMSUV>p\L%'B9&AFK=PX&*`t5Sp&5E-AW7>+nR>9kln7SCp!FTYu.4kM)E!C@F;566
T6So+b5X#icY82;<:S@N]Yl#Lg+_TBJheN-#!>rmq@U*eUmLkJIRA[8dQCF'4)lpij9r^-94(j#k5A?O
4"(3Za)00qfXlR$>]'<<LQ+!s)o&S"\mp4YUdl%EGE2mtkI/C"BU<0Itlmb"Uo=UTakNiP+iRB0n-frS
5T3u9^,\K$gGN_,Un-R=i%fh6^:5fpgTYIe-9jT2I1W,>2)bP5ZWL<iq>UOUT1hho61D;Ab%7e][/'g#
>U^[;nGNKS.D_Y[L[^BiJKFC"+J=Ln=%+gZ9#65h'9[6lqBa2mcd:Xt$K'm+_rpA&aB0Pd=hYra'Db'o
=7<Qm\(;uP)O#G[Kfs<\!o/b_W!'EMP@N7"5RQ@Wk-tf-.P_B3'ps+2l!&2")kKM[FKmYR7o4k`s^!@`
t!':!.>e8OtAreZV?E.5T/8TUL/bZ=J?t`'j@eF'`VD-2\*QXZ)oR*6;18Fn4:S0)[7+oWJ3V.)Hg=li
4$9CjhB$"rObl58-!+=!H;jbnR457oGB-QI&7QGPTlKA)9UC+d=>W7A)*;bpUDre#'!&I\M@?rY:E^e8
9<;,n[IaOAZnkfQu>g90#F5i2?bRD.^!8pYj.EjR0mI&5emf$#:d4hd)%'%hlAh)"ic:l3H$\4RZ152,
$PM#a$>0ad=pD3gJoD-/mLMG?V-iNJPm(UQ/2eqn9CXignoQ4[P1]:l@]-GeW\Qc_S;9j!p)\%<6Wggk
YMO_-7?e\+S373:`hktdV$nMC2WgLZIH>.6PRQ`_feDfe>`rYZN8#J%>?=nn])+fR'AfolO!5(^I$M2)
IIc^7Hh-UYT1V5[>DDJX#$n=5jRH]G;ab5@T%[&V0oBl_=flj8IbErAloK,,DF/F_g>%HiU/HGPACl%F
[r@6J?$Ark9*o;VOA9LDe1qO4[BMdL\8H%aAO32b)M#cU\FCco8fYnD^Y#8$`FnLf)H<QciHJ]TH!0T=
61JMUO$a)=hQIY(j%np3aOoV;#->-N%I"8euq)u$N->-Y%Ft\e.!(g/Q9QSlC<<(&$\*D;MHYfkF]a6q
^'fj_uk*)=ZRGWXHcJ=\*.;qu^;V>6:._)<N/eSJAOmlLU9XE$qR;iERM7WB(lh[<Qi6V)8Ih&eil,i2
*3u!3-l=M=Ufe^"[REG\-.m5[/(h<VEWF#P-D"7RgS66Ff=$KUWZs:cN&V)uIrQ(h7D0/k?bjXQ;\U.(
(AU"5HV;\WOR,`q0qnnV1_WPh`dmJ-r@gbOs9lfAtO;QZI3V2Ri\<=*#i&sbZ,:_m#Mo$k))-$[n`WF>
&jNQS-QN?Sf-Gb74jNJt0P<-\s!6g0bpoTK\[r1G%BZOQ_^`T3:jX4]$_Rg*SQ;!=,Q#ifEc:l(l!l,R
E0q$.OR<e6$5_SAWVkZ9$LZ[D04TL;E30R1tVT>0LnP0+83[W3QRcI-aRQ"d(!8n8ABc^J=dgp*J_MA6
.Gs3*>ijtZErZ:&>!<?u)=DrC3BDUT2M\mrE\:S:^)\r@$VOZ=pk8s],Au`P`1uulphPq*(/8XLi&-5$
<(3XRM)tUq=e(iY0B3+N/"$h>_hp,7e1&"=+QSLN#E#5j":Kp&O)>o?9XmL#c(*`n]p[Y:m2q)c<%K#_
Nh';8%^R:u<!:hfmG7af1+$Z9@L&h=*Cb,TmXo+)A]/=Wk0$c3OA7h:E:+ui/q/bsWA1.F#5P+O_$@et
%<]9haq9n]N(GZI#0FFF:2Ri@'g/eY_GM,#nlV7]F=Ts<fRD.EZrB'DI0.kB.bZ-=2HiP"P`M/*qehD;
<pun>kIfiIn!'Gl?]nuOABj[0CIFR,X]n*ii_?&SW/0CF,k&^.M,J8]m&-/<E'S",jhZI'<ppSrI[d+*
I[kZK948F)[NZRIo??NLQn6/#fX:lS_GZfs%#2jb/J@@9++4Ya%o*sPtV#\;qKr.4trmCD*s",Hk(B>Q
d"O2C:]^Y=9ZKHMTAHDkDUk4CYIm5_ep)*8/;?.j!4\KYB[f/fpnF*_kelO'a\P`Fc-m>;Br824<[eF#
U!)U_!e<VG2Vu;b7F/8lPH"+Zh_nU!Z,k&9A!2('b<&8Ck:AY.+k=Pc*.gQbPOl-"\:\8tTAHDjuOsp;
LrB'BWp7<c<!3Z$eA\*JN^XN0En$u<rTVn+]N9\1,rYY+7;?3B)2_Sf4rg(r1^#qugJ:"scEYSLJqm4!
!8caGN?F[ccr""=LjFqdq!(c*L+lkG!G:u+lj>$ad[,.!9hNKY.Dn<%N5\BHk?uNR!pY8IC?kdMb-]c$
^a'Tqh0W<#FKg#4r*e3VYJ-U=<>^>V24nZAdJEM2mDL(;c4n><IJ-UG^kHGK/U.=&b!8o.E(1WqX3D[4
%!8sE>ZtT/l$[L/@!<@@6Y^+#a4Q$hP!+m:VN&GeX%iBcrJ:aJicFD,[gGo7!gpibbd*;l5)ZZPJTV(0
QfCPZq$ik7pE"QcbL<&Qp!2-I!(>MAnFf\FD!4^<&TkK6GLM.;#TUR+Q;>qp6G6e2q?iEiJ1Ui^#oDem
ZPrUClm4E0b!!'!o?(+F=<SF\Z!(\VKI*1#<[XJ2V7ZhPm/l+:V7Krj#7!Si6P"q1I!<DTh8Wm).2DXn
)!:V6O4t44TJIEb'!:Wss-bU=f)?A\ADHtc)jh-m6!<@GW/+Pk&MuWkM?g-g$3m3lj!;GcKr>p,+!!!?
I(B9%]!.[3.I*-j0.=>/+!0C-7*'!/u!<>+DdNu_fNbfRH!+6Mm"i;FC#lqb`L<,$7-31i;RXZC7n7Y!
9#65THgMiPF2uis6X4?4gq1Deh"9<\<-7SKA"onYEl/ZkootH_H!<D!79O-q03WK/7dk*9]R/d5*;t4#
aTmE>r!s$!edHGho@0$@QV"hf:Us(S@!!#s6%!hgp!!'[VmS[TS<Qga0!0ibdjO%65!9!$:SeNp\!/Ok
X*.536BB9*ne6*"!Xd9"fi/m2tjkgl?0`_8f7D]0-i$(K7zz!6tHI"l>g2~>
Q
[ 1.00000 0 0 1.00000 449.000 527.000 ] concat
[ 1.00000 0 0 -1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 -449.000 -527.000 ] concat
0 0 526 392 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
